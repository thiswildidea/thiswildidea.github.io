/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import e from"../request.js";import{c as r}from"../chunks/asyncUtils.js";import s from"../core/Error.js";import{clone as i}from"../core/lang.js";import{M as o}from"../chunks/MultiOriginJSONSupport.js";import{throwIfAborted as l,isAbortError as n,onAbort as a,isAborted as p,throwIfAbortError as u}from"../core/promiseUtils.js";import{urlToObject as c,objectToQuery as h,addQueryParameters as m,isAbsolute as y,join as d,isProtocolRelative as f,removeTrailingSlash as g,normalize as j,removeFile as S,getAppBaseUrl as x,p as w}from"../core/urlUtils.js";import{property as k}from"../core/accessorSupport/decorators/property.js";import{o as v}from"../chunks/ensureType.js";import{r as _}from"../chunks/reader.js";import{subclass as U}from"../core/accessorSupport/decorators/subclass.js";import{w as b}from"../chunks/writer.js";import I from"../geometry/Extent.js";import T from"../geometry/SpatialReference.js";import R from"./Layer.js";import{APIKeyMixin as P}from"./mixins/APIKeyMixin.js";import{ArcGISCachedService as O}from"./mixins/ArcGISCachedService.js";import{A as L}from"../chunks/ArcGISService.js";import{BlendLayer as A}from"./mixins/BlendLayer.js";import{CustomParametersMixin as E}from"./mixins/CustomParametersMixin.js";import{OperationalLayer as C}from"./mixins/OperationalLayer.js";import{PortalLayer as M}from"./mixins/PortalLayer.js";import{ScaleRangeLayer as D}from"./mixins/ScaleRangeLayer.js";import{L as N}from"../chunks/Logger.js";import{w as q,c as B}from"../chunks/typedArrayUtil.js";import F from"./support/TileInfo.js";import{T as z}from"../chunks/TilemapCache.js";import{W as V,a as $}from"../chunks/unitUtils.js";import{geographicToWebMercator as K}from"../geometry/support/webMercatorUtils.js";import{T as G}from"../chunks/TileKey2.js";import{d as W}from"../chunks/maybe.js";import{c as J}from"../chunks/jsonContext.js";import{e as Q}from"../chunks/persistableUrlUtils.js";import H from"../geometry/Point.js";import Y from"./support/LOD.js";import{S as X}from"../chunks/StyleRepository.js";import{g as Z}from"../chunks/capabilities2.js";import"../config.js";import"../kernel.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/metadata.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../chunks/time.js";import"../geometry/Geometry.js";import"../chunks/jsonMap.js";import"../chunks/Ellipsoid.js";import"../chunks/assets.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/Axis.js";import"../chunks/extentUtils.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";import"../chunks/vec3.js";import"../chunks/vec3f64.js";import"../chunks/common.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../core/Evented.js";import"../core/Identifiable.js";import"../core/Loadable.js";import"../core/Promise.js";import"../chunks/TileInfoTilemapCache.js";import"../chunks/TileKey.js";import"../chunks/ByteSizeUnit.js";import"../chunks/LRUCache.js";import"../chunks/MemCache.js";import"../core/reactiveUtils.js";import"../core/Collection.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../chunks/arcgisLayerUrl.js";import"../chunks/jsonUtils.js";import"../chunks/parser.js";import"../chunks/colorUtils.js";import"../chunks/utils3.js";import"../chunks/screenUtils.js";import"../chunks/mat4.js";import"../chunks/_commonjsHelpers.js";import"../chunks/layerContainerType.js";import"../chunks/commonProperties2.js";import"../TimeExtent.js";import"../chunks/timeUtils.js";import"../chunks/date.js";import"../chunks/locale.js";import"../chunks/timeZoneUtils.js";import"../chunks/datetime.js";import"../support/timeUtils.js";import"../chunks/ElevationInfo.js";import"./support/fieldUtils.js";import"../core/sql.js";import"../intl.js";import"../chunks/messages.js";import"../chunks/arcadeOnDemand.js";import"../chunks/unitConversionUtils.js";import"../chunks/lengthUtils.js";import"../chunks/opacityUtils.js";import"../chunks/layerUtils2.js";import"../portal/Portal.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../chunks/portalItemUtils.js";import"../geometry/projection.js";import"../chunks/projectBuffer.js";import"../chunks/geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"../chunks/zscale.js";import"../chunks/StyleDefinition.js";import"../chunks/enums.js";import"../chunks/enums2.js";import"../chunks/enums3.js";import"../chunks/VertexElementDescriptor.js";import"../Color.js";import"../chunks/colorUtils2.js";import"../chunks/vec4.js";import"../chunks/vec4f64.js";import"../chunks/GeometryUtils.js";import"../chunks/unitBezier.js";import"../chunks/definitions.js";import"../chunks/contextUtils.js";let tt=null;class et{constructor(t,e){this._spriteSource=t,this._maxTextureSize=e,this.devicePixelRatio=1,this._spriteImageFormat="png",this._isRetina=!1,this._spritesData={},this.image=null,this.width=null,this.height=null,this.loadStatus="not-loaded","url"===t.type&&t.spriteFormat&&(this._spriteImageFormat=t.spriteFormat),t.pixelRatio&&(this.devicePixelRatio=t.pixelRatio),this.baseURL=t.spriteUrl}get spriteNames(){const t=[];for(const e in this._spritesData)t.push(e);return t.sort(),t}getSpriteInfo(t){return this._spritesData?this._spritesData[t]:null}async load(t){if(this.baseURL){this.loadStatus="loading";try{await this._loadSprites(t),this.loadStatus="loaded"}catch{this.loadStatus="failed"}}else this.loadStatus="failed"}async _loadSprites(t){this._isRetina=this.devicePixelRatio>1.15;const{width:e,height:r,data:i,json:o}=await this._getSpriteData(this._spriteSource,t),l=Object.keys(o);if(!l||0===l.length||!i)return this._spritesData=this.image=null,void(this.width=this.height=0);this._spritesData=o,this.width=e,this.height=r;const n=Math.max(this._maxTextureSize,4096);if(e>n||r>n){const t=`Sprite resource for style ${this.baseURL} is bigger than the maximum allowed of ${n} pixels}`;throw N.getLogger("esri.layers.support.SpriteSource").error(t),new s("SpriteSource",t)}let a;for(let t=0;t<i.length;t+=4)a=i[t+3]/255,i[t]=i[t]*a,i[t+1]=i[t+1]*a,i[t+2]=i[t+2]*a;this.image=i}async _getSpriteData(t,r){if("image"===t.type){let e,r;if(this.devicePixelRatio<1.15){if(!t.spriteSource1x)throw new s("SpriteSource","no image data provided for low resolution sprites!");e=t.spriteSource1x.image,r=t.spriteSource1x.json}else{if(!t.spriteSource2x)throw new s("SpriteSource","no image data provided for high resolution sprites!");e=t.spriteSource2x.image,r=t.spriteSource2x.json}return"width"in e&&"height"in e&&"data"in e&&(q(e.data)||B(e.data))?{width:e.width,height:e.height,data:new Uint8Array(e.data),json:r}:{...rt(e),json:r}}const i=c(this.baseURL),o=i.query?"?"+h(i.query):"",l=this._isRetina?"@2x":"",n=`${i.path}${l}.${this._spriteImageFormat}${o}`,a=`${i.path}${l}.json${o}`,[p,u]=await Promise.all([e(a,r),e(n,{responseType:"image",...r})]);return{...rt(u.data),json:p.data}}}function rt(t){const e=document.createElement("canvas"),r=e.getContext("2d");e.width=t.width,e.height=t.height,r.drawImage(t,0,0,t.width,t.height);const s=r.getImageData(0,0,t.width,t.height);return{width:t.width,height:t.height,data:new Uint8Array(s.data)}}class st{constructor(t){this.url=t}destroy(){this._tileIndexPromise=null}async fetchTileIndex(){return this._tileIndexPromise||(this._tileIndexPromise=e(this.url).then((t=>t.data.index))),this._tileIndexPromise}async dataKey(t,e){const r=await this.fetchTileIndex();return l(e),this._getIndexedDataKey(r,t)}_getIndexedDataKey(t,e){const r=[e];if(e.level<0||e.row<0||e.col<0||e.row>>e.level>0||e.col>>e.level>0)return null;let s=e;for(;0!==s.level;)s=new G(s.level-1,s.row>>1,s.col>>1,s.world),r.push(s);let i,o,l=t,n=r.pop();if(1===l)return n;for(;r.length;)if(i=r.pop(),o=(1&i.col)+((1&i.row)<<1),l){if(0===l[o]){n=null;break}if(1===l[o]){n=i;break}n=i,l=l[o]}return n}}class it{constructor(t,e){this._tilemap=t,this._tileIndexUrl=e}destroy(){this._tilemap=W(this._tilemap),this._tileIndexPromise=null}async fetchTileIndex(t){return this._tileIndexPromise||(this._tileIndexPromise=e(this._tileIndexUrl,{query:{...t?.query}}).then((t=>t.data.index))),this._tileIndexPromise}dataKey(t,e){const{level:r,row:s,col:i}=t,o=new G(t);return this._tilemap.fetchAvailabilityUpsample(r,s,i,o,e).then((()=>(o.world=t.world,o))).catch((t=>{if(n(t))throw t;return null}))}}class ot{constructor(t){this._tileUrl=t,this._promise=null,this._abortController=null,this._abortOptions=[]}getData(t){null===this._promise&&(this._abortController=new AbortController,this._promise=this._makeRequest(this._tileUrl,this._abortController.signal));const e=this._abortOptions;return e.push(t),a(t,(()=>{e.every((t=>p(t)))&&this._abortController.abort()})),this._promise.then((t=>i(t)))}async _makeRequest(t,r){const{data:s}=await e(t,{responseType:"array-buffer",signal:r});return s}}const lt=new Map;class nt{constructor(t,e,r){this.tilemap=null,this.tileInfo=null,this.capabilities=null,this.fullExtent=null,this.initialExtent=null,this.name=t,this.sourceUrl=e;const s=c(this.sourceUrl),o=i(r),l=o.tiles;if(s)for(let t=0;t<l.length;t++){const e=c(l[t]);e&&(y(e.path)||(e.path=d(s.path,e.path)),l[t]=m(e.path,{...s.query,...e.query}))}this.tileServers=l;const n=r.capabilities&&r.capabilities.split(",").map((t=>t.toLowerCase().trim())),a=!0===r?.exportTilesAllowed,p=!0===n?.includes("tilemap"),u=a&&r.hasOwnProperty("maxExportTilesCount")?r.maxExportTilesCount:0;this.capabilities={operations:{supportsExportTiles:a,supportsTileMap:p},exportTiles:a?{maxExportTilesCount:+u}:null},this.tileInfo=F.fromJSON(o.tileInfo);const h=r.tileMap?m(d(s.path,r.tileMap),s.query??{}):null;p?(this.type="vector-tile",this.tilemap=new it(new z({layer:{parsedUrl:s,tileInfo:this.tileInfo},minLOD:o.minLOD??this.tileInfo.lods[0].level,maxLOD:o.maxLOD??this.tileInfo.lods[this.tileInfo.lods.length-1].level}),h)):h&&(this.tilemap=new st(h)),this.fullExtent=I.fromJSON(r.fullExtent),this.initialExtent=I.fromJSON(r.initialExtent)}destroy(){this.tilemap?.destroy()}async getRefKey(t,e){return await(this.tilemap?.dataKey(t,e))??t}requestTile(t,e,r,s){return function(t,e,r,s,i){const o=c(t),l=o.query;if(l)for(const[t,i]of Object.entries(l))switch(i){case"{x}":l[t]=s.toString();break;case"{y}":l[t]=r.toString();break;case"{z}":l[t]=e.toString()}const n=o.path;return function(t,e){return v(lt,t,(()=>new ot(t))).getData(e).then((e=>(lt.delete(t),e))).catch((e=>{throw lt.delete(t),e}))}(m(n.replaceAll(/\{z\}/gi,e.toString()).replaceAll(/\{y\}/gi,r.toString()).replaceAll(/\{x\}/gi,s.toString()),{...o.query}),i)}(this.tileServers[e%this.tileServers.length],t,e,r,s)}isCompatibleWith(t){const e=this.tileInfo,r=t.tileInfo;if(!e.spatialReference.equals(r.spatialReference))return!1;if(!e.origin.equals(r.origin))return!1;if(Math.round(e.dpi)!==Math.round(r.dpi))return!1;const s=e.lods,i=r.lods,o=Math.min(s.length,i.length);for(let t=0;t<o;t++){const e=s[t],r=i[t];if(e.level!==r.level||Math.round(e.scale)!==Math.round(r.scale))return!1}return!0}}function at(...t){let e;for(const r of t)if(null!=r)if(f(r)){if(e){const t=e.split("://")[0];e=t+":"+r.trim()}}else e=y(r)?r:d(e,r);return e?g(e):void 0}async function pt(t,r,s,i,o){let n,a,p;if(l(o),"string"==typeof s){const t=j(s);p=await e(t,{...o,responseType:"json",query:{f:"json",...o?.query}}),p.ssl&&(n&&(n=n.replace(/^http:/i,"https:")),a&&(a=a.replace(/^http:/i,"https:"))),n=t,a=t}else null!=s&&(p={data:s},n=s.jsonUrl||null,a=i);const u=p?.data;if(ct(u))return t.styleUrl=n||null,async function(t,e,r,s){const i=r?S(r):x();t.styleBase=i,t.style=e,e["sprite-format"]&&"webp"===e["sprite-format"].toLowerCase()&&(t.spriteFormat="webp");const o=[];if(e.sources&&e.sources.esri){const r=e.sources.esri;r.url?await pt(t,"esri",at(i,r.url),void 0,s):o.push(pt(t,"esri",r,i,s))}for(const r of Object.keys(e.sources))"esri"!==r&&"vector"===e.sources[r].type&&(e.sources[r].url?o.push(pt(t,r,at(i,e.sources[r].url),void 0,s)):e.sources[r].tiles&&o.push(pt(t,r,e.sources[r],i,s)));await Promise.all(o)}(t,u,a,o);if(!ct(u))return t.sourceUrl?ht(t,u,a,!1,r,o):(t.sourceUrl=n||null,ht(t,u,a,!0,r,o));throw new Error("You must specify the URL or the JSON for a service or for a style.")}function ut(t){return"object"==typeof t&&!!t&&"tilejson"in t&&null!=t.tilejson}function ct(t){return!!t&&"sources"in t&&!!t.sources}async function ht(t,e,r,s,o,l){const n=r?g(r)+"/":x(),a=function(t){if(t.hasOwnProperty("tileInfo"))return t;const e={xmin:-20037507.067161843,ymin:-20037507.067161843,xmax:20037507.067161843,ymax:20037507.067161843,spatialReference:{wkid:102100,latestWkid:3857}};let r=null;if(ut(t)){const{bounds:e}=t;if(e){const t=K({x:e[0],y:e[1],spatialReference:i(V)}),s=K({x:e[2],y:e[3],spatialReference:i(V)});r={xmin:t.x,ymin:t.y,xmax:s.x,ymax:s.y,spatialReference:i($)}}}null===r&&(r=e);let s=78271.51696400007,o=295828763.7957775;const l=[],n=t.hasOwnProperty("maxzoom")&&null!=t.maxzoom?+t.maxzoom:22;for(let t=0;t<=n;t++)l.push({level:t,scale:o,resolution:s}),s/=2,o/=2;return{capabilities:"TilesOnly",initialExtent:r,fullExtent:e,minScale:0,maxScale:0,tiles:t.tiles,tileInfo:{rows:512,cols:512,dpi:96,format:"pbf",origin:{x:-20037508.342787,y:20037508.342787},lods:l,spatialReference:i($)}}}(e),p=new nt(o,m(n,l?.query??{}),a);if(!s&&t.primarySourceName in t.sourceNameToSource){const e=t.sourceNameToSource[t.primarySourceName];if(!e.isCompatibleWith(p))return;null!=p.fullExtent&&(null!=e.fullExtent?e.fullExtent.union(p.fullExtent):e.fullExtent=p.fullExtent.clone()),e.tileInfo&&p.tileInfo&&e.tileInfo.lods.length<p.tileInfo.lods.length&&(e.tileInfo=p.tileInfo)}if(s&&(t.sourceBase=n,t.source=e,t.validatedSource=a,t.primarySourceName=o),t.sourceNameToSource[o]=p,!ut(t)&&"defaultStyles"in e&&!t.style){if(null==e.defaultStyles)throw new Error;return"string"==typeof e.defaultStyles?pt(t,"",at(n,e.defaultStyles,"root.json"),void 0,l):pt(t,"",e.defaultStyles,at(n,"root.json"),l)}}const mt=1e-6;function yt(t,e){if(t===e)return!0;if(null==t&&null!=e)return!1;if(null!=t&&null==e)return!1;if(null==t||null==e)return!1;if(!t.spatialReference.equals(e.spatialReference)||t.dpi!==e.dpi)return!1;const r=t.origin,s=e.origin;if(Math.abs(r.x-s.x)>=mt||Math.abs(r.y-s.y)>=mt)return!1;let i,o;t.lods[0].scale>e.lods[0].scale?(i=t,o=e):(o=t,i=e);for(let t=i.lods[0].scale;t>=o.lods[o.lods.length-1].scale-mt;t/=2)if(Math.abs(t-o.lods[0].scale)<mt)return!0;return!1}function dt(t,e){if(t===e)return t;if(null==t&&null!=e)return e;if(null!=t&&null==e)return t;if(null==t||null==e)return null;const r=t.size[0],s=t.format,i=t.dpi,o=new H({x:t.origin.x,y:t.origin.y}),l=t.spatialReference,n=t.lods[0].scale>e.lods[0].scale?t.lods[0]:e.lods[0],a=t.lods[t.lods.length-1].scale<=e.lods[e.lods.length-1].scale?t.lods[t.lods.length-1]:e.lods[e.lods.length-1],p=n.scale,u=n.resolution,c=a.scale,h=[];let m=p,y=u,d=0;for(;m>c;)h.push(new Y({level:d,resolution:y,scale:m})),d++,m/=2,y/=2;return new F({size:[r,r],dpi:i,format:s||"pbf",origin:o,lods:h,spatialReference:l})}let ft=class extends(A(D(O(L(C(M(E(P(o(R)))))))))){constructor(...t){super(...t),this._spriteSourceMap=new Map,this.currentStyleInfo=null,this.isReference=null,this.operationalLayerType="VectorTileLayer",this.style=null,this.tilemapCache=null,this.type="vector-tile",this.url=null,this.path=null}normalizeCtorArgs(t,e){return"string"==typeof t?{url:t,...e}:t}destroy(){if(this.sourceNameToSource)for(const t of Object.values(this.sourceNameToSource))t?.destroy();this.primarySource?.destroy(),this._spriteSourceMap.clear()}async prefetchResources(t){await this.loadSpriteSource(globalThis.devicePixelRatio||1,t)}load(t){const r=this.loadFromPortal({supportedTypes:["Vector Tile Service"],supportsData:!1},t).catch(u).then((async()=>{if(!this.portalItem?.id)return;const r=`${this.portalItem.itemCdnUrl}/resources/styles/root.json`;(await e(r,{...t,query:{f:"json",...this.customParameters,token:this.apiKey}})).data&&this.read({url:r},J(this.portalItem))})).catch(u).then((()=>this._loadStyle(t)));return this.addResolvingPromise(r),Promise.resolve(this)}get attributionDataUrl(){const t=this.currentStyleInfo,e=t?.serviceUrl&&c(t.serviceUrl);if(!e)return null;const r=this._getDefaultAttribution(e.path);return r?m(r,{...this.customParameters,token:this.apiKey}):null}get capabilities(){const t=this.primarySource;return t?t.capabilities:{operations:{supportsExportTiles:!1,supportsTileMap:!1},exportTiles:null}}get fullExtent(){return this.primarySource?.fullExtent||null}get initialExtent(){return this.primarySource?.initialExtent||null}get parsedUrl(){return this.serviceUrl?c(this.serviceUrl):null}get serviceUrl(){return this.currentStyleInfo?.serviceUrl||null}get spatialReference(){return this.tileInfo?.spatialReference??null}get styleUrl(){return this.currentStyleInfo?.styleUrl||null}writeStyleUrl(t,e){t&&f(t)&&(t=`https:${t}`);const r=w(t);e.styleUrl=Q(t,r)}get tileInfo(){const t=[];for(const e in this.sourceNameToSource)t.push(this.sourceNameToSource[e]);let e=this.primarySource?.tileInfo||new F;if(t.length>1)for(let r=0;r<t.length;r++)yt(e,t[r].tileInfo)&&(e=dt(e,t[r].tileInfo));return e}readTilemapCache(t,e){const r=e.capabilities?.includes("Tilemap");return r?new z({layer:this}):null}readVersion(t,e){return e.version?parseFloat(e.version):parseFloat(e.currentVersion)}async loadSpriteSource(t=1,e){if(!this._spriteSourceMap.has(t)){const r=Z("2d").maxTextureSize,s=this.currentStyleInfo?.spriteUrl?m(this.currentStyleInfo.spriteUrl,{...this.customParameters,token:this.apiKey}):null,i=new et({type:"url",spriteUrl:s,pixelRatio:t,spriteFormat:this.currentStyleInfo?.spriteFormat},r);await i.load(e),this._spriteSourceMap.set(t,i)}return this._spriteSourceMap.get(t)}async setSpriteSource(t,e){if(!t)return null;const r=Z("2d").maxTextureSize,s=t.spriteUrl,i=s?m(s,{...this.customParameters,token:this.apiKey}):null;if(!i&&"url"===t.type)return null;const o=new et(t,r);try{await o.load(e);const r=t.pixelRatio||1;return this._spriteSourceMap.clear(),this._spriteSourceMap.set(r,o),i&&this.currentStyleInfo&&(this.currentStyleInfo.spriteUrl=i),this.emit("spriteSource-change",{spriteSource:o}),o}catch(t){u(t)}return null}async loadStyle(t,e){const s=t||this.style||this.url;return this._loadingTask&&"string"==typeof s&&this.url===s||(this._loadingTask?.abort(),this._loadingTask=r((t=>(this._spriteSourceMap.clear(),this._getSourceAndStyle(s,{signal:t}))),e)),this._loadingTask.promise}getStyleLayerId(t){return this.styleRepository.getStyleLayerId(t)}getStyleLayerIndex(t){return this.styleRepository.getStyleLayerIndex(t)}getPaintProperties(t){return i(this.styleRepository?.getPaintProperties(t))}setPaintProperties(t,e){const r=this.styleRepository.isPainterDataDriven(t);this.styleRepository.setPaintProperties(t,e);const s=this.styleRepository.isPainterDataDriven(t);this.emit("paint-change",{layer:t,paint:e,isDataDriven:r||s})}getStyleLayer(t){return i(this.styleRepository.getStyleLayer(t))}setStyleLayer(t,e){this.styleRepository.setStyleLayer(t,e),this.emit("style-layer-change",{layer:t,index:e})}deleteStyleLayer(t){this.styleRepository.deleteStyleLayer(t),this.emit("delete-style-layer",{layer:t})}getLayoutProperties(t){return i(this.styleRepository.getLayoutProperties(t))}setLayoutProperties(t,e){this.styleRepository.setLayoutProperties(t,e),this.emit("layout-change",{layer:t,layout:e})}setStyleLayerVisibility(t,e){this.styleRepository.setStyleLayerVisibility(t,e),this.emit("style-layer-visibility-change",{layer:t,visibility:e})}getStyleLayerVisibility(t){return this.styleRepository.getStyleLayerVisibility(t)}write(t,e){return e?.origin&&!this.styleUrl?(e.messages&&e.messages.push(new s("vectortilelayer:unsupported",`VectorTileLayer (${this.title}, ${this.id}) with style defined by JSON only are not supported`,{layer:this})),null):super.write(t,e)}getTileUrl(t,e,r){return null}async _getSourceAndStyle(t,e){if(!t)throw new Error("invalid style!");const r=await async function(t,e){const r={source:null,sourceBase:null,sourceUrl:null,validatedSource:null,style:null,styleBase:null,styleUrl:null,sourceNameToSource:{},primarySourceName:"",spriteFormat:"png"},[s,i]="string"==typeof t?[t,null]:[null,t.jsonUrl];return await pt(r,"esri",t,i,e),{layerDefinition:r.validatedSource,url:s,serviceUrl:r.sourceUrl,style:r.style,styleUrl:r.styleUrl,spriteUrl:r.style.sprite&&at(r.styleBase,r.style.sprite),spriteFormat:r.spriteFormat,glyphsUrl:r.style.glyphs&&at(r.styleBase,r.style.glyphs),sourceNameToSource:r.sourceNameToSource,primarySourceName:r.primarySourceName}}(t,{...e,query:{...this.customParameters,token:this.apiKey}});"webp"===r.spriteFormat&&(await function(t){if(tt)return tt;const e="UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA";return tt=new Promise((t=>{const r=new Image;r.onload=()=>{r.onload=r.onerror=null,t(r.width>0&&r.height>0)},r.onerror=()=>{r.onload=r.onerror=null,t(!1)},r.src="data:image/webp;base64,"+e})),tt}()||(r.spriteFormat="png")),this._set("currentStyleInfo",{...r}),"string"==typeof t?(this.url=t,this.style=null):(this.url=null,this.style=t),this._set("sourceNameToSource",r.sourceNameToSource),this._set("primarySource",r.sourceNameToSource[r.primarySourceName]),this._set("styleRepository",new X(r.style)),this.read(r.layerDefinition,{origin:"service"}),this.emit("load-style")}_getDefaultAttribution(t){const e=t.match(/^https?:\/\/(?:basemaps|basemapsbeta|basemapsdev)(?:-api)?\.arcgis\.com(\/[^\/]+)?\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/vectortileserver/i),r=["OpenStreetMap_v2","OpenStreetMap_Daylight_v2","OpenStreetMap_Export_v2","OpenStreetMap_FTS_v2","OpenStreetMap_GCS_v2","World_Basemap","World_Basemap_v2","World_Basemap_Export_v2","World_Basemap_GCS_v2","World_Basemap_WGS84","World_Contours_v2"];if(!e)return;const s=e[2]&&e[2].toLowerCase();if(!s)return;const i=e[1]||"";for(const t of r)if(t.toLowerCase().includes(s))return j(`//static.arcgis.com/attribution/Vector${i}/${t}`)}async _loadStyle(t){return this._loadingTask?.promise??this.loadStyle(null,t)}};t([k({readOnly:!0})],ft.prototype,"attributionDataUrl",null),t([k({type:["show","hide"]})],ft.prototype,"listMode",void 0),t([k({json:{read:!0,write:!0}})],ft.prototype,"blendMode",void 0),t([k({readOnly:!0,json:{read:!1}})],ft.prototype,"capabilities",null),t([k({readOnly:!0})],ft.prototype,"currentStyleInfo",void 0),t([k({json:{read:!1},readOnly:!0,type:I})],ft.prototype,"fullExtent",null),t([k({json:{read:!1},readOnly:!0,type:I})],ft.prototype,"initialExtent",null),t([k({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],ft.prototype,"isReference",void 0),t([k({type:["VectorTileLayer"]})],ft.prototype,"operationalLayerType",void 0),t([k({readOnly:!0})],ft.prototype,"parsedUrl",null),t([k()],ft.prototype,"style",void 0),t([k({readOnly:!0})],ft.prototype,"serviceUrl",null),t([k({type:T,readOnly:!0})],ft.prototype,"spatialReference",null),t([k({readOnly:!0})],ft.prototype,"styleRepository",void 0),t([k({readOnly:!0})],ft.prototype,"sourceNameToSource",void 0),t([k({readOnly:!0})],ft.prototype,"primarySource",void 0),t([k({type:String,readOnly:!0,json:{write:{ignoreOrigin:!0},origins:{"web-document":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],ft.prototype,"styleUrl",null),t([b(["portal-item","web-document"],"styleUrl")],ft.prototype,"writeStyleUrl",null),t([k({json:{read:!1,origins:{service:{read:!1}}},readOnly:!0,type:F})],ft.prototype,"tileInfo",null),t([k()],ft.prototype,"tilemapCache",void 0),t([_("service","tilemapCache",["capabilities","tileInfo"])],ft.prototype,"readTilemapCache",null),t([k({json:{read:!1},readOnly:!0,value:"vector-tile"})],ft.prototype,"type",void 0),t([k({json:{origins:{"web-document":{read:{source:"styleUrl"}},"portal-item":{read:{source:"url"}}},write:!1,read:!1}})],ft.prototype,"url",void 0),t([k({readOnly:!0})],ft.prototype,"version",void 0),t([_("version",["version","currentVersion"])],ft.prototype,"readVersion",null),t([k({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],ft.prototype,"path",void 0),ft=t([U("esri.layers.VectorTileLayer")],ft);const gt=ft;export{gt as default};
