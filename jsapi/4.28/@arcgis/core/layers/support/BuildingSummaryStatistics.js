/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as r}from"../../chunks/tslib.es6.js";import s from"../../request.js";import{JSONSupport as t}from"../../core/JSONSupport.js";import e from"../../core/Loadable.js";import{L as o}from"../../chunks/Logger.js";import{EsriPromiseMixin as i}from"../../core/Promise.js";import{property as l}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import"../../chunks/typedArrayUtil.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import"../../config.js";import"../../core/lang.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../core/Error.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../chunks/time.js";let n=class extends t{constructor(){super(...arguments),this.fieldName=null,this.modelName=null,this.label=null,this.min=null,this.max=null,this.mostFrequentValues=null,this.subLayerIds=null}};r([l({type:String})],n.prototype,"fieldName",void 0),r([l({type:String})],n.prototype,"modelName",void 0),r([l({type:String})],n.prototype,"label",void 0),r([l({type:Number})],n.prototype,"min",void 0),r([l({type:Number})],n.prototype,"max",void 0),r([l({json:{read:r=>Array.isArray(r)&&(r.every((r=>"string"==typeof r))||r.every((r=>"number"==typeof r)))?r.slice():null}})],n.prototype,"mostFrequentValues",void 0),r([l({type:[Number]})],n.prototype,"subLayerIds",void 0),n=r([p("esri.layers.support.BuildingFieldStatistics")],n);let a=class extends(e.LoadableMixin(i(t))){constructor(){super(...arguments),this.url=null}get fields(){return this.loaded||"loading"===this.loadStatus?this._get("fields"):(o.getLogger(this).error("building summary statistics are not loaded"),null)}load(r){const s=null!=r?r.signal:null;return this.addResolvingPromise(this._fetchService(s)),Promise.resolve(this)}async _fetchService(r){const t=(await s(this.url,{query:{f:"json"},responseType:"json",signal:r})).data;this.read(t,{origin:"service"})}};r([l({constructOnly:!0,type:String})],a.prototype,"url",void 0),r([l({readOnly:!0,type:[n],json:{read:{source:"summary"}}})],a.prototype,"fields",null),a=r([p("esri.layers.support.BuildingSummaryStatistics")],a);const u=a;export{u as default};
