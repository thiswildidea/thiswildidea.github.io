/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import"./typedArrayUtil.js";import{J as t}from"./jsonMap.js";import e from"../layers/support/PixelBlock.js";function o(t,e,o,n,s){const r=Math.floor(n/2);for(let n=0;n<r;n++)for(let r=0;r<e;r++)t[n*e+r]=t[(s-1-n)*e+r],t[(o-1-n)*e+r]=t[(o-s+n)*e+r];const l=Math.floor(s/2);for(let n=0;n<o;n++){const o=n*e;for(let n=0;n<l;n++)t[o+n]=t[o+s-1-n],t[o+e-n-1]=t[o+e+n-s]}}const n=new t({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function s(t,e){const{fillNoDataOnly:o}=e,{band:n,width:s,height:r,mask:l,outBand:i}=t;if(o&&!l)return void i.set(n);const{statisticsType:a,kernelRows:f,kernelCols:c}=e,h="stddev"===a,u=s*r,d=new Float64Array(u),m=new Float64Array(u),y=new Uint32Array(u);for(let t=0;t<r;t++){const e=t*s;let o=0,r=0,i=0;for(let t=0;t<c;t++)l&&!l[e+t]||(o+=n[e+t],h&&(r+=n[e+t]**2),i++);d[e]=o,m[e]=r,y[e]=i;for(let t=1;t<=s-c;t++){const s=e+t-1,a=s+c;l?(l[s]&&(i--,o-=n[s],h&&(r-=n[s]**2)),l[a]&&(i++,o+=n[a],h&&(r+=n[a]**2))):(o-=n[s],o+=n[a],h&&(r-=n[s]**2,r+=n[a]**2)),d[e+t]=o,y[e+t]=i,h&&(m[e+t]=r)}}const p=new Float64Array(u),w=new Float64Array(u),k=new Uint32Array(u),g=f*s;for(let t=0;t<=s-c;t++){let e=0,o=0,n=0;for(let r=0;r<f;r++){const l=r*s+t;e+=d[l],n+=y[l],h&&(o+=m[l])}p[t]=e,w[t]=o,k[t]=n;for(let l=1;l<=r-f;l++){const r=(l-1)*s+t,i=r+g;e-=d[r],e+=d[i],n-=y[r],n+=y[i],h&&(o-=m[r],o+=m[i]),p[l*s+t]=e,w[l*s+t]=o,k[l*s+t]=n}}const M=Math.floor(f/2),A=Math.floor(c/2);for(let t=M;t<r-M;t++){const e=t*s;for(let n=A;n<s-A;n++){const r=(t-M)*s+n-A,a=k[r];if(0===a||o&&(!l||l[e+n]))continue;const f=p[r]/a,c=h?Math.sqrt((w[r]-p[r]*f)/a):f;i[e+n]=c,l&&(l[e+n]=255)}}}function r(t,e){const{fillNoDataOnly:o}=e,{band:n,width:s,height:r,mask:l,outBand:i}=t;if(o&&!l)return void i.set(n);const{kernelRows:a,kernelCols:f,statisticsType:c}=e,h=Math.floor(a/2),u=Math.floor(f/2),d="min"===c,m=i.slice(),y=new Uint32Array(s*r);for(let t=h;t<r-h;t++){const e=t*s;for(let t=u;t<s-u;t++){let o=d?Number.MAX_VALUE:-Number.MAX_VALUE,r=0;for(let i=0;i<a;i++)for(let a=0;a<f;a++){const f=e+t+(i-h)*s+a-u;l&&!l[f]||(o=d?Math.min(o,n[f]):Math.max(o,n[f]),r++)}l?(m[e+t]=0===r?0:o,y[e+t]=r):i[e+t]=0===r?0:o}}if(l)for(let t=h;t<r-h;t++){const e=t*s;for(let t=u;t<s-u;t++)if(y[e+t]){if(o&&l[e+t])continue;i[e+t]=m[e+t],l[e+t]=255}}}function l(t,e){const{fillNoDataOnly:o}=e,{band:n,width:s,height:r,mask:l,outBand:i}=t;if(o&&!l)return void i.set(n);const{kernelRows:a,kernelCols:f}=e,c=Math.floor(a/2),h=Math.floor(f/2),u=i.slice(),d=new Uint32Array(s*r);for(let t=c;t<r-c;t++){const e=t*s;for(let t=h;t<s-h;t++){if(o&&l&&l[e+t])continue;const r=[];for(let o=0;o<a;o++)for(let i=0;i<f;i++){const a=e+t+(o-c)*s+i-h;l&&!l[a]||r.push(n[a])}r.length&&(r.sort(((t,e)=>t-e)),l?(u[e+t]=r[Math.floor((r.length-1)/2)],d[e+t]=r.length):i[e+t]=r[Math.floor((r.length-1)/2)])}}if(l)for(let t=c;t<r-c;t++){const e=t*s;for(let t=h;t<s-h;t++)if(d[e+t]){if(o&&l[e+t])continue;i[e+t]=u[e+t],l[e+t]=255}}}function i(t,e){const{fillNoDataOnly:o}=e,{band:n,width:s,height:r,mask:l,outBand:i}=t;if(o&&!l)return void i.set(n);const{kernelRows:a,kernelCols:f}=e,c=Math.floor(a/2),h=Math.floor(f/2),u="majority"===e.statisticsType,d=a*f,m=i.slice(),y=new Uint32Array(s*r);for(let t=c;t<r-c;t++){const e=t*s;for(let t=h;t<s-h;t++){if(o&&l&&l[e+t])continue;const r=new Map;for(let o=0;o<a;o++)for(let i=0;i<f;i++){const a=e+t+(o-c)*s+i-h;if(l&&!l[a])continue;const f=n[a];r.set(f,r.has(f)?r.get(f)+1:1)}if(0===r.size)continue;let p=0,w=0,k=u?0:d+1;for(const t of r.keys())w=r.get(t),u===w>k&&(k=w,p=t);l?(m[e+t]=p,y[e+t]=r.size):i[e+t]=p}}if(l)for(let t=c;t<r-c;t++){const e=t*s;for(let t=h;t<s-h;t++)if(y[e+t]){if(o&&l[e+t])continue;i[e+t]=m[e+t],l[e+t]=255}}}function a(t,n){const{mask:a}=t,{fillNoDataOnly:f}=n;if(f&&!a)return t;const{pixels:c,width:h,height:u,bandMasks:d,pixelType:m}=t,y=c.length,p=h*u,w=[],{kernelRows:k,kernelCols:g,statisticsType:M,mirrorEdges:A}=n;if(f&&!a)return t;const b=n.outputPixelType??m,x=[];for(let t=0;t<y;t++){const m=c[t],y=e.createEmptyBand(b,p);f&&y.set(m);const U=d?.[t]??a,N=U?.slice()??null,j={band:m,width:h,height:u,mask:N,outBand:y};switch(M){case"min":case"max":r(j,n);break;case"mean":case"stddev":s(j,n);break;case"median":l(j,n);break;case"majority":case"minority":i(j,n)}A&&!f&&o(y,h,u,k,g),w.push(y),N&&x.push(N)}let U=x[0]??a;if(x.length!==y&&(x.length=0),y>1&&d?.length){U=new Uint8Array(p),U.set(x[0]);for(let t=1;t<d.length;t++){const e=d[t];for(let t=0;t<e.length;t++)0===e[t]&&(U[t]=0)}}const N=new e({pixelType:b,width:h,height:u,pixels:w,bandMasks:d&&x.length?x:null,mask:U});return N.updateStatistics(),N}export{a as c,o as m,n as s};
