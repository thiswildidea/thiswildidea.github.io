/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{r as e}from"./maybe.js";import{onAbort as s,onAbortOrThrow as t,createResolver as r,isPromiseLike as i,createAbortError as h}from"../core/promiseUtils.js";import{Q as o}from"./Queue.js";import{t as n}from"./tracking.js";import{S as l}from"./SimpleObservable.js";import{schedule as c}from"../core/scheduling.js";import{signal as u}from"../core/signal.js";class a{constructor(){this._map=new Map,this._observable=new l}get size(){return n(this._observable),this._map.size}clear(){this._map.size>0&&(this._map.clear(),this._observable.notify())}delete(e){const s=this._map.delete(e);return s&&this._observable.notify(),s}entries(){return n(this._observable),this._map.entries()}forEach(e,s){n(this._observable),this._map.forEach(((t,r)=>e.call(s,t,r,this)),s)}get(e){return n(this._observable),this._map.get(e)}has(e){return n(this._observable),this._map.has(e)}keys(){return n(this._observable),this._map.keys()}set(e,s){return this._map.set(e,s),this._observable.notify(),this}values(){return n(this._observable),this._map.values()}[Symbol.iterator](){return n(this._observable),this._map[Symbol.iterator]()}get[Symbol.toStringTag](){return this._map[Symbol.toStringTag]}}class _{constructor(e,s){this.item=e,this.controller=s,this.promise=null}}class p{constructor(e){this._schedule=null,this._task=null,this._deferreds=new a,this._controllers=new a,this._processingItems=new a,this._pausedSignal=u(!1),this.concurrency=1,e.concurrency&&(this.concurrency=e.concurrency),this._queue=new o(e.peeker),this.process=e.process;const s=e.scheduler;e.priority&&s&&(this._task=s.registerTask(e.priority,this))}destroy(){this.clear(),this._schedule=e(this._schedule),this._task=e(this._task)}get updating(){return!!this._task?.updating||this.running}get length(){return this._processingItems.size+this._queue.length}abort(e){const s=this._controllers.get(e);s&&s.abort()}clear(){this._queue.clear();const e=[];this._controllers.forEach((s=>e.push(s))),this._controllers.clear(),e.forEach((e=>e.abort())),this._processingItems.clear(),this._cancelNext()}forEach(e){this._deferreds.forEach(((s,t)=>e(t)))}get(e){const s=this._deferreds.get(e);return s?s.promise:void 0}isOngoing(e){return this._processingItems.has(e)}has(e){return this._deferreds.has(e)}pause(){this._pausedSignal.value||(this._pausedSignal.value=!0,this._cancelNext())}push(e,i){const o=this.get(e);if(o)return o;const n=new AbortController;let l=null;i&&(l=s(i,(()=>n.abort())));const c=()=>{u.remove(),null!=l&&l.remove(),this._deferreds.delete(e),this._controllers.delete(e),this._queue.remove(e),this._processingItems.delete(e),this._scheduleNext()},u=t(n.signal,(()=>{const s=this._processingItems.get(e);s&&s.controller.abort(),c(),a.reject(h())})),a=r();return this._deferreds.set(e,a),this._controllers.set(e,n),a.promise.then(c,c),this._queue.push(e),this._scheduleNext(),a.promise}last(){return this._queue.last()}peek(){return this._queue.peek()}popLast(){return this._queue.popLast()}reset(){const e=[];this._processingItems.forEach((s=>e.push(s))),this._processingItems.clear();for(const s of e)this._queue.push(s.item),s.controller.abort();this._scheduleNext()}resume(){this._pausedSignal.value&&(this._pausedSignal.value=!1,this._scheduleNext())}takeAll(){const e=[];for(;this._queue.length;)e.push(this._queue.pop());return this.clear(),e}get running(){return!this._pausedSignal.value&&this._queue.length>0&&this._processingItems.size<this.concurrency}runTask(e){for(;!e.done&&this._queue.length>0&&this._processingItems.size<this.concurrency;)this._process(this._queue.pop()),e.madeProgress()}_scheduleNext(){this._task||this._pausedSignal.value||this._schedule||(this._schedule=c((()=>{this._schedule=null,this._next()})))}_next(){for(;this._queue.length>0&&this._processingItems.size<this.concurrency;)this._process(this._queue.pop())}_cancelNext(){this._schedule&&(this._schedule.remove(),this._schedule=null)}_processResult(e,s){this._canProcessFulfillment(e)&&(this._scheduleNext(),this._deferreds.get(e.item).resolve(s))}_processError(e,s){this._canProcessFulfillment(e)&&(this._scheduleNext(),this._deferreds.get(e.item).reject(s))}_canProcessFulfillment(e){return!!this._deferreds.get(e.item)&&this._processingItems.get(e.item)===e}_process(e){if(null==e)return;let s;const t=new AbortController,r=new _(e,t);this._processingItems.set(e,r);try{s=this.process(e,t.signal)}catch(e){this._processError(r,e)}i(s)?(r.promise=s,s.then((e=>this._processResult(r,e)),(e=>this._processError(r,e)))):this._processResult(r,s)}get test(){return{update:e=>this.runTask(e)}}}export{p as Q};
