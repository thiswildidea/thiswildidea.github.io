/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{r as e}from"./asyncUtils.js";import r from"../core/Error.js";import{allSettledErrors as o,throwIfAborted as t,eachAlways as s}from"../core/promiseUtils.js";import{g as a}from"./uuid.js";import{getSiblingOfSameTypeI as n,contentToBlob as c}from"./resourceUtils.js";async function u(e,r,o=null){const t=await i(e,r,o);await h(t,r,o)}async function p(e,r,o,t,s=null){const a=await i(o,t,s);await e.update({data:r}),await h(a,t,s)}async function i(e,s,c=null){if(!s?.resources)return;const u=s.portalItem===e.portalItem?new Set(e.paths):new Set;e.paths.length=0,e.portalItem=s.portalItem;const p=new Set(s.resources.toKeep.map((e=>e.resource.path))),i=new Set,h=[];p.forEach((r=>{u.delete(r),e.paths.push(r)}));for(const r of s.resources.toUpdate)if(u.delete(r.resource.path),p.has(r.resource.path)||i.has(r.resource.path)){const{resource:o,content:t,finish:s,error:u}=r,p=n(o,a());e.paths.push(p.path),h.push(f({resource:p,content:t,compress:r.compress,finish:s,error:u},c))}else e.paths.push(r.resource.path),h.push(l(r,c)),i.add(r.resource.path);for(const r of s.resources.toAdd)e.paths.push(r.resource.path),u.has(r.resource.path)?u.delete(r.resource.path):h.push(f(r,c));if(0===h.length)return u;const m=await o(h);if(t(c),m.length>0)throw new r("save:resources","Failed to save one or more resources",{errors:m});return u}async function h(e,r,o=null){if(!e||!r.portalItem)return;const t=[];for(const s of e){const e=r.portalItem.resourceFromPath(s);t.push(e.portalItem.removeResource(e,o))}await s(t)}async function f(r,o){const t={...null!=o?o:{},compress:r.compress},s=await e(r.resource.portalItem.addResource(r.resource,await c(r.content),t));if(!0!==s.ok)throw r.error?.(s.error),s.error;r.finish?.(r.resource)}async function l(r,o){const t=await e(r.resource.update(await c(r.content),o));if(!0!==t.ok)throw r.error?.(t.error),t.error;r.finish?.(r.resource)}async function m(e){const r=[];for(const o of e.allLayers)if("beforeSave"in o&&"function"==typeof o.beforeSave){const e=o.beforeSave();e&&r.push(e)}await Promise.allSettled(r)}export{m as b,u as s,p as u};
