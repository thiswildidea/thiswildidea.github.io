/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as s}from"./tslib.es6.js";import{c as i}from"./asyncUtils.js";import e from"../core/Error.js";import{d as t,a as r}from"./maybe.js";import{createAbortError as a,isAborted as o}from"../core/promiseUtils.js";import{watch as n,syncAndInitial as l}from"../core/reactiveUtils.js";import{property as y}from"../core/accessorSupport/decorators/property.js";import{subclass as p}from"../core/accessorSupport/decorators/subclass.js";import{L as m}from"./LayerView3D.js";import c from"../core/Collection.js";import"./ensureType.js";import"./typedArrayUtil.js";import w from"../views/layers/LayerView.js";import"../core/Accessor.js";import"../core/Handles.js";import"./Logger.js";import"../config.js";import"../core/lang.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./tracking.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"./time.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"./heightModelInfoUtils.js";import"../geometry/HeightModelInfo.js";import"./jsonMap.js";import"../core/JSONSupport.js";import"./unitUtils.js";import"./Ellipsoid.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./reader.js";import"./writer.js";import"./arcgisLayerUrl.js";import"./persistableUrlUtils.js";import"../core/Identifiable.js";import"../core/Promise.js";import"./UpdatingHandles.js";const h=i=>{let e=class extends i{constructor(...s){super(...s),this.layer=null}get interactive(){return null!=this.analysisView&&this.analysisView.interactive}set interactive(s){null!=this.analysisView&&(this.analysisView.interactive=s)}get results(){return null!=this.analysisView?this.analysisView.results:new c}get selectedDimension(){return null!=this.analysisView?this.analysisView.selectedDimension:null}set selectedDimension(s){null!=this.analysisView&&(this.analysisView.selectedDimension=s)}async createLengthDimensions(s){if(null==this.analysisView)throw a();await this.analysisView.createLengthDimensions(s)}};return s([y()],e.prototype,"layer",void 0),s([y()],e.prototype,"interactive",null),s([y({readOnly:!0})],e.prototype,"results",null),s([y()],e.prototype,"selectedDimension",null),s([y()],e.prototype,"analysisView",void 0),e=s([p("esri.views.layers.DimensionLayerView")],e),e},d="analysis-view-handles";let u=class extends(m(h(w))){constructor(s){super(s),this.type="dimension-3d",this._analysisModule=null}initialize(){this.addHandles(n((()=>this.layer.source),(s=>{this._destroyAnalysisView(),null!=s&&this._createAnalysisView(s)}),l),d)}destroy(){this.removeHandles(d),this._destroyAnalysisView()}isUpdating(){return null!=this._createAnalysisViewTask||null!=this.analysisView&&this.analysisView.updating}async whenAnalysisView(){if(null!=this.analysisView)return this.analysisView;if(null!=this._createAnalysisViewTask)return this._createAnalysisViewTask.promise;throw new e("layerview:no-analysisview-for-analysis","The analysis has not been set on the DimensionLayer of this layer view")}_createAnalysisView(s){const e=i((async i=>(this.analysisView=await this._createAnalysisViewPromise(s,i),this._createAnalysisViewTask===e&&(this._createAnalysisViewTask=null),this.analysisView)));this.addResolvingPromise(e.promise),this._createAnalysisViewTask=e}_destroyAnalysisView(){this.analysisView=t(this.analysisView),this._createAnalysisViewTask=r(this._createAnalysisViewTask)}async _createAnalysisViewPromise(s,i){let e=this._analysisModule;if(null==e){const s=await this._loadAnalysisModule();this._analysisModule=s,e=s}const t=new e.default({analysis:s,view:this.view,parent:this});if(await t.when(),o(i))throw t.destroy(),a();return t}_loadAnalysisModule(){return import("./DimensionAnalysisView3D.js")}};s([y()],u.prototype,"type",void 0),s([y()],u.prototype,"analysisView",void 0),s([y()],u.prototype,"_createAnalysisViewTask",void 0),u=s([p("esri.views.3d.layers.DimensionLayerView3D")],u);const j=u;export{j as default};
