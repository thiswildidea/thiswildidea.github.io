/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as r}from"./tslib.es6.js";import e from"../core/Accessor.js";import{c as t}from"./asyncUtils.js";import o from"../core/Error.js";import{throwIfAborted as s,createResolver as i,o as l}from"../core/promiseUtils.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./typedArrayUtil.js";import{subclass as p}from"../core/accessorSupport/decorators/subclass.js";import n from"../geometry/Point.js";import{m,u as c,e as u}from"./progressUtils.js";import{f as d}from"./infoFor3D.js";import"../core/Handles.js";import"./Logger.js";import"../config.js";import"../core/lang.js";import"./maybe.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./tracking.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"./time.js";import"../core/accessorSupport/decorators/cast.js";import"./reader.js";import"./writer.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"./Ellipsoid.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../geometry/support/webMercatorUtils.js";let j=class extends e{constructor(){super({}),this.files=[],this.progress=0,this._uploadTask=null,this._layer=null}destroy(){this.cancel(),this.files=[],this._layer=null,this._uploadTask=null}get state(){const r=this._uploadTask;return r&&0!==this.files.length?r.finished?r.error?"error":"success":"pending":"default"}get result(){return this._uploadTask?.value??null}get error(){return this._uploadTask?.error??null}uploadTo(r){this.cancel(),this.files=[],this._layer=r,this._uploadTask=t((async e=>{const t=await async function(r){const{resolve:e,promise:t}=i(),o=document.createElement("input");o.type="file",o.multiple=!1,o.accept=[...d(r.infoFor3D),".zip"].join(","),o.style.display="none",document.body.appendChild(o);const s=l(o,"change",(()=>e(o.files?Array.from(o.files):[])));return f?f(o):o.click(),t.finally((()=>{s.remove(),o.remove()}))}(r);s(e),this.progress=0,this.files=t;const a=m(c.upload,(r=>{this.progress=r}),"Upload.uploadTo");if(0===t.length)return null;const{default:p}=await import("../geometry/Mesh.js");s(e);const j=await p.extractAndFilterFiles(t,r);s(e),j.length>0&&(this.files=j);const h=new n({x:0,y:0,z:0,spatialReference:r.spatialReference}),y=await p.createFromFiles(h,j,{layer:r,signal:e,onProgress:a.makeOnProgress("createFromFiles")});if(s(e),!y)throw new o("editor:upload","could not upload or convert model");const g=j.reduce(((r,e)=>r+e.size),0),_=a.simulate("loadMesh",u(g));try{await y.load()}finally{_.remove()}return y}))}retry(){this._layer&&this.uploadTo(this._layer)}cancel(){this._uploadTask?.abort()}};r([a()],j.prototype,"files",void 0),r([a()],j.prototype,"progress",void 0),r([a()],j.prototype,"state",null),r([a()],j.prototype,"result",null),r([a()],j.prototype,"error",null),r([a()],j.prototype,"_uploadTask",void 0),r([a()],j.prototype,"_layer",void 0),j=r([p("esri.widgets.Editor.Upload")],j);let f=null;function h(r){f=e=>{Promise.resolve().then((()=>r)).then((r=>{if(!f)return;const t=new DataTransfer;r.forEach((r=>t.items.add(r))),e.files=t.files,e.dispatchEvent(new Event("change"))}))}}function y(){f=null}export{j as Upload,y as clearPromptForFilesStub,h as stubFilePickerToSelect};
