/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{w as t,i as r}from"./typedArrayUtil.js";import{a as e}from"./quat.js";import{a as o}from"./quatf64.js";import{x as s}from"./vec3.js";import{f as i,c as a}from"./vec3f32.js";import n from"../geometry/SpatialReference.js";import{p}from"./projectBuffer.js";import{r as m,g as l,e as f,f as u}from"./PointCloudWorkerUtil.js";import"./vec3f64.js";import"./common.js";import"./vec4.js";import"./tslib.es6.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./Logger.js";import"../config.js";import"../core/lang.js";import"./maybe.js";import"../core/accessorSupport/decorators/subclass.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./tracking.js";import"./ensureType.js";import"../core/Error.js";import"../core/accessorSupport/decorators/property.js";import"./ObjectPool.js";import"./ObservableBase.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../core/promiseUtils.js";import"./time.js";import"./unitUtils.js";import"./jsonMap.js";import"./Ellipsoid.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./writer.js";import"./mathUtils.js";import"./geodesicConstants.js";import"../renderers/PointCloudClassBreaksRenderer.js";import"./enumeration.js";import"../renderers/PointCloudRenderer.js";import"./PointSizeSplatAlgorithm.js";import"./LegendOptions.js";import"../Color.js";import"./colorUtils.js";import"../renderers/PointCloudStretchRenderer.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/PointCloudUniqueValueRenderer.js";import"./I3SBinaryReader.js";import"./VertexAttribute.js";class j{transform(r){const e=this._transform(r),o=[e.points.buffer,e.rgb.buffer];null!=e.pointIdFilterMap&&o.push(e.pointIdFilterMap.buffer);for(const r of e.attributes)"buffer"in r.values&&t(r.values.buffer)&&r.values.buffer!==e.rgb.buffer&&o.push(r.values.buffer);return Promise.resolve({result:e,transferList:o})}_transform(t){const e=m(t.schema,t.geometryBuffer);let o=e.length/3,s=null;const i=new Array,a=l(t.primaryAttributeData,e,o);null!=t.primaryAttributeData&&a&&i.push({attributeInfo:t.primaryAttributeData.attributeInfo,values:a});const p=l(t.modulationAttributeData,e,o);null!=t.modulationAttributeData&&p&&i.push({attributeInfo:t.modulationAttributeData.attributeInfo,values:p});let j=f(t.rendererInfo,a,p,o);if(t.filterInfo&&t.filterInfo.length>0&&null!=t.filterAttributesData){const a=t.filterAttributesData.filter(r).map((t=>{const r=l(t,e,o),s={attributeInfo:t.attributeInfo,values:r};return i.push(s),s}));s=new Uint32Array(o),o=u(e,j,s,t.filterInfo,a)}for(const r of t.userAttributesData){const t=l(r,e,o);i.push({attributeInfo:r.attributeInfo,values:t})}3*o<j.length&&(j=new Uint8Array(j.buffer.slice(0,3*o))),this._applyElevationOffsetInPlace(e,o,t.elevationOffset);const c=this._transformCoordinates(e,o,t.obb,n.fromJSON(t.inSR),n.fromJSON(t.outSR));return{obb:t.obb,points:c,rgb:j,attributes:i,pointIdFilterMap:s}}_transformCoordinates(t,r,o,n,m){if(!p(t,n,0,t,m,0,r))throw new Error("Can't reproject");const l=i(o.center[0],o.center[1],o.center[2]),f=a(),u=a();e(c,o.quaternion);const j=new Float32Array(3*r);for(let e=0;e<r;e++)f[0]=t[3*e]-l[0],f[1]=t[3*e+1]-l[1],f[2]=t[3*e+2]-l[2],s(u,f,c),o.halfSize[0]=Math.max(o.halfSize[0],Math.abs(u[0])),o.halfSize[1]=Math.max(o.halfSize[1],Math.abs(u[1])),o.halfSize[2]=Math.max(o.halfSize[2],Math.abs(u[2])),j[3*e]=f[0],j[3*e+1]=f[1],j[3*e+2]=f[2];return j}_applyElevationOffsetInPlace(t,r,e){if(0!==e)for(let o=0;o<r;o++)t[3*o+2]+=e}}const c=o();function b(){return new j}export{b as default};
