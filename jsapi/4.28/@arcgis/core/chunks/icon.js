/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{p as t,H as e,h as i,a as s,B as n,g as a}from"./index.js";import{g as o,t as c}from"./dom.js";import{c as l}from"./observers.js";
/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.
 * v1.9.2
 */const r={},h={},m={s:16,m:24,l:32},d=t(class extends e{constructor(){super(),this.__registerHost(),this.__attachShadow(),this.icon=null,this.flipRtl=!1,this.scale="m",this.textLabel=void 0,this.pathData=void 0,this.visible=!1}connectedCallback(){this.waitUntilVisible((()=>{this.visible=!0,this.loadIconPathData()}))}disconnectedCallback(){this.intersectionObserver?.disconnect(),this.intersectionObserver=null}async componentWillLoad(){this.loadIconPathData()}render(){const{el:t,flipRtl:e,pathData:n,scale:a,textLabel:l}=this,r=o(t),h=m[a],d=!!l,p=[].concat(n||"");return i(s,{"aria-hidden":c(!d),"aria-label":d?l:null,role:d?"img":null},i("svg",{"aria-hidden":"true",class:{"flip-rtl":"rtl"===r&&e,svg:!0},fill:"currentColor",height:"100%",viewBox:`0 0 ${h} ${h}`,width:"100%",xmlns:"http://www.w3.org/2000/svg"},p.map((t=>i("path","string"==typeof t?{d:t}:{d:t.d,opacity:"opacity"in t?t.opacity:1})))))}async loadIconPathData(){const{icon:t,scale:e,visible:i}=this;n.isBrowser&&t&&i&&(this.pathData=await async function({icon:t,scale:e}){const i=m[e],s=function(t){const e=!isNaN(Number(t.charAt(0))),i=t.split("-");if(i.length>0){const e=/[a-z]/i;t=i.map(((t,i)=>t.replace(e,(function(t,e){return 0===i&&0===e?t:t.toUpperCase()})))).join("")}return e?`i${t}`:t}(t),n="F"===s.charAt(s.length-1),o=`${n?s.substring(0,s.length-1):s}${i}${n?"F":""}`;if(r[o])return r[o];h[o]||(h[o]=fetch(a(`./assets/icon/${o}.json`)).then((t=>t.json())).catch((()=>(console.error(`"${o}" is not a valid calcite-ui-icon name`),""))));const c=await h[o];return r[o]=c,c}({icon:t,scale:e}))}waitUntilVisible(t){this.intersectionObserver=l("intersection",(e=>{e.forEach((e=>{e.isIntersecting&&(this.intersectionObserver.disconnect(),this.intersectionObserver=null,t())}))}),{rootMargin:"50px"}),this.intersectionObserver?this.intersectionObserver.observe(this.el):t()}static get assetsDirs(){return["assets"]}get el(){return this}static get watchers(){return{icon:["loadIconPathData"],scale:["loadIconPathData"]}}static get style(){return":host{display:inline-flex;color:var(--calcite-ui-icon-color)}:host([scale=s]){block-size:1rem;inline-size:1rem;min-inline-size:1rem;min-block-size:1rem}:host([scale=m]){block-size:1.5rem;inline-size:1.5rem;min-inline-size:1.5rem;min-block-size:1.5rem}:host([scale=l]){block-size:2rem;inline-size:2rem;min-inline-size:2rem;min-block-size:2rem}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}"}},[1,"calcite-icon",{icon:[513],flipRtl:[516,"flip-rtl"],scale:[513],textLabel:[1,"text-label"],pathData:[32],visible:[32]}]);function p(){"undefined"!=typeof customElements&&["calcite-icon"].forEach((t=>{"calcite-icon"===t&&(customElements.get(t)||customElements.define(t,d))}))}p();export{d as I,p as d};
