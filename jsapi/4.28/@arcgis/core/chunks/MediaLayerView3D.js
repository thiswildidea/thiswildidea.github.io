/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Error.js";import{m as r,h as i,d as s}from"./handleUtils.js";import{g as o}from"./perspectiveUtils.js";import{debounce as a,isPromiseLike as n}from"../core/promiseUtils.js";import{on as m}from"../core/reactiveUtils.js";import{property as p}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./typedArrayUtil.js";import{subclass as l}from"../core/accessorSupport/decorators/subclass.js";import{a as d}from"./mat3f64.js";import{t as j}from"./aaBoundingRect.js";import{M as c}from"./MediaElementView.js";import{D as u,b as h,R as g,k as y,d as f}from"./RenderGeometry.js";import{L as _}from"./LayerView3D.js";import{A as v}from"./Attribute.js";import{G as E}from"./Geometry.js";import{T as D}from"./Texture2.js";import{U as w}from"./TriangleMaterial.js";import{V as U}from"./VertexAttribute.js";import{I as b}from"./ImageMaterial.js";import P from"../views/layers/LayerView.js";import{T as R}from"./enums3.js";import"../core/lang.js";import"./Logger.js";import"../config.js";import"./mat3.js";import"./common.js";import"./vec2.js";import"./vec3.js";import"./vec3f64.js";import"./maybe.js";import"./asyncUtils.js";import"../core/Accessor.js";import"../core/Handles.js";import"./metadata.js";import"./utils.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./tracking.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"./time.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"./mathUtils.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"./Ellipsoid.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Polygon.js";import"./Axis.js";import"./extentUtils.js";import"./zmUtils.js";import"../geometry/projection.js";import"../geometry/Multipoint.js";import"../geometry/Polyline.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./normalizeUtilsSync.js";import"../geometry/support/jsonUtils.js";import"./normalizeUtilsCommon.js";import"./mat4.js";import"./ViewingMode.js";import"./FloatsPassUniform.js";import"./mat4f64.js";import"./lengthUtils.js";import"./interfaces3.js";import"./Material.js";import"./basicInterfaces.js";import"./ContentObject.js";import"./aaBoundingBox.js";import"./Util.js";import"./vec2f64.js";import"./vec4.js";import"./vec4f64.js";import"./ShaderBuilder.js";import"./OverlayCompositing.glsl.js";import"./ScreenSpacePass.glsl.js";import"./FloatPassUniform.js";import"./IntegerPassUniform.js";import"./Texture2DPassUniform.js";import"./SceneLighting.js";import"./MemCache.js";import"./FramebufferObject.js";import"./BufferObject.js";import"./Texture.js";import"./contextUtils.js";import"./ShaderOutput.js";import"./VertexNormal.glsl.js";import"./compilerUtils.js";import"./ForwardLinearDepth.glsl.js";import"./View.glsl.js";import"./Float3PassUniform.js";import"./Matrix4PassUniform.js";import"./Matrix3PassUniform.js";import"./Float2PassUniform.js";import"./EvaluateAmbientLighting.glsl.js";import"./PiUtils.glsl.js";import"./RgbaFloat16Encoding.glsl.js";import"./Float4PassUniform.js";import"./Texture2DDrawUniform.js";import"./WaterSurface.glsl.js";import"./Slice.glsl.js";import"./Transform.glsl.js";import"./ObjectAndLayerIdColor.glsl.js";import"./OutputHighlight.glsl.js";import"./ColorConversion.glsl.js";import"./ReadLinearDepth.glsl.js";import"./NormalUtils.glsl.js";import"./axisAngleDegrees.js";import"./quat.js";import"./quatf64.js";import"./weather.js";import"../views/3d/environment/CloudyWeather.js";import"./enumeration.js";import"../views/3d/environment/FoggyWeather.js";import"../views/3d/environment/RainyWeather.js";import"../views/3d/environment/SnowyWeather.js";import"../views/3d/environment/SunnyWeather.js";import"./RenderState.js";import"./BooleanPassUniform.js";import"./AlphaCutoff.js";import"./TransparencyPassType.js";import"./TextureOnly.glsl.js";import"./NestedMap.js";import"./ShaderTechniqueConfiguration.js";import"./RenderPlugin.js";import"./Camera.js";import"./screenUtils.js";import"./frustum.js";import"./vector.js";import"./ByteSizeUnit.js";import"./plane.js";import"./mathUtils2.js";import"./VertexElementDescriptor.js";import"./VertexArrayObject2.js";import"./VertexArrayObject.js";import"./MultipassGeometryTest.glsl.js";import"./RenderSlot.js";import"./Intersector.js";import"./Intersector2.js";import"./boundedPlane.js";import"./lineSegment.js";import"./verticalOffsetUtils.js";import"./sphere.js";import"./orientedBoundingBox.js";import"./glUtil.js";import"./OrderIndependentTransparency.js";import"./renderState2.js";import"./DefaultBufferWriter.js";import"./BufferView.js";import"./DefaultLayouts.js";import"./InterleavedLayout.js";import"./types.js";import"./Program2.js";import"./Scheduler.js";import"../core/signal.js";import"./debugFlags.js";import"./heightModelInfoUtils.js";import"../geometry/HeightModelInfo.js";import"./arcgisLayerUrl.js";import"./persistableUrlUtils.js";import"./Indices.js";import"./triangle.js";import"./doublePrecisionUtils.js";import"./InstancedDoublePrecision.glsl.js";import"./requestImageUtils.js";import"./Octree.js";import"./MarkerSizing.glsl.js";import"./VisualVariables.glsl.js";import"./floatRGBA.js";import"./RibbonLine.glsl.js";import"./OutputDepth.glsl.js";import"./GLTextureMaterial.js";import"./ImageMaterial.glsl.js";import"../core/Identifiable.js";import"../core/Promise.js";import"./UpdatingHandles.js";let S=class extends(_(P)){constructor(){super(...arguments),this.type="media-3d",this.drapeSourceType=u.RasterImage,this.updatePolicy=w.ASYNC,this._uidToElement=new Map,this._renderedElements=new Map,this._lastDrapingExtent=null,this._update=a((async(e,t,r)=>{const i=await this._collectMediaElements(e,t,r);this._synchronizeRenderElements(i)}),0)}initialize(){this._renderer=this.view.basemapTerrain.overlayManager.registerGeometryDrapeSource(this);const e=()=>this._updateWithLastDrapingExtent();this.addHandles([r((()=>this.view.basemapTerrain.overlayManager.unregisterDrapeSource(this))),m((()=>this.layer.effectiveSource),"change",e),m((()=>this.layer.effectiveSource),"refresh",e)]),this._updatingHandles.add((()=>this.suspended),e)}setDrapingExtent(e,t){this._lastDrapingExtent={overlays:e,spatialReference:t},this._updateWithLastDrapingExtent()}getHit(e){const t=this._uidToElement.get(e);return t?{type:"media",element:t,layer:this.layer}:null}_updateWithLastDrapingExtent(){if(null==this._lastDrapingExtent||this.suspended)return void(this._renderer&&this._synchronizeRenderElements(new Set));const{overlays:e,spatialReference:t}=this._lastDrapingExtent;this._updatingHandles.addPromise(this._update(e,t).catch((()=>{})))}async _collectMediaElements(e,t,r){const i=this.layer.effectiveSource;return null==i?new Set:new Set((await Promise.all(e.map((e=>i.queryElements(j(e.extent,t),{signal:r}))))).flat())}_synchronizeRenderElements(e){this._synchronizeRenderElementsRemove(e),this._synchronizeRenderElementsAdd(e)}_synchronizeRenderElementsRemove(e){const t=new Set,r=[];this._renderedElements.forEach(((i,s)=>{e.has(s)||(t.add(s),null!=i.renderData&&r.push(i.renderData.renderGeometry),this._removeElement(s,i))})),this._renderer.removeGeometries(r,h.REMOVE)}_synchronizeRenderElementsAdd(e){for(const t of e)this._renderedElements.has(t)||this._createRenderElement(t)}_removeElement(e,{renderData:t,handle:r}){this._destroyRenderData(t),this._renderedElements.delete(e),this._uidToElement.delete(e.uid),r.remove()}async _createRenderElement(e){const t=new c({spatialReference:this.view.spatialReference,element:e}),r={renderData:null,handle:i([this._updatingHandles.add((()=>e.opacity),(e=>{null!=r.renderData&&r.renderData.material.setParameters({opacity:e})})),this._updatingHandles.add((()=>t.coords),(()=>{null!=r.renderData?this._updateGeometry(t,r,r.renderData):this._initializeRenderData(t,r)})),this._updatingHandles.add((()=>e.content),(()=>this._initializeRenderData(t,r))),s(t)])};this._renderedElements.set(e,r),this._uidToElement.set(e.uid,e),this._updatingHandles.addPromise(e.load().catch((()=>{}))),this._initializeRenderData(t,r)}_initializeRenderData(e,t){const{coords:r,element:i}=e,{contentWidth:s,contentHeight:o}=i;if(null==r||null==i.content)return void(t.renderData=this._destroyRenderData(t.renderData));if(null!=t.renderData)return;const a=this._createTexture(i.content),m=a.load(this.view._stage.renderView.renderingContext);this.view._stage.add(a),n(m)&&this._updatingHandles.addPromise(m);const p=new b({initTextureTransparent:!0,textureId:a.id,opacity:i.opacity,transparent:!0,perspectiveInterpolation:!0}),l=this._getPositionAttributeArray(r),d=this._getPerspectiveDivideAttributeArray(l,s,o),j=[0,1,2,0,2,3],c=new E(p,[[U.POSITION,new v(l,j,3,!0)],[U.UV0,new v([0,0,1,0,1,1,0,1],j,2,!0)],[U.PERSPECTIVEDIVIDE,new v(d,j,1,!0)]]),u=new g(c,{layerUid:this.layer.uid,graphicUid:i.uid});this._renderer.addGeometries([u],h.ADD),t.renderData={renderGeometry:u,texture:a,material:p}}_updateGeometry(e,t,r){const{coords:i,element:s}=e;if(null==i||null==s.content)return void(t.renderData=this._destroyRenderData(t.renderData));const o=this._getPositionAttributeArray(i);r.renderGeometry.geometry.setAttributeData(U.POSITION,o);const a=this._getPerspectiveDivideAttributeArray(o,s.contentWidth,s.contentHeight);r.renderGeometry.geometry.setAttributeData(U.PERSPECTIVEDIVIDE,a),this._renderer.modifyGeometries([r.renderGeometry],y.GEOMETRY)}_getPositionAttributeArray(e){const[t,r,i,s]=e.rings[0];return[t[0],t[1],f,s[0],s[1],f,i[0],i[1],f,r[0],r[1],f]}_getPerspectiveDivideAttributeArray(e,t,r){o(T,[0,0,t,0,t,r,0,r],[e[0],e[1],e[3],e[4],e[6],e[7],e[9],e[10]]);const i=T[6]/T[8]*t,s=T[7]/T[8]*r;return[1,1+i,1+i+s,1+s]}_destroyRenderData(e){if(null==e)return null;const t=e.texture;return t.unload(),this.view._stage.remove(t),this._renderer.removeGeometries([e.renderGeometry],h.REMOVE),null}_createTexture(e){const r=e instanceof HTMLImageElement?e.naturalWidth:e.width,i=e instanceof HTMLImageElement?e.naturalHeight:e.height;if("getFrame"in e)throw new t("media-layer-view-3d","animation is not supported");return new D(e,{wrap:{s:R.CLAMP_TO_EDGE,t:R.CLAMP_TO_EDGE},preMultiplyAlpha:!0,width:r,height:i,mipmap:!0,updateCallback:()=>this.view.basemapTerrain.overlayManager.setDrawTexturesDirty()})}get test(){const e=this;return{get numberOfElements(){return e._renderedElements.size}}}};e([p({readOnly:!0})],S.prototype,"type",void 0),e([p()],S.prototype,"layer",void 0),S=e([l("esri.views.3d.layers.MediaLayerView3D")],S);const T=d(),x=S;export{x as default};
