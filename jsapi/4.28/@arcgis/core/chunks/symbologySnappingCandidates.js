/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import"./typedArrayUtil.js";import{L as t}from"./LRUCache.js";import{o as e}from"./ensureType.js";import{throwIfAborted as n}from"../core/promiseUtils.js";import{q as s}from"./unitUtils.js";import{g as o}from"./unitConversionUtils.js";import{clone as a}from"../core/lang.js";import{n as i}from"./Logger.js";function r(t=!1,e){if(t){const{elevationInfo:t,alignPointsInFeatures:n}=e;return new u(t,n)}return new c}class c{async alignCandidates(t,e,n){return t}notifyElevationSourceChange(){}}class u{constructor(e,n){this._elevationInfo=e,this._alignPointsInFeatures=n,this._alignmentsCache=new t(1024),this._cacheVersion=0}async alignCandidates(t,e,n){const s=this._elevationInfo;return null==s||"absolute-height"!==s.mode||s.featureExpressionInfo?this._alignComputedElevationCandidates(t,e,n):(this._alignAbsoluteElevationCandidates(t,e,s),t)}notifyElevationSourceChange(){this._alignmentsCache.clear(),this._cacheVersion++}_alignAbsoluteElevationCandidates(t,e,n){const{offset:a,unit:i}=n;if(null==a)return;const r=s(e),c=a*(o(i??"meters")/r);for(const e of t)switch(e.type){case"edge":e.start.z+=c,e.end.z+=c;continue;case"vertex":e.target.z+=c;continue}}async _alignComputedElevationCandidates(t,s,o){const a=new Map;for(const n of t)e(a,n.objectId,l).push(n);const[i,r,c]=this._prepareQuery(a,s),u=await this._alignPointsInFeatures(i,o);if(n(o),c!==this._cacheVersion)return this._alignComputedElevationCandidates(t,s,o);this._applyCacheAndResponse(i,u,r);const{drapedObjectIds:h,failedObjectIds:d}=u,f=[];for(const e of t){const{objectId:t}=e;h.has(t)&&"edge"===e.type&&(e.draped=!0),d.has(t)||f.push(e)}return f}_prepareQuery(t,e){const n=[],s=[];for(const[e,o]of t){const t=[];for(const n of o)this._addToQueriesOrCachedResult(e,n.target,t,s),"edge"===n.type&&(this._addToQueriesOrCachedResult(e,n.start,t,s),this._addToQueriesOrCachedResult(e,n.end,t,s));0!==t.length&&n.push({objectId:e,points:t})}return[{spatialReference:e.toJSON(),pointsInFeatures:n},s,this._cacheVersion]}_addToQueriesOrCachedResult(t,e,n,s){const o=d(t,e),a=this._alignmentsCache.get(o);null==a?n.push(e):s.push(new h(e,a))}_applyCacheAndResponse(t,{elevations:e,drapedObjectIds:n,failedObjectIds:s},o){for(const t of o)t.apply();let a=0;const i=this._alignmentsCache;for(const{objectId:o,points:r}of t.pointsInFeatures){if(s.has(o)){a+=r.length;continue}const t=!n.has(o);for(const n of r){const s=d(o,n),r=e[a++];n.z=r,t&&i.put(s,r,1)}}}}class h{constructor(t,e){this.point=t,this.z=e}apply(){this.point.z=this.z}}function d(t,{x:e,y:n,z:s,spatialReference:o}){return`${t}-${e}-${n}-${s??0}}-wkid:${o?.wkid}`}function l(){return[]}class f{filter(t,e){return e}notifyElevationSourceChange(){}}class p{filter(t,e){const{point:n,distance:s}=t,{z:o}=n;if(null==o)return e;if(0===e.length)return e;const a=function(t){return"number"==typeof t?{x:t,y:t,z:t}:t}(s),i=this._updateCandidatesTo3D(e,n,a).filter(g);return i.sort(m),i}_updateCandidatesTo3D(t,e,n){for(const s of t)switch(s.type){case"edge":_(s,e,n);continue;case"vertex":C(s,e,n);continue}return t}}function g(t){return t.distance<=1}function y(t=!1){return t?new p:new f}function _(t,e,{x:n,y:s,z:o}){const{start:a,end:i,target:r}=t;t.draped||function(t,e,n,s){const o=s.x-n.x,a=s.y-n.y,i=s.z-n.z,r=o*o+a*a+i*i,c=(e.x-n.x)*o+(e.y-n.y)*a+i*(e.z-n.z),u=Math.min(1,Math.max(0,c/r)),h=n.x+o*u,d=n.y+a*u,l=n.z+i*u;t.x=h,t.y=d,t.z=l}(r,e,a,i);const c=(e.x-r.x)/n,u=(e.y-r.y)/s,h=(e.z-r.z)/o;t.distance=Math.sqrt(c*c+u*u+h*h)}function C(t,e,{x:n,y:s,z:o}){const{target:a}=t,i=(e.x-a.x)/n,r=(e.y-a.y)/s,c=(e.z-a.z)/o,u=Math.sqrt(i*i+r*r+c*c);t.distance=u}function m(t,e){return t.distance-e.distance}function z(t=!1,e){return t?new I(e):new x}class x{async fetch(){return[]}notifySymbologyChange(){}}class I{constructor(e){this._getSymbologyCandidates=e,this._candidatesCache=new t(1024),this._cacheVersion=0}async fetch(t,e){if(0===t.length)return[];const s=[],o=[],i=this._candidatesCache;for(const e of t){const t=b(e),n=i.get(t);if(n)for(const t of n)o.push(a(t));else s.push(e),i.put(t,[],1)}if(0===s.length)return o;const r=this._cacheVersion,{candidates:c,sourceCandidateIndices:u}=await this._getSymbologyCandidates(s,e);if(n(e),r!==this._cacheVersion)return this.fetch(t,e);const h=[],{length:d}=c;for(let t=0;t<d;++t){const e=c[t],n=b(s[u[t]]),o=i.get(n);o.push(e),i.put(n,o,o.length),h.push(a(e))}return o.concat(h)}notifySymbologyChange(){this._candidatesCache.clear(),this._cacheVersion++}}function b(t){switch(t.type){case"vertex":{const{objectId:e,target:n}=t,s=`${e}-vertex-${n.x}-${n.y}-${n.z??0}`;return i(s).toString()}case"edge":{const{objectId:e,start:n,end:s}=t,o=`${e}-edge-${n.x}-${n.y}-${n.z??0}-to-${s.x}-${s.y}-${s.z??0}`;return i(o).toString()}default:return""}}export{y as a,z as b,r as g};
