/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import t from"../core/Error.js";import{p as e}from"./arcgisLayerUrl.js";import{f as r}from"./fetchService.js";import{p as o,g as s,a,b as i,c as p,d as n,e as l,L as c}from"./portalLayers.js";import{populateGroupLayer as m}from"./layersCreator.js";import{l as u}from"./lazyLayerLoader.js";import y from"../portal/Portal.js";import{c as j,b as f}from"./jsonContext.js";import{h as d}from"./portalItemUtils.js";import{l as g}from"./styleUtils2.js";import{f as h}from"./requestPresets.js";import"../core/lang.js";import"./typedArrayUtil.js";import"./Logger.js";import"../config.js";import"../core/urlUtils.js";import"../core/JSONSupport.js";import"./tslib.es6.js";import"../core/Accessor.js";import"../core/Handles.js";import"./maybe.js";import"../core/accessorSupport/decorators/subclass.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./tracking.js";import"./ensureType.js";import"../core/accessorSupport/decorators/property.js";import"./ObjectPool.js";import"./ObservableBase.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../core/promiseUtils.js";import"./time.js";import"./persistableUrlUtils.js";import"./associatedFeatureServiceUtils.js";import"../kernel.js";import"../request.js";import"../portal/PortalItem.js";import"./assets.js";import"../core/Loadable.js";import"../core/Promise.js";import"./reader.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"./Ellipsoid.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"./locale.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"./layerUtils2.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"../geometry/projection.js";import"./vec3f64.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./Axis.js";import"./extentUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./vec3.js";import"./common.js";import"../geometry/Polyline.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./asyncUtils.js";async function w(e,l){const u=e.instance.portalItem;if(u?.id)return await u.load(l),function(e){const r=e.instance.portalItem;if(!r?.type||!e.supportedTypes.includes(r.type))throw new t("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:r?.type,expectedType:e.supportedTypes.join(", ")})}(e),async function(e,l){const u=e.instance,y=u.portalItem;if(!y)return;const{url:w,title:I}=y,L=j(y);if("group"===u.type)return async function(e,l,u){const y=e.portalItem;if(!e.sourceIsPortalItem)return;const{title:j,type:g}=y;if("Group Layer"===g){if(!d(y,"Map"))throw new t("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return async function(t){const e=t.portalItem,r=await e.fetchData("json");if(!r)return;const o=f(e);t.read(r,o),await m(t,r,{context:o}),t.resourceReferences={portalItem:e,paths:o.readResourcePaths??[]}}(e)}return e.read({title:j},l),async function(e,l){let m;const{portalItem:u}=e;if(!u)return;const y=u.type,j=l.layerModuleTypeMap;switch(y){case"Feature Service":case"Feature Collection":m=j.FeatureLayer;break;case"Stream Service":m=j.StreamLayer;break;case"Scene Service":m=j.SceneLayer;break;default:throw new t("portal:unsupported-item-type-as-group",`The item type '${y}' is not supported as a 'IGroupLayer'`)}const f=new c;let[d,g]=await Promise.all([m(),S(l,f)]),w=()=>d;if("Feature Service"===y){g=u.url?await o(g,u.url,f):{};const t=s(g),i=a(g),p=[];if(t.length||i?.length){t.length&&p.push("SubtypeGroupLayer"),i?.length&&p.push("OrientedImageryLayer");const e=[];for(const t of p){const r=j[t];e.push(r())}const r=await Promise.all(e),o=new Map;p.forEach(((t,e)=>{o.set(t,r[e])})),w=t=>t.layerType?o.get(t.layerType)??d:d}const n=await async function(t){const{layersJSON:e}=await r(t);if(!e)return null;const o=[...e.layers,...e.tables];return t=>o.find((e=>e.id===t.id))}(u.url);return await b(e,w,g,n)}return"Scene Service"===y&&u.url&&(g=await i(u,g,f)),p(g)>0?await b(e,w,g):await async function(t,e){const{portalItem:r}=t;if(!r?.url)return;const o=await h(r.url);o&&b(t,e,{layers:o.layers?.map(n),tables:o.tables?.map(n)})}(e,w)}(e,u)}(u,L,e);w&&u.read({url:w},L);const P=new c,v=await S(e,P,l);return v&&u.read(v,L),u.resourceReferences={portalItem:y,paths:L.readResourcePaths??[]},"subtype-group"!==u.type&&u.read({title:I},L),g(u,L)}(e,l)}async function b(t,e,r,o){let s=r.layers||[];const a=r.tables||[];if("Feature Collection"===t.portalItem?.type?(s.forEach(((t,e)=>{t.id=e,"Table"===t?.layerDefinition?.type&&a.push(t)})),s=s.filter((t=>"Table"!==t?.layerDefinition?.type))):(s.reverse(),a.reverse()),s.forEach((s=>{const a=o?.(s);if(a||!o){const o=I(t,e(s),r,s,a);t.add(o)}})),a.length){const e=await u.FeatureLayer();a.forEach((s=>{const a=o?.(s);if(a||!o){const o=I(t,e,r,s,a);t.tables.add(o)}}))}}function I(t,e,r,o,s){const a=t.portalItem,i={portalItem:a.clone(),layerId:o.id};null!=o.url&&(i.url=o.url);const p=new e(i);if("sourceJSON"in p&&(p.sourceJSON=s),"subtype-group"!==p.type&&(p.sublayerTitleMode="service-name"),"Feature Collection"===a.type){const t={origin:"portal-item",portal:a.portal||y.getDefault()};p.read(o,t);const e=r.showLegend;null!=e&&p.read({showLegend:e},t)}return p}async function S(t,r,o){if(!1===t.supportsData)return;const a=t.instance,i=a.portalItem;if(!i)return;let n=null;try{n=await i.fetchData("json",o)}catch(t){}if(function(t){return"stream"!==t.type&&"layerId"in t}(a)){let t=null;const o=await async function(t,r,o){if(r?.layers&&r?.tables)return p(r);const s=e(t.url);if(!s)return 1;const a=await o.fetchServiceMetadata(s.url.path).catch((()=>null));return(r?.layers?.length??a?.layers?.length??0)+(r?.tables?.length??a?.tables?.length??0)}(i,n,r);if((n?.layers||n?.tables)&&o>0){if(null==a.layerId){const t=s(n);a.layerId="subtype-group"===a.type?t?.[0]:l(n)}t=function(t,e){const{layerId:r}=e,o=t.layers?.find((t=>t.id===r))||t.tables?.find((t=>t.id===r));return o&&function(t,e){return!("feature"===e.type&&"layerType"in t&&"SubtypeGroupLayer"===t.layerType||"subtype-group"===e.type&&!("layerType"in t))}(o,e)?o:null}(n,a),t&&null!=n.showLegend&&(t.showLegend=n.showLegend)}return o>1&&"sublayerTitleMode"in a&&"service-name"!==a.sublayerTitleMode&&(a.sublayerTitleMode="item-title-and-service-name"),t}return n}export{w as load};
