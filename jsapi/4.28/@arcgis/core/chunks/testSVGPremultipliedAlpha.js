/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{i as e,a as t}from"./isWebGL2Context.js";import{B as r}from"./BufferObject.js";import{T as s,c as i,U as n,i as a,e as o,P as E,b as _}from"./enums3.js";import{F as u}from"./FramebufferObject.js";import{T,a as m}from"./Texture.js";import{V as g}from"./VertexArrayObject.js";import{f as p}from"./maybe.js";class l{constructor(e,t,r,s,i,n,a,o,E){this.createQuery=e,this.deleteQuery=t,this.resultAvailable=r,this.getResult=s,this.disjoint=i,this.beginTimeElapsed=n,this.endTimeElapsed=a,this.createTimestamp=o,this.timestampBits=E}}let c=!1;function d(t,r){if(r.disjointTimerQuery)return null;let s=t.getExtension("EXT_disjoint_timer_query_webgl2");return s&&e(t)?new l((()=>t.createQuery()),(e=>{t.deleteQuery(e),c=!1}),(e=>t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE)),(e=>t.getQueryParameter(e,t.QUERY_RESULT)),(()=>t.getParameter(s.GPU_DISJOINT_EXT)),(e=>{c||(c=!0,t.beginQuery(s.TIME_ELAPSED_EXT,e))}),(()=>{t.endQuery(s.TIME_ELAPSED_EXT),c=!1}),(e=>s.queryCounterEXT(e,s.TIMESTAMP_EXT)),(()=>t.getQuery(s.TIMESTAMP_EXT,s.QUERY_COUNTER_BITS_EXT))):(s=t.getExtension("EXT_disjoint_timer_query"),s?new l((()=>s.createQueryEXT()),(e=>{s.deleteQueryEXT(e),c=!1}),(e=>s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT)),(e=>s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)),(()=>t.getParameter(s.GPU_DISJOINT_EXT)),(e=>{c||(c=!0,s.beginQueryEXT(s.TIME_ELAPSED_EXT,e))}),(()=>{s.endQueryEXT(s.TIME_ELAPSED_EXT),c=!1}),(e=>s.queryCounterEXT(e,s.TIMESTAMP_EXT)),(()=>s.getQueryEXT(s.TIMESTAMP_EXT,s.QUERY_COUNTER_BITS_EXT))):null)}class h{constructor(){this._result=!1}dispose(){this._program=p(this._program)}get result(){return null!=this._program&&(this._result=this._test(this._program),this.dispose()),this._result}}class y extends h{constructor(e){super(),this._rctx=e,this._program=e.programCache.acquire("\n    precision highp float;\n\n    attribute vec2 a_pos;\n    varying vec2 v_uv;\n\n    void main() {\n      v_uv = a_pos;\n      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ","\n    precision highp float;\n\n    varying vec2 v_uv;\n\n    uniform sampler2D u_texture;\n\n    void main() {\n      gl_FragColor = texture2D(u_texture, v_uv);\n    }\n    ",new Map([["a_pos",0]]))}dispose(){super.dispose()}_test(e){const p=this._rctx;if(!p.gl)return e.dispose(),!0;const l=new T(1);l.wrapMode=s.CLAMP_TO_EDGE,l.samplingMode=i.NEAREST;const c=new u(p,l),d=r.createVertex(p,n.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),h=new g(p,new Map([["a_pos",0]]),t,{geometry:d}),y=new T;y.samplingMode=i.LINEAR,y.wrapMode=s.CLAMP_TO_EDGE;const A=new m(p,y,f);p.useProgram(e),p.bindTexture(A,0),e.setUniform1i("u_texture",0);const w=p.getBoundFramebufferObject(),{x:X,y:b,width:v,height:I}=p.getViewport();p.bindFramebuffer(c),p.setViewport(0,0,1,1),p.setClearColor(0,0,0,0),p.setBlendingEnabled(!1),p.clearSafe(a.COLOR_BUFFER_BIT),p.bindVAO(h),p.drawArrays(o.TRIANGLE_STRIP,0,4);const Q=new Uint8Array(4);return c.readPixels(0,0,1,1,E.RGBA,_.UNSIGNED_BYTE,Q),h.dispose(),c.dispose(),A.dispose(),p.setViewport(X,b,v,I),p.bindFramebuffer(w),255!==Q[0]}}const f=new Image;f.src="data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='5' height='5' version='1.1' viewBox='0 0 5 5' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='5' height='5' fill='%23f00' fill-opacity='.5'/%3E%3C/svg%3E%0A",f.width=5,f.height=5,f.decode();export{y as S,h as W,d as c,c as h};
