/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{f as a}from"./associatedFeatureServiceUtils.js";import{f as t}from"./requestPresets.js";import{v as r}from"./layerUtils2.js";import{l as s}from"./lazyLayerLoader.js";import n from"../portal/PortalItem.js";import{h as c}from"./portalItemUtils.js";class l{constructor(){this._serviceMetadatas=new Map}async fetchServiceMetadata(e,a){const r=this._serviceMetadatas.get(e);if(r)return r;const s=await t(e,a);return this._serviceMetadatas.set(e,s),s}}function i(e){const a={id:e.id,name:e.name};return"Oriented Imagery Layer"===e.type&&(a.layerType="OrientedImageryLayer"),a}async function o(e,a,t){if(null==e?.layers||null==e?.tables){const r=await t.fetchServiceMetadata(a);(e=e||{}).layers=e.layers||r?.layers?.map(i),e.tables=e.tables||r?.tables?.map(i)}return e}function u(e){const a=e.layers;if(a?.length)return a[0].id;const t=e.tables;return t?.length?t[0].id:null}function y(e){return(e?.layers?.length??0)+(e?.tables?.length??0)}function m(e){const a=[];return e?.layers?.forEach((e=>{"SubtypeGroupLayer"===e.layerType&&a.push(e.id)})),a}function f(e){return e?.layers?.filter((({layerType:e})=>"OrientedImageryLayer"===e)).map((({id:e})=>e))}async function p(e,t,r){if(!e?.url)return t??{};if(t??={},!t.layers){const a=await r.fetchServiceMetadata(e.url);t.layers=a.layers?.map(i)}const{serverUrl:s,portalItem:n}=await a(e.url,{sceneLayerItem:e}).catch((()=>({serverUrl:null,portalItem:null})));if(null==s)return t.tables=[],t;if(!t.tables&&n){const e=await n.fetchData();if(e?.tables)t.tables=e.tables.map(i);else{const e=await r.fetchServiceMetadata(s);t.tables=e?.tables?.map(i)}}if(t.tables)for(const e of t.tables)e.url=`${s}/${e.id}`;return t}async function d(t,s){switch(t.type){case"Map Service":return async function(e,a){const t=await async function(e,a){return(await a.fetchServiceMetadata(e.url)).tileInfo}(e,a);return t?{className:"TileLayer"}:{className:"MapImageLayer"}}(t,s);case"Feature Service":return async function(e,a){const t=await L(e,a);if("object"==typeof t){const e={};return null!=t.id&&(e.layerId=t.id),{className:t.className||"FeatureLayer",properties:e}}return{className:"GroupLayer"}}(t,s);case"Feature Collection":return async function(e){await e.load();const a=c(e,"Map Notes"),t=c(e,"Markup");return a||t?{className:"MapNotesLayer"}:c(e,"Route Layer")?{className:"RouteLayer"}:1===y(await e.fetchData())?{className:"FeatureLayer"}:{className:"GroupLayer"}}(t);case"Scene Service":return async function(e,t){const s=await L(e,t,(async()=>{try{if(!e.url)return[];const{serverUrl:r}=await a(e.url,{sceneLayerItem:e}),s=await t.fetchServiceMetadata(r);return s?.tables??[]}catch{return[]}}));if("object"==typeof s){const a={};let n;if(null!=s.id?(a.layerId=s.id,n=`${e.url}/layers/${s.id}`):n=e.url,e.typeKeywords?.length)for(const a of Object.keys(r))if(e.typeKeywords.includes(a))return{className:r[a]};const c=await t.fetchServiceMetadata(n);return{className:r[c?.layerType]||"SceneLayer",properties:a}}if(!1===s){const a=await t.fetchServiceMetadata(e.url);if("Voxel"===a?.layerType)return{className:"VoxelLayer"}}return{className:"GroupLayer"}}(t,s);case"Image Service":return async function(e,a){await e.load();const t=e.typeKeywords?.map((e=>e.toLowerCase()))??[];if(t.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(t.includes("tiled imagery"))return{className:"ImageryTileLayer"};const r=await e.fetchData(),s=r?.layerType;if("ArcGISTiledImageServiceLayer"===s)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===s)return{className:"ImageryLayer"};const n=await a.fetchServiceMetadata(e.url),c=n.cacheType?.toLowerCase(),l=n.capabilities?.toLowerCase().includes("tilesonly");return"map"===c||l?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(t,s);case"Stream Service":case"Feed":return{className:"StreamLayer"};case"Vector Tile Service":return{className:"VectorTileLayer"};case"GeoJson":return{className:"GeoJSONLayer"};case"CSV":return{className:"CSVLayer"};case"KML":return{className:"KMLLayer"};case"WFS":return{className:"WFSLayer"};case"WMTS":return{className:"WMTSLayer"};case"WMS":return{className:"WMSLayer"};case"Group Layer":return{className:"GroupLayer"};default:throw new e("portal:unknown-item-type","Unknown item type '${type}'",{type:t.type})}}async function L(e,a,t){const r=e.url;if(!r||/\/\d+$/.test(r))return{};await e.load();let s=await e.fetchData();if("Feature Service"===e.type){const e=await o(s,r,a),t=w(e);if("object"==typeof t){const a=m(e),r=f(e);t.className=null!=t.id&&a.includes(t.id)?"SubtypeGroupLayer":null!=t.id&&r?.includes(t.id)?"OrientedImageryLayer":"FeatureLayer"}return t}if("Scene Service"===e.type&&(s=await p(e,s,a)),y(s)>0)return w(s);const n=await a.fetchServiceMetadata(r);return t&&(n.tables=await t()),w(n)}function w(e){return 1===y(e)&&{id:u(e)}}const S=Object.freeze(Object.defineProperty({__proto__:null,fromItem:async function(e){!e.portalItem||e.portalItem instanceof n||(e={...e,portalItem:new n(e.portalItem)});const a=await async function(e){await e.load();const a=new l;return async function(e){const a=e.className,t=s[a];return{constructor:await t(),properties:e.properties}}(await d(e,a))}(e.portalItem);return new(0,a.constructor)({portalItem:e.portalItem,...a.properties})},selectLayerClassPath:d},Symbol.toStringTag,{value:"Module"}));export{l as L,f as a,p as b,y as c,i as d,u as e,S as f,m as g,o as p,d as s};
