/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../Graphic.js";import s,{d as i}from"../../core/Accessor.js";import n from"../../core/Evented.js";import{L as r,t as o}from"../../chunks/Logger.js";import{d as a}from"../../chunks/maybe.js";import{EsriPromiseMixin as l}from"../../core/Promise.js";import{watch as p}from"../../core/reactiveUtils.js";import{property as u}from"../../core/accessorSupport/decorators/property.js";import{o as c}from"../../chunks/ensureType.js";import{i as m}from"../../chunks/typedArrayUtil.js";import{subclass as d}from"../../core/accessorSupport/decorators/subclass.js";import{U as h}from"../../chunks/UpdatingHandles.js";import y from"../../form/FormTemplate.js";import{i as f}from"../../chunks/editableLayers.js";import g from"../../request.js";import{JSONSupportMixin as j}from"../../core/JSONSupport.js";import b from"../../core/Loadable.js";import{p as _}from"../../chunks/arcgisLayerUrl.js";import{isStringField as v,isDateField as V,fixFields as x}from"../../layers/support/fieldUtils.js";import F from"../../layers/support/Subtype.js";import{u as k,a as C,s as I}from"../../chunks/timeZoneUtils.js";import{k as E,i as T,l as w,p as S,m as A,n as R,o as L,b as U,a as M,q as G,v as D}from"../../chunks/featureFormUtils.js";import O from"./FieldInput.js";import{createArcadeProfile as P,createArcadeExecutor as N}from"../../arcade.js";import{debounce as H,isAbortError as B,createResolver as Z}from"../../core/promiseUtils.js";import W from"./GroupInput.js";import $ from"./RelationshipInput.js";import"../../geometry.js";import"../../geometry/Extent.js";import"../../geometry/Geometry.js";import"../../chunks/reader.js";import"../../geometry/SpatialReference.js";import"../../core/lang.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../config.js";import"../../chunks/Ellipsoid.js";import"../../chunks/assets.js";import"../../core/Error.js";import"../../core/urlUtils.js";import"../../core/Handles.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/tracking.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../chunks/time.js";import"../../chunks/writer.js";import"../../kernel.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../PopupTemplate.js";import"../../core/Clonable.js";import"../../core/Collection.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../popup/content.js";import"../../popup/content/AttachmentsContent.js";import"../../popup/content/Content.js";import"../../popup/content/CustomContent.js";import"../../popup/content/ExpressionContent.js";import"../../popup/ElementExpressionInfo.js";import"../../popup/content/FieldsContent.js";import"../../popup/FieldInfo.js";import"../../chunks/enumeration.js";import"../../popup/support/FieldInfoFormat.js";import"../../chunks/date.js";import"../../chunks/locale.js";import"../../chunks/datetime.js";import"../../popup/content/MediaContent.js";import"../../popup/content/BarChartMediaInfo.js";import"../../popup/content/mixins/ChartMediaInfo.js";import"../../popup/content/mixins/MediaInfo.js";import"../../popup/content/support/ChartMediaInfoValue.js";import"../../Color.js";import"../../chunks/colorUtils.js";import"../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../chunks/chartMediaInfoUtils.js";import"../../popup/content/ColumnChartMediaInfo.js";import"../../popup/content/ImageMediaInfo.js";import"../../popup/content/support/ImageMediaInfoValue.js";import"../../popup/content/LineChartMediaInfo.js";import"../../popup/content/PieChartMediaInfo.js";import"../../popup/content/RelationshipContent.js";import"../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../popup/content/TextContent.js";import"../../popup/ExpressionInfo.js";import"../../popup/LayerOptions.js";import"../../popup/RelatedRecordsInfo.js";import"../../support/actions/ActionBase.js";import"../../core/Identifiable.js";import"../../support/actions/ActionButton.js";import"../../support/actions/ActionToggle.js";import"../../core/sql.js";import"../../intl.js";import"../../chunks/messages.js";import"../../chunks/arcadeOnDemand.js";import"../../symbols.js";import"../../symbols/CIMSymbol.js";import"../../symbols/Symbol.js";import"../../symbols/ExtrudeSymbol3DLayer.js";import"../../symbols/Symbol3DLayer.js";import"../../chunks/utils4.js";import"../../symbols/edges/Edges3D.js";import"../../chunks/screenUtils.js";import"../../chunks/materialUtils.js";import"../../chunks/opacityUtils.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";import"../../chunks/Symbol3DMaterial.js";import"../../symbols/FillSymbol.js";import"../../symbols/SimpleLineSymbol.js";import"../../symbols/LineSymbol.js";import"../../symbols/LineSymbolMarker.js";import"../../chunks/lineMarkers.js";import"../../symbols/FillSymbol3DLayer.js";import"../../symbols/patterns/LineStylePattern3D.js";import"../../symbols/patterns/StylePattern3D.js";import"../../chunks/utils5.js";import"../../chunks/colors.js";import"../../chunks/symbolLayerUtils3D.js";import"../../chunks/aaBoundingBox.js";import"../../symbols/Font.js";import"../../symbols/IconSymbol3DLayer.js";import"../../chunks/persistableUrlUtils.js";import"../../chunks/Symbol3DAnchorPosition2D.js";import"../../symbols/LabelSymbol3D.js";import"../../symbols/Symbol3D.js";import"../../chunks/collectionUtils.js";import"../../portal/Portal.js";import"../../portal/PortalGroup.js";import"../../portal/PortalQueryParams.js";import"../../portal/PortalQueryResult.js";import"../../portal/PortalUser.js";import"../../portal/PortalFolder.js";import"../../symbols/LineSymbol3DLayer.js";import"../../symbols/LineStyleMarker3D.js";import"../../symbols/ObjectSymbol3DLayer.js";import"../../symbols/PathSymbol3DLayer.js";import"../../symbols/TextSymbol3DLayer.js";import"../../symbols/WaterSymbol3DLayer.js";import"../../symbols/support/StyleOrigin.js";import"../../chunks/Thumbnail.js";import"../../chunks/calloutUtils.js";import"../../symbols/callouts/Callout3D.js";import"../../symbols/callouts/LineCallout3D.js";import"../../symbols/support/Symbol3DVerticalOffset.js";import"../../symbols/LineSymbol3D.js";import"../../symbols/MarkerSymbol.js";import"../../symbols/MeshSymbol3D.js";import"../../symbols/PictureFillSymbol.js";import"../../chunks/urlUtils.js";import"../../symbols/PictureMarkerSymbol.js";import"../../symbols/PointSymbol3D.js";import"../../symbols/PolygonSymbol3D.js";import"../../chunks/asyncUtils.js";import"../../symbols/SimpleFillSymbol.js";import"../../symbols/SimpleMarkerSymbol.js";import"../../symbols/TextSymbol.js";import"../../symbols/WebStyleSymbol.js";import"../../form/ExpressionInfo.js";import"../../form/elements/GroupElement.js";import"../../form/elements/Element.js";import"../../form/support/elements.js";import"../../form/elements/FieldElement.js";import"../../form/elements/support/inputs.js";import"../../form/elements/inputs/BarcodeScannerInput.js";import"../../form/elements/inputs/TextInput.js";import"../../form/elements/inputs/Input.js";import"../../form/elements/inputs/ComboBoxInput.js";import"../../form/elements/inputs/DatePickerInput.js";import"../../form/elements/inputs/DateTimeOffsetPickerInput.js";import"../../form/elements/inputs/DateTimePickerInput.js";import"../../form/elements/inputs/RadioButtonsInput.js";import"../../form/elements/inputs/SwitchInput.js";import"../../form/elements/inputs/TextAreaInput.js";import"../../form/elements/inputs/TextBoxInput.js";import"../../form/elements/inputs/TimePickerInput.js";import"../../chunks/domains.js";import"../../layers/support/CodedValueDomain.js";import"../../layers/support/Domain.js";import"../../layers/support/InheritedDomain.js";import"../../layers/support/RangeDomain.js";import"../../form/elements/RelationshipElement.js";import"../../chunks/infoFor3D.js";import"../../chunks/layerUtils2.js";import"../../chunks/compilerUtils.js";import"../../chunks/utils2.js";import"../../chunks/basemapUtils.js";import"../../Basemap.js";import"../../chunks/loadAll.js";import"../../portal/PortalItem.js";import"../../portal/PortalItemResource.js";import"../../portal/PortalRating.js";import"../../support/BasemapStyle.js";import"../../chunks/writeUtils.js";import"../../chunks/utils3.js";import"../../chunks/mat4.js";import"../../chunks/featureUtils.js";import"./EditableInput.js";import"./InputBase.js";import"../../chunks/TimeOnly.js";import"../../chunks/UnknownTimeZone.js";import"../../chunks/ImmutableArray.js";import"../../layers/FeatureLayer.js";import"../../renderers/ClassBreaksRenderer.js";import"../../renderers/Renderer.js";import"../../renderers/support/AuthoringInfo.js";import"../../renderers/support/AuthoringInfoVisualVariable.js";import"../../chunks/colorRamps.js";import"../../rest/support/AlgorithmicColorRamp.js";import"../../rest/support/ColorRamp.js";import"../../rest/support/MultipartColorRamp.js";import"../../renderers/mixins/VisualVariablesMixin.js";import"../../renderers/visualVariables/ColorVariable.js";import"../../renderers/visualVariables/VisualVariable.js";import"../../chunks/LegendOptions.js";import"../../renderers/visualVariables/support/ColorStop.js";import"../../renderers/visualVariables/OpacityVariable.js";import"../../renderers/visualVariables/support/OpacityStop.js";import"../../renderers/visualVariables/RotationVariable.js";import"../../renderers/visualVariables/SizeVariable.js";import"../../renderers/visualVariables/support/SizeStop.js";import"../../chunks/visualVariableUtils.js";import"../../chunks/lengthUtils.js";import"../../renderers/support/ClassBreakInfo.js";import"../../chunks/commonProperties.js";import"../../symbols/support/jsonUtils.js";import"../../renderers/DictionaryRenderer.js";import"../../chunks/DictionaryLoader.js";import"../../chunks/LRUCache.js";import"../../chunks/MemCache.js";import"../../chunks/Version.js";import"../../layers/support/FieldsIndex.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/support/AttributeColorInfo.js";import"../../renderers/HeatmapRenderer.js";import"../../renderers/support/HeatmapColorStop.js";import"../../chunks/heatmapUtils.js";import"../../chunks/vec4.js";import"../../chunks/vec4f64.js";import"../../renderers/PieChartRenderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/UniqueValueRenderer.js";import"../../chunks/diffUtils.js";import"../../renderers/support/UniqueValue.js";import"../../renderers/support/UniqueValueClass.js";import"../../renderers/support/UniqueValueGroup.js";import"../../renderers/support/UniqueValueInfo.js";import"../../chunks/styleUtils.js";import"../../renderers/support/jsonUtils.js";import"../../chunks/MultiOriginJSONSupport.js";import"../../chunks/layerContainerType.js";import"../../layers/Layer.js";import"../../core/workers/workers.js";import"../../core/workers/Connection.js";import"../../chunks/Queue.js";import"../../core/workers/RemoteClient.js";import"../../chunks/editsZScale.js";import"../../chunks/queryZScale.js";import"../../chunks/zscale.js";import"../../rest/support/FeatureSet.js";import"../../layers/support/Field.js";import"../../chunks/fieldType.js";import"../../layers/mixins/APIKeyMixin.js";import"../../chunks/ArcGISService.js";import"../../layers/mixins/BlendLayer.js";import"../../chunks/jsonUtils.js";import"../../chunks/parser.js";import"../../chunks/_commonjsHelpers.js";import"../../layers/mixins/CustomParametersMixin.js";import"../../chunks/EditBusLayer.js";import"../../chunks/uuid.js";import"../../layers/mixins/FeatureEffectLayer.js";import"../../layers/support/FeatureEffect.js";import"../../layers/support/FeatureFilter.js";import"../../TimeExtent.js";import"../../chunks/timeUtils.js";import"../../rest/support/Query.js";import"../../chunks/DataLayerSource.js";import"../../chunks/FullTextSearch.js";import"../../chunks/QuantizationParameters.js";import"../../rest/support/StatisticDefinition.js";import"../../layers/mixins/FeatureLayerBase.js";import"../../geometry/HeightModelInfo.js";import"../../chunks/commonProperties2.js";import"../../support/timeUtils.js";import"../../chunks/ElevationInfo.js";import"../../chunks/unitConversionUtils.js";import"../../chunks/featureLayerUtils.js";import"../../chunks/featureQueryAll.js";import"../../rest/support/AttachmentQuery.js";import"../../rest/support/RelationshipQuery.js";import"../../layers/support/GeometryFieldsInfo.js";import"../../layers/support/LayerFloorInfo.js";import"../../layers/support/Relationship.js";import"../../chunks/serviceCapabilitiesUtils.js";import"../../chunks/jsonUtils2.js";import"../../layers/mixins/FeatureReductionLayer.js";import"../../layers/support/AggregateField.js";import"../../layers/support/ExpressionInfo.js";import"../../chunks/FeatureReduction.js";import"../../layers/support/FeatureReductionBinning.js";import"../../layers/support/LabelClass.js";import"../../chunks/labelUtils.js";import"../../chunks/defaults.js";import"../../chunks/defaultsJSON.js";import"../../layers/support/FeatureReductionCluster.js";import"../../layers/support/FeatureReductionSelection.js";import"../../chunks/clusterUtils.js";import"../../chunks/MD5.js";import"../../layers/mixins/OperationalLayer.js";import"../../layers/mixins/OrderedLayer.js";import"../../layers/mixins/PortalLayer.js";import"../../chunks/portalItemUtils.js";import"../../geometry/projection.js";import"../../chunks/projectBuffer.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../layers/mixins/PublishableLayer.js";import"../../layers/support/PublishingInfo.js";import"../../layers/mixins/RefreshableLayer.js";import"../../layers/mixins/ScaleRangeLayer.js";import"../../layers/mixins/TemporalLayer.js";import"../../TimeInterval.js";import"../../layers/support/TimeInfo.js";import"../../layers/support/FeatureTemplate.js";import"../../layers/support/FeatureType.js";import"../../chunks/fieldProperties.js";import"../../chunks/labelingInfo.js";import"../../chunks/versionUtils.js";import"../../chunks/styleUtils2.js";import"../../rest/support/TopFeaturesQuery.js";import"../../rest/support/TopFilter.js";import"../../support/popupUtils.js";import"../../chunks/interfaces.js";import"../../chunks/FeatureRelationshipViewModel.js";let z=class extends s{constructor(e){super(e),this.maxValue=null,this.minValue=null,this.codedValue=null}};e([u()],z.prototype,"objectType",void 0),e([u()],z.prototype,"maxValue",void 0),e([u()],z.prototype,"minValue",void 0),e([u()],z.prototype,"codedValue",void 0),z=e([d("esri.layers.support.ContingentValue")],z);const J=z;let q=class extends s{constructor(e){super(e),this.isRetired=!1}};e([u()],q.prototype,"id",void 0),e([u()],q.prototype,"isRetired",void 0),e([u()],q.prototype,"subtype",void 0),e([u()],q.prototype,"values",void 0),q=e([d("esri.layers.support.Contingency")],q);const Q=q;let K=class extends s{constructor(e){super(e)}};e([u()],K.prototype,"fieldGroup",void 0),e([u()],K.prototype,"type",void 0),K=e([d("esri.layers.support.ContingencyConstraintViolation")],K);const Y=K;let X=class extends s{constructor(e){super(e)}};e([u()],X.prototype,"contingentValuesAllGroups",void 0),e([u()],X.prototype,"contingentValuesByFieldGroup",void 0),X=e([d("esri.layers.support.ContingentValuesResult")],X);const ee=X;let te=class extends s{constructor(e){super(e),this.fields=null,this.isEditingRestrictive=!1}};e([u()],te.prototype,"name",void 0),e([u()],te.prototype,"fields",void 0),e([u()],te.prototype,"isEditingRestrictive",void 0),e([u()],te.prototype,"contingencies",void 0),te=e([d("esri.layers.support.FieldGroup")],te);const se=te;var ie;let ne=ie=class extends(j(b)){constructor(e){super(e),this.request=g,this.fieldGroups=null,this.fieldGroupDefinitions=null}initialize(){}get subtypeFieldName(){const{layer:e}=this;return"subtype-group"===e.type?e.subtypeField:e.typeIdField}static async createLoadedLayerContingentValuesCache(e){await e.load();const t=e.sourceJSON;if(void 0===e.layerId)return null;const s=t.hasContingentValuesDefinition;if(s)return new ie({layer:e}).load();if(void 0===s){const t=_(e.url);if(null==t)return null;const s=t.url.path;if((await ie._staticFetchEnterpriseFeatureRoot(s)).supportsQueryDataElements){const t=e.layerId.toString(),i=await ie._staticFetchEnterpriseFieldGroup(s,t);if(i){const t=i.map((t=>({name:t.name,isEditingRestrictive:t.isEditingRestrictive,fields:t.fieldNames.names.map((t=>e.fieldsIndex.normalizeFieldName(t)))})));return new ie({layer:e,fieldGroupDefinitions:t}).load()}}}return null}async load(e){const t=this.layer.load(e).then((()=>this._initializeContingentValues(this.fieldGroupDefinitions,e)));return this.addResolvingPromise(t),this}validateContingencyConstraints(e,t){const s=Object.keys(e),i=[],n=[];for(const r of this.fieldGroups){const o=r.isEditingRestrictive?"error":"warning";if(t&&!r.fields.some((e=>t.includes(e))))continue;if(!r.fields.every((e=>s.includes(e)))){n.push(new Y({fieldGroup:r,type:o}));continue}let a=!1;const l=e[this.subtypeFieldName],p=r.contingencies.filter((e=>!(!e.isRetired&&e.subtype)||e.subtype.code===l));for(const t of p){let s=!0;for(const i in t.values){const n=t.values[i];if("any"!==n.objectType)if("null"===n.objectType){if(null!=e[i]){s=!1;break}}else if("code"===n.objectType){if(e[i]!==n.codedValue.code){s=!1;break}}else if("range"===n.objectType){const t=e[i];if(t<n.minValue||t>n.maxValue){s=!1;break}}}if(s){a=!0;break}}a||i.push(new Y({fieldGroup:r,type:o}))}return{invalid:i,incomplete:n}}getContingentValues(e,t,s=!1){const i=e[this.subtypeFieldName],n=null!=i,r={};let o=[];const a=this.fieldGroups.filter((e=>e.fields.includes(t)));o.push(new J({objectType:"any"}));for(const l of a){let a=[];const p=l.contingencies.filter((e=>!(e.isRetired||e.subtype&&n&&e.subtype.code!==i)));let u=!1;const c={};for(const s of p){let i,n=!0;for(const r in s.values){const o=s.values[r];if(t!==r){if(void 0!==e[r]&&"any"!==o.objectType)if("null"===o.objectType)null!==e[r]&&(n=!1);else if("code"===o.objectType)e[r]!==o.codedValue.code&&(n=!1);else if("range"===o.objectType){const t=e[r];(t<o.minValue||t>o.maxValue)&&(n=!1)}}else i=o,u=u||"range"===o.objectType}if(i&&n){if("any"===i.objectType){a.length=0,a.push(i);break}const e=this._generateKey(i);c[e]||a.push(i),c[e]=!0}}u&&(a=this._joinRange(a)),r[l.name]=a,o=s?this._filterIntersection(o,a):[]}return 1===a.length&&s&&(o=[]),new ee({contingentValuesAllGroups:o,contingentValuesByFieldGroup:r})}_generateKey(e){switch(e.objectType){case"any":return"@any@";case"null":return"@null@";case"code":return e.codedValue.name+e.codedValue.code.toString();case"range":return e.minValue.toString()+"-"+e.maxValue.toString()}}_joinRange(e){let t,s;e.sort(((e,t)=>"null"===e.objectType?-1:"null"===t.objectType?1:e.minValue-t.minValue));const i=[];for(const n of e)"null"!==n.objectType?null!=t&&null!=s?s<n.minValue?(i.push(new J({objectType:"range",minValue:t,maxValue:s})),t=n.minValue,s=n.maxValue):s<n.maxValue&&(s=n.maxValue):(t=n.minValue,s=n.maxValue):i.push(n);return i.push(new J({objectType:"range",minValue:t,maxValue:s})),i}_filterIntersection(e,t){if(0===e.length||0===t.length)return[];if("any"===e[0].objectType)return t;if("any"===t[0].objectType)return e;const s="range"===e[0].objectType||"range"===e[1]?.objectType,i="range"===t[0].objectType||"range"===t[1]?.objectType;return s||i?this._intersectRanges(e,t):this._intersectValues(e,t)}_intersectRanges(e,t){const s=[];let i,n=0;for(const r of e)for(;n<t.length;n++){const e=t[n];if("null"===r.objectType&&"null"===e.objectType)s.push(new J({objectType:"null"}));else{if("null"===r.objectType)break;if("null"===e.objectType)continue}if(r.maxValue<e.minValue)break;if(r.maxValue===e.minValue){s.push(new J({objectType:"range",minValue:r.maxValue,maxValue:e.minValue}));break}if(!(r.minValue>e.maxValue))if(r.minValue!==e.maxValue){if(i=r.minValue>e.minValue?r.minValue:e.minValue,r.maxValue<e.maxValue){s.push(new J({objectType:"range",minValue:i,maxValue:r.maxValue}));break}s.push(new J({objectType:"range",minValue:i,maxValue:e.maxValue}))}else s.push(new J({objectType:"range",minValue:r.minValue,maxValue:e.maxValue}))}return s}_intersectValues(e,t){const s=[];for(const i of e)t.some((e=>{if(i.objectType===e.objectType)switch(i.objectType){case"any":case"null":return!0;case"code":return i.codedValue.code===e.codedValue.code&&i.codedValue.name===e.codedValue.name}return!1}))&&s.push(i);return s}static async _staticFetchEnterpriseFeatureRoot(e,t){return g(e,{responseType:"json",query:{f:"json"},...t}).then((e=>e.data))}static async _staticFetchEnterpriseFieldGroup(e,t,s){return g(`${e}/queryDataElements`,{responseType:"json",query:{layers:JSON.stringify([t]),f:"json"},...s}).then((e=>e.data.layerDataElements?.[0].dataElement.fieldGroups))}async _initializeContingentValues(e,t){const s=e??await this._fetchFieldGroupDefs(t);if(0===s.length)return void(this.fieldGroups=[]);const i=await this._fetchContingentValues(s,t);this.fieldGroups=i}async _fetchFieldGroupDefs(e){if(void 0===this.layer.layerId)return[];const t=this.layer.sourceJSON,s=this.layer.layerId.toString(),i=_(this.layer.url).url.path;return t.hasContingentValuesDefinition?(await this._fetchAGOLFieldGroup(i,s,e)).map((e=>({name:e.name,isEditingRestrictive:e.restrictive,fields:e.fields.map((e=>this.layer.fieldsIndex.normalizeFieldName(e)))}))):void 0!==t.hasContingentValuesDefinition?[]:this._fetchEnterpriseFeatureRoot(i,e).then((async t=>t.supportsQueryDataElements?(await this._fetchEnterpriseFieldGroup(i,s,e)).map((e=>({name:e.name,isEditingRestrictive:e.isEditingRestrictive,fields:e.fieldNames.names.map((e=>this.layer.fieldsIndex.normalizeFieldName(e)))}))):[]))}async _fetchAGOLFieldGroup(e,t,s){return g(`${e}/${t}/fieldgroups`,{responseType:"json",query:{f:"json"},...s}).then((e=>e.data.fieldGroups))}async _fetchEnterpriseFieldGroup(e,t,s){return ie._staticFetchEnterpriseFieldGroup(e,t,s)}async _fetchEnterpriseFeatureRoot(e,t){return ie._staticFetchEnterpriseFeatureRoot(e,t)}async _fetchContingentValues(e,t){if(void 0===this.layer.layerId)return[];const s=this.layer.sourceJSON,i=this.layer.layerId.toString(),n=_(this.layer.url).url.path;if(s.hasContingentValuesDefinition){const s=await this._fetchAGOLContingentValues(n,i,t);return this._constructFieldGroupsAGOL(e,s)}const r=await this._fetchEnterpriseContingentValues(n,i,t);return this._constructFieldGroupsEnterprise(e,r)}_constructFieldGroupsAGOL(e,t){return e.map((e=>{const s=t.contingentValuesDefinition.fieldGroups.find((t=>t.name===e.name));if(s){let i=[];return i=t.contingentValuesDefinition.hasSubType?this._parseAGOLFieldGroupSubtype(e,t,s.subTypes):this._parseAGOLFieldGroup(e,t,s.contingentValues),new se({name:e.name,isEditingRestrictive:e.isEditingRestrictive,fields:e.fields,contingencies:i})}return null})).filter(m)}_parseAGOLFieldGroupSubtype(e,t,s){let i=[];return s?.forEach((s=>{const n=this._getSubtypeAGOL(s.name);i=i.concat(this._parseAGOLFieldGroup(e,t,s.contingentValues,n))})),i}_parseAGOLFieldGroup(e,t,s,i=null){const n=[];for(const r of s??[]){const s=this._parseAGOLContingency(r,e,t,i);n.push(s)}return n}_parseAGOLContingency(e,t,s,i){const n=e.id,r=!!e.retired&&1===e.retired,o={};for(let n=0,r=0;n<t.fields.length;n++){const a=t.fields[n],l=s.typeCodes[e.types[n]];if("Code"===l){let t=e.values[r];r++;const n=this._getDomain(i,a),l=this.layer.getField(a);if("string"===l?.type){const e=s.stringDicts.find((e=>e.domain===n?.name));e&&(t=e.entries[t])}const p=n?.codedValues.find((e=>e.code===t)),u=new J({codedValue:p,objectType:"code"});o[a]=u}else if("Range"===l){const t=e.values[r];r++;const s=t.range[0],i=t.range[1],n=new J({minValue:s,maxValue:i,objectType:"range"});o[a]=n}else if("Any"===l){const e=new J({objectType:"any"});o[a]=e}else{const e=new J({objectType:"null"});o[a]=e}}return new Q({id:n,isRetired:r,subtype:i,values:o})}_constructFieldGroupsEnterprise(e,t){const s=t.fieldGroups;return e.map((e=>{const i=s.find((t=>t.name===e.name));if(i){const s=i.contingencies.map((s=>{const i=s.id,n=s.isRetired||!1,r=this._getSubtypeEnterprise(s.subtypeCode),o={};for(let i=0;i<e.fields.length;i++){const n=e.fields[i];let a=s.values[i];if("number"==typeof a||"string"==typeof a){const e=this._getDomain(r,n),s=this.layer.getField(n);if(v(s))a=t.stringDictionary[a];else if(V(s)){const e=new Date(`${a}+00:00`);a=e.getTime()}const i=e?.codedValues.find((e=>e.code===a)),l=new J({codedValue:i,objectType:"code"});o[n]=l}else if("object"==typeof a){const e=a.minValue,t=a.maxValue,s=new J({minValue:e,maxValue:t,objectType:"range"});o[n]=s}else if(a){const e=new J({objectType:"any"});o[n]=e}else{const e=new J({objectType:"null"});o[n]=e}}return new Q({id:i,isRetired:n,subtype:r,values:o})}));return new se({name:e.name,isEditingRestrictive:e.isEditingRestrictive,fields:e.fields,contingencies:s})}return null})).filter(m)}async _fetchEnterpriseContingentValues(e,t,s){return g(`${e}/queryContingentValues`,{responseType:"json",query:{layers:JSON.stringify([t]),f:"json"},...s}).then((e=>e.data.contingentValueSets?.[0]))}async _fetchAGOLContingentValues(e,t,s){return g(`${e}/${t}/contingentValues`,{responseType:"json",query:{f:"json"},...s}).then((e=>e.data))}_getSubtypeEnterprise(e){const t=this.layer.sourceJSON;let s;if(t.subtypes){const i=t.subtypes.find((t=>t.code===e));s=F.fromJSON(i)}return s||null}_getSubtypeAGOL(e){const t=this.layer.sourceJSON;let s;if(t.subtypes){const i=t.subtypes.find((t=>t.name===e));s=F.fromJSON(i)}return s||null}_findDomainByFieldName(e,t){const s=e.domains;if(s){const[e,i]=Object.entries(s).find((([e])=>e.trim().toLowerCase()===t.trim().toLowerCase()))||[];return i||null}return null}_getDomain(e,t){const s=e?this._findDomainByFieldName(e,t):this.layer.getFieldDomain(t);return"inherited"===s?.type?this.layer.getFieldDomain(t):s}};e([u({constructOnly:!0})],ne.prototype,"layer",void 0),e([u({constructOnly:!0})],ne.prototype,"request",void 0),e([u({type:[se]})],ne.prototype,"fieldGroups",void 0),e([u({constructOnly:!0})],ne.prototype,"fieldGroupDefinitions",void 0),e([u()],ne.prototype,"subtypeFieldName",null),ne=ie=e([d("esri.layers.support.LayerContingentValuesCache")],ne);const re=ne;var oe;const ae=Symbol("FormExpressionArcadeExecutor");let le=class extends s{constructor(e){super(e),this[oe]=!0,this._lastEvaluatedValue=null,this._abortController=new AbortController,this._stale=!1,this._updatingTracking=new h,this._executeAsyncDebounced=H((async(e,t,s)=>{const i=await this.executor.executeAsync(e,{...t,abortSignal:s});return s.aborted?this._lastEvaluatedValue:(this._lastEvaluatedValue=i,this._stale=!1,i)}))}get isAsync(){return this.executor.isAsync}get fieldsUsed(){return this.executor.fieldsUsed}get syntaxTree(){return this.executor.syntaxTree}get updating(){return this._updatingTracking.updating}get stale(){return this._stale}get geometryUsed(){return this.executor.geometryUsed}get variablesUsed(){return this.executor.variablesUsed}get lastEvaluatedValue(){return this._lastEvaluatedValue}abort(){this._abortController.abort()}execute(e,t){this._abortController=new AbortController;const s=this.executor.execute(e,{...t,abortSignal:this._abortController.signal});return this._lastEvaluatedValue=s,s}async executeAsync(e,t){return this._abortController=new AbortController,this._updatingTracking.addPromise(this._executeAsyncDebounced(e,t??{},this._abortController.signal))}markStale(){this._stale=!0}reset(){this.abort(),this._lastEvaluatedValue=null,this._stale=!1}};oe=ae,e([u()],le.prototype,"_lastEvaluatedValue",void 0),e([u()],le.prototype,"_stale",void 0),e([u()],le.prototype,"_updatingTracking",void 0),e([u({constructOnly:!0})],le.prototype,"executor",void 0),e([u()],le.prototype,"isAsync",null),e([u()],le.prototype,"fieldsUsed",null),e([u()],le.prototype,"syntaxTree",null),e([u()],le.prototype,"updating",null),e([u()],le.prototype,"stale",null),e([u()],le.prototype,"geometryUsed",null),e([u()],le.prototype,"variablesUsed",null),e([u()],le.prototype,"lastEvaluatedValue",null),le=e([d("esri.widgets.FeatureForm.FormExpressionArcadeExecutor")],le);const pe=async(e,t)=>{const s=P("form-calculation"),i=await N(e,s,{});return t?.fieldsIndex&&(i.fieldsUsed=x(t.fieldsIndex,i.fieldsUsed)),new le({executor:i})},ue="#JSAPI_FORM_EXPRESSIONS_MANAGER_GEOMETRY";let ce=class extends s{constructor(e){super(e),this._fieldReferencesLookup=new Map,this._fieldsAffectedLookup=new Map,this.preserveFieldValuesWhenHidden=!0,this._latestFieldValues={...e.feature.attributes}}initialize(){this._dependencyGraph=this._buildDependencyGraph()}destroy(){this.resetExecutors()}get _baseContext(){const{editType:e,layer:t,map:s,originalFeature:i,spatialReference:n,timeZone:r}=this.arcadeContextInfo,o="feature"===t?.type?t:"scene"===t?.type&&null!=t.associatedLayer?t.associatedLayer:void 0;return[{$originalfeature:i,$editcontext:{editType:e},$layer:o,$featureset:o,$datastore:t?.url,$map:s},{rawOutput:!0,spatialReference:n??void 0,timeZone:r}]}set feature(e){this._latestFieldValues={...e?.attributes},this._set("feature",e)}evaluateAll(){return this._evaluate(this.executors)}evaluateExpressions(e){return this._evaluate(e)}evaluateInvalidated(e){const{_fieldReferencesLookup:t,_latestFieldValues:s,feature:i}=this,n=new Set;for(const r of e)if(s[r]=i.getAttribute(r),t.has(r))for(const e of t.get(r))n.add(e);return this._evaluate([...n])}async evaluateInvalidatedByGeometry(){if(this._fieldReferencesLookup.has(ue))return this._evaluate([...this._fieldReferencesLookup.get(ue)])}resetExecutors(){for(const e of this.executors)e.reset()}_buildDependencyGraph(){const{_fieldReferencesLookup:e,_fieldsAffectedLookup:t,executors:s,preserveFieldValuesWhenHidden:i}=this,n=new Map(this.fieldInputs.map((e=>[e.name,e]))),r=!1===i,o=new Map(s.map((e=>[e,new Array])));for(const i of s){for(const s of i.fieldsUsed){c(e,s,(()=>new Set)).add(i);const a=n.get(s);[a?.valueExpressionExecutor,a?.editableExpressionExecutor,r?a?.group?.visibilityExpressionExecutor:null,r?a?.visibilityExpressionExecutor:null].filter((e=>null!=e&&e!==i)).forEach((e=>{o.get(e).push(i),c(t,e,(()=>new Set)).add(a)}))}i.geometryUsed&&c(e,ue,(()=>new Set)).add(i)}return o}async _evaluate(e){const t=new Map,{_dependencyGraph:s,_fieldsAffectedLookup:i,_latestFieldValues:n}=this;for(const i of e)me(i,t,s);for(const[e,{resolver:s,dependencyPromises:r}]of t)Promise.all(r).then((async()=>{const[t,s]=this._makeContext(n);return e.executeAsync(t,s)})).then((()=>{if(i.has(e))for(const t of i.get(e))this._latestFieldValues[t.name]=t.value;s.resolve()}),(t=>{!t||B(t)||de(t)||e.markStale(),s.reject(t)}));const r=(await Promise.allSettled(Array.from(t.values(),(({resolver:e})=>e.promise)))).filter((e=>"rejected"===e.status&&!(B(e.reason)||de(e.reason))));if(r.length>0)throw new AggregateError(r,"One or more expression executions failed")}_makeContext(e){const[t,s]=this._baseContext,i=this.feature.clone();return i.attributes=e,[{...t,$feature:i},s]}};e([u()],ce.prototype,"_baseContext",null),e([u()],ce.prototype,"feature",null),e([u({constructOnly:!0})],ce.prototype,"preserveFieldValuesWhenHidden",void 0),e([u()],ce.prototype,"executors",void 0),e([u()],ce.prototype,"fieldInputs",void 0),e([u()],ce.prototype,"arcadeContextInfo",void 0),ce=e([d("esri.widgets.FeatureForm.FormExpressionsManager")],ce);const me=(e,t,s)=>{if(t.has(e))return;const i=Z();t.set(e,{resolver:i,dependencyPromises:[]}),e.abort();const n=s.get(e);for(const e of n)me(e,t,s),t.get(e).dependencyPromises.push(i.promise)},de=e=>e&&"object"==typeof e&&"message"in e&&"Cancelled"===e.message,he=new t({attributes:{}}),ye=["editableExpression","requiredExpression","valueExpression","visibilityExpression"],fe=["visibilityExpression"],ge=["editableExpression","visibilityExpression"],je="#JSAPI_CONTINGENT_VALUE_ANY_HASH",be="esri.widgets.FeatureForm.FeatureFormViewModel",_e=r.getLogger(be);let ve=class extends(l(n.EventedAccessor)){constructor(e){super(e),this._expressionExecutorsInUse=new Set,this._expressionExecutorLookup=new Map,this._expressionsManager=null,this._contingentValuesCache=null,this._featureClone=he.clone(),this._initialFeature=he.clone(),this._timeZone=null,this._updatingHandles=new h,this.arcadeEditType="NA",this.contingencyConstraintViolations=new Map,this.disabled=!1,this.highlightHelper=null,this.inputs=[],this.map=null,this.relatedRecordCallbacks=null,this.strict=!1}initialize(){const e=p((()=>[this.layer,!!this.layer?.loaded,this.formTemplate,this.feature,this.timeZone,this.arcadeEditType]),(async([e,t])=>{null!=e&&(t?this._updatingHandles.addPromise(this._updateInputs()):e.load().catch((()=>{})))}),{equals:([e,t,s,i,n,r],[o,a,l,p,u,c])=>e===o&&t===a&&s===l&&i===p&&n===u&&r===c,initial:!0}),t=p((()=>this._arcadeContextInfo),(e=>{null!=this._expressionsManager&&(this._expressionsManager.arcadeContextInfo=e,this._updatingHandles.addPromise(this._expressionsManager.evaluateAll().finally((()=>this._afterExpressionsEvaluated()))))})),s=p((()=>this.layer),(e=>{const t="subtype-sublayer"===e?.type?e.parent:"feature"===e?.type?e:null;t&&this.addResolvingPromise(re.createLoadedLayerContingentValuesCache(t).then((e=>{this._contingentValuesCache=e,this.notifyChange("fieldsWithContingentValues")})))}),{initial:!0});this.addHandles([e,t,s])}destroy(){this.feature=null,this.layer=null,this._contingentValuesCache=a(this._contingentValuesCache),this.highlightHelper?.removeAll(),this._updatingHandles.destroy()}get _expressionInfosLookup(){return new Map(this.formTemplate?.expressionInfos?.map((e=>[e.name,e])))}get activeRelationshipInput(){return this.allRelationshipInputs.find((e=>e.relationshipId===this.relationshipId))}get _arcadeContextInfo(){const{_initialFeature:e,arcadeEditType:t,layer:s,map:i,spatialReference:n,timeZone:r}=this;return{layer:f(s)?s:null,originalFeature:e,editType:t,map:i,spatialReference:n,timeZone:r}}get allFieldInputs(){return E(this.inputs)}get allGroupInputs(){return this.inputs.filter(T)}get allRelationshipInputs(){return w(this.inputs)}get _layerFieldsByName(){return new Map(this.layer?.fields.map((e=>[e.name,e])))}get feature(){return this._get("feature")}set feature(e){this._featureClone=e?e.clone():he.clone(),this._initialFeature=this._featureClone.clone(),this._expressionsManager&&(this._expressionsManager.feature=this._featureClone),e?(this._resetFieldInputValues(this._featureClone),this.allRelationshipInputs.forEach((t=>t.feature=e))):(this.inputs.forEach((e=>e.destroy())),this.inputs.length=0),this.contingencyConstraintViolations.clear(),this._set("feature",e)}get fieldsWithContingentValues(){if(null==this._contingentValuesCache)return new Set;const e=this._contingentValuesCache.fieldGroups.flatMap((e=>e.fields));return new Set(e)}get fieldsWithInvalidCodedValue(){const e=this.allFieldInputs;return new Set(e.filter((e=>{const{name:t,domain:s,value:i}=e;if("coded-value"===s?.type){const e=this.getFieldValueOptionsForField(t);return null!=i&&""!==i&&!e.flat().some((e=>e.value===i))}return!1})))}get formTemplate(){return this.layer&&"formTemplate"in this.layer?this.layer.formTemplate:null}set formTemplate(e){void 0===e?this._clearOverride("formTemplate"):this._override("formTemplate",e)}get formDescription(){const{formTemplate:e,layer:t}=this;return e?.description&&t?S({label:e.description,attributes:this.getValues(),fieldsIndex:t.fieldsIndex,timeZone:this.timeZone}):null}get formTitle(){const{formTemplate:e,layer:t}=this;return e?.title&&t?S({label:e.title,attributes:this.getValues(),fieldsIndex:t.fieldsIndex,timeZone:this.timeZone}):null}get formHeaderVisible(){const{activeRelationshipInput:e,formDescription:t,formTitle:s}=this;return!(e||!t&&!s)}set inputFields(e){i(_e,"inputFields",{replacement:"FeatureFormViewModel.inputs",version:"4.27"}),this.inputs=e}get inputFields(){return i(_e,"inputFields",{replacement:"FeatureFormViewModel.inputs",version:"4.27"}),this.inputs}get joinedContingentValues(){return this._joinContingentValues()}get layer(){return this.feature?.sourceLayer&&"applyEdits"in this.feature.sourceLayer?this.feature.sourceLayer:null}set layer(e){this._override("layer",e)}get relationshipId(){return this._get("relationshipId")}set relationshipId(e){const t=this.allRelationshipInputs;if(null!=e&&e===this.relationshipId||t.forEach((e=>e.showAllEnabled=!1)),null!=e){const s=t.find((t=>t.relationshipId===e));s&&(s.showAllEnabled=!0)}this._set("relationshipId",e)}get spatialReference(){return this.layer?.spatialReference??null}set spatialReference(e){this._override("spatialReference",e)}get state(){return this.layer?.loaded?"ready":"disabled"}get submittable(){return!!this.valid||this.allFieldInputs.filter((e=>!e.valid)).every((({submittable:e})=>e))}get timeZone(){const{layer:e}=this;if(e&&"datesInUnknownTimezone"in e&&e.datesInUnknownTimezone)return k;const t=e&&"preferredTimeZone"in e&&e.preferredTimeZone;return this._timeZone===C?t||k:this._timeZone||I}set timeZone(e){this._timeZone=e}get updating(){return this._updatingHandles.updating}get valid(){const e=this.allFieldInputs;return e.length>0&&e.every((({valid:e})=>e))}get view(){return i(_e,"view",{replacement:"FeatureForm.map",version:"4.27"}),this._get("view")}set view(e){i(_e,"view",{replacement:"FeatureForm.map",version:"4.27"}),this._set("view",e),e?.map&&(this.map=e.map)}findField(e){return this.allFieldInputs.find((t=>t.name===e))}getFieldValueOptionsForField(e,t){const s=this.findField(e);if(!s)return[[],[]];const i="coded-value"===s.domain?.type?s.domain.codedValues.map((({name:e,code:t})=>({name:e,value:t}))):[],n=this.fieldsWithContingentValues.has(e)?this._getContingentValueOptionsForField(e,t):[];if(n.length>0){const e=new Set(n.map((e=>e.value)));return[n,i.filter((t=>!e.has(t.value)))]}return[i,[]]}getValue(e){const{_featureClone:t,layer:s}=this,i=!!s?.getField(e);return t.getAttribute(e)??(i?null:void 0)}setValue(e,t){const{_featureClone:s,strict:i}=this,n=this.findField(e);t=""===t?null:t,n&&s.getAttribute(e)!==t&&(n.value=t,i&&!n.valid||(this._afterValueChange(n),null!=this._expressionsManager&&this._updatingHandles.addPromise(this._expressionsManager.evaluateInvalidated([n.name]).finally((()=>this._afterExpressionsEvaluated())))))}getValues(){return{...this._featureClone.attributes}}overrideInitialFeature(e){this._initialFeature=e}submit(){const e=this.allFieldInputs,t=new Set(e.filter((e=>e.valid)).map((({name:e})=>e))),s=e.filter((e=>!e.valid)).map((({name:e})=>e)),i=this.getValues();if(this.validateContingencyConstraints(i,{includeIncompleteViolations:!0}).length>0)for(const[e,i]of this.contingencyConstraintViolations.entries())"error"===i.type&&(t.delete(e),s.push(e));this.emit("submit",{valid:[...t],invalid:s,values:i})}validateContingencyConstraints(e,t){const{_contingentValuesCache:s}=this,i=new Map;if(this.contingencyConstraintViolations=i,null==s)return[];const{invalid:n,incomplete:r}=s.validateContingencyConstraints(e),o=[...n,...t?.includeIncompleteViolations?r:[]];for(const e of o)for(const t of e.fieldGroup.fields)i.set(t,e);return o}notifyFeatureGeometryChanged(){const{_expressionsManager:e,feature:t,_featureClone:s}=this;s.geometry=t.geometry,null!=e&&this._updatingHandles.addPromise(e.evaluateInvalidatedByGeometry().finally((()=>this._afterExpressionsEvaluated())))}_emitChangeEvent({name:e,valid:t,value:s}){this.emit("value-change",{layer:this.layer,feature:this.feature,fieldName:e,value:s,valid:t})}async _updateInputs(){this._stopExpressions();const{_featureClone:e,_initialFeature:t,arcadeEditType:s,formTemplate:i,inputs:n,layer:r,timeZone:o}=this;if(!r)return;const a={arcadeEditType:s,feature:e,initialFeature:t,layer:r,timeZone:o},l=n.slice(),p=i?.elements&&i.elements.length>0?await this._updateInputsUsingFormElements(l,i.elements,a):this._updateInputsUsingLayerFields(l,r?.fields,a);this.inputs=p,await this._startExpressions()}async _updateInputsUsingFormElements(e,t,s){const i=new Map;for(const t of e)if(T(t)){i.set(t.element,t);for(const e of t.inputs)e.element&&i.set(e.element,e)}else t.element&&i.set(t.element,t);const n=new Map,r=this._updateInputsUsingFormElementsRecursive({existingInputsByElement:i,updatedElements:t.filter(Ve),sharedInitializationProperties:s,group:null,newExpressionExecutorPromises:n});for(const[e,t]of i.entries())i.delete(e),t.destroy();return await Promise.all(Array.from(n.values())),r}_updateInputsUsingFormElementsRecursive(e){const{existingInputsByElement:t,updatedElements:s,sharedInitializationProperties:i,group:n,newExpressionExecutorPromises:r}=e,o=[];for(const e of s){const s=t.has(e),a=s?t.get(e):A(e)?this._makeGroupInputFromElement(e,i):R(e)?this._makeFieldInputFromElement(e,i,n):L(e)?this._makeRelationshipInputFromElement(e,i,n):null;if(a){if(o.push(a),this._assignExpressionExecutors(a,e,r),s)if(t.delete(e),T(a)){const{feature:e,timeZone:t}=i;a.set({feature:e,timeZone:t})}else if(U(a)){const t=this.relationshipId===e.relationshipId;a.set(i),a.set({map:this.map,showAllEnabled:t})}else a.set(i);if(A(e)){const s=e.elements.filter((e=>Ve(e)));a.inputs=this._updateInputsUsingFormElementsRecursive({existingInputsByElement:t,updatedElements:s,sharedInitializationProperties:i,group:a,newExpressionExecutorPromises:r})}}}return o}_updateInputsUsingLayerFields(e,t,s){if(!Array.isArray(t))return r.getLogger(this).warn(this.declaredClass,"No attribute fields found."),[];const i=new Map;for(const t of e)if(T(t)){for(const e of t.inputs)e.destroy();t.inputs.length=0,t.destroy()}else U(t)?t.destroy():M(t)&&(null!==t.element?t.destroy():i.set(t.field,t));const n=[],{arcadeEditType:o,feature:a,initialFeature:l,layer:p,timeZone:u}=s;for(const e of t){const t=i.get(e)??new O({arcadeEditType:o,field:e,feature:a,initialFeature:l,layer:p,value:a?.getAttribute(e.name)??null,preservesValueWhenHidden:this.formTemplate?.preserveFieldValuesWhenHidden,timeZone:u});n.push(t),i.delete(e)}for(const[e,t]of i.entries())i.delete(e),t.destroy();return n}_resetFieldInputValues(e){for(const t of this.allFieldInputs)t.value=e.getAttribute(t.name)}_makeFieldInputFromElement(e,t,s){const{arcadeEditType:i,feature:n,initialFeature:r,layer:o,timeZone:a}=t,{fieldName:l}=e,p=l&&this._layerFieldsByName.get(l);return p?new O({arcadeEditType:i,element:e,field:p,value:n?.getAttribute(e.fieldName)??null,feature:n,initialFeature:r,layer:o,group:s,preservesValueWhenHidden:this.formTemplate?.preserveFieldValuesWhenHidden,timeZone:a}):null}_makeGroupInputFromElement(e,t){const{feature:s,layer:i}=t;return new W({element:e,inputs:[],feature:s,layer:i})}_makeRelationshipInputFromElement(e,t,s=null){const{map:i}=this,{feature:n,layer:r,timeZone:o}=t;return new $({element:e,feature:n,group:s,layer:r,map:i,timeZone:o})}_assignExpressionExecutors(e,t,s){const i=A(t)?fe:L(t)?ge:ye;for(const n of i){const i=`${n}Executor`;if(e[i]){this._useExecutor(e[i]);continue}const r=t[n],{_expressionExecutorLookup:o}=this;if(null!=r&&""!==r){const t=this._expressionInfosLookup.get(r)?.expression??r;if(o.has(t))e[i]=this._useExecutor(o.get(t));else if(s.has(t)){const n=s.get(t).then((t=>(e[i]=t,t)));s.set(t,n)}else{const n=pe(t,this.layer).then((s=>(e[i]=this._useExecutor(s),o.set(t,s),s)));s.set(t,n)}}}return[]}_createExpressionsManager(e){const{_arcadeContextInfo:t,_featureClone:s,allFieldInputs:i,formTemplate:n}=this;this._expressionsManager=new ce({executors:e,feature:s,arcadeContextInfo:t,fieldInputs:i,preserveFieldValuesWhenHidden:!0===n?.preserveFieldValuesWhenHidden})}async _startExpressions(){if(0===this._expressionExecutorsInUse.size)return;const e=Array.from(this._expressionExecutorsInUse);this._createExpressionsManager(e),await this._expressionsManager.evaluateAll().finally((()=>this._afterExpressionsEvaluated()))}_stopExpressions(){this._expressionsManager=a(this._expressionsManager),this._expressionExecutorsInUse.clear()}_useExecutor(e){return this._expressionExecutorsInUse.add(e),e}_afterValueChange(e){const{name:t,value:s}=e,{_featureClone:i,formTemplate:n,layer:r}=this;if(!r)return;const a=i.getAttribute(t);i.setAttribute(t,s);const{typeFieldName:l,types:p}=G(r);if(t===l&&s!==a){if("subtype-sublayer"===r.type){const e=r.parent?.findSublayerForFeature(i);i.sourceLayer=this.feature.sourceLayer=e}const e=new Set;for(const t of p)if(t.domains&&"object"==typeof t.domains)for(const s of Object.keys(t.domains))e.add(s);for(const t of e){const e=this.findField(t);e&&e.notifyChange("domain")}}if(null!=n){const{description:e,title:s}=n;s&&o(s,t)&&this.notifyChange("formTitle"),e&&o(e,t)&&this.notifyChange("formDescription")}this._emitChangeEvent(e)}_afterExpressionsEvaluated(){const{_featureClone:e}=this;for(const t of this.allFieldInputs)t.value!==e.getAttribute(t.name)&&this._afterValueChange(t)}_joinContingentValues(){const e=this._contingentValuesCache;if(null==e)return[];const{typeFieldName:t}=G(this.layer),s=t?this.getValue(t):null,i=[];for(const t of e.fieldGroups){const{contingencies:e,fields:n,name:r}=t,o=[];for(const t of e)t.isRetired||null!=t.subtype&&t.subtype.code!==s||o.push({values:t.values});o.length>0&&i.push({name:r,fields:n,contingencies:o})}const[n,r]=this._generateJoinPlan(i);return[...n.flatMap((e=>this._joinFieldGroupContingencies(e))),...r.flatMap((e=>e.contingencies))]}_generateJoinPlan(e){const t=new Map,s=[],i=new Set;for(const n of e)for(const e of n.fields)if(t.has(e)){const r=t.get(e),o=n,a=[r.name,o.name].sort().join("|");if(i.has(a))continue;s.push([r,o]),i.add(a),t.set(e,o)}else t.set(e,n);const n=new Set(s.flat()),r=new Set(e);for(const e of n)r.delete(e);const o=new Map,a=new Map;for(const e of new Set(s.flat())){const t=Symbol(e.name);o.set(t,new Set([e])),a.set(e,t)}for(const[e,t]of s){const s=a.get(e),i=a.get(t);if(s===i)continue;const n=o.get(s),r=o.get(i);for(const e of r)n.add(e),a.set(e,s);o.delete(i)}return[[...o.values()].map((e=>[...e])),[...r]]}_joinFieldGroupContingencies(e){const t=e.slice(),s=t.shift();let i=t.shift(),n=this._generateJoinKey(s.fields,i.fields),r=new Set([...s.fields,...i.fields]),o=new Map;for(const e of s.contingencies){const[t]=this._hashContingency(e,n.codedValueFields,!0);o.has(t)?o.get(t)?.push(e):o.set(t,[e])}for(;t.length>0;){const e=new Map,s=t.shift(),a=this._generateJoinKey(r,s.fields);for(const t of i.contingencies){const[s,i]=this._hashContingency(t,n.codedValueFields),r=i?this._findMatchingContingenciesWithAnyHashMask(o,s):o.get(s);if(o.has(je)&&r?.push(...this._findMatchingContingenciesContainingAny(t,o.get(je),n.codedValueFields)),null!=r)for(const s of r){const i=n.rangeFields.length>0?this._joinContingenciesWithRangeDomains(s,t,n.rangeFields):this._joinContingencies(s,t);if(null==i)break;const[r]=this._hashContingency(i,a.codedValueFields,!0);e.has(r)?e.get(r)?.push(i):e.set(r,[i])}}o=e,i=s,n=a,r=new Set([...r,...i.fields])}const a=[];for(const e of i.contingencies){const[t,s]=this._hashContingency(e,n.codedValueFields),i=s?this._findMatchingContingenciesWithAnyHashMask(o,t):o.get(t);if(o.has(je)&&i.push(...this._findMatchingContingenciesContainingAny(e,o.get(je),n.codedValueFields)),null!=i)for(const t of i){const s=n.rangeFields.length>0?this._joinContingenciesWithRangeDomains(t,e,n.rangeFields):this._joinContingencies(t,e);null!=s&&a.push(s)}}return a}_joinContingencies(e,t){const s={values:{...e.values,...t.values}};for(const[t,i]of Object.entries(s.values))"any"===i.objectType&&null!=e.values[t]&&(s.values[t]=e.values[t]);return s}_joinContingenciesWithRangeDomains(e,t,s){const i=this._joinContingencies(e,t);for(const n of s){const s=e.values[n],r=t.values[n],{leftIsNull:o,rightIsNull:a,bothAreNull:l,leftIsAny:p,rightIsAny:u,bothAreAny:c,leftIsRange:m,rightIsRange:d}=this._compareObjectTypes(s.objectType,r.objectType);if(l||c)continue;if(o&&u||a&&p){i.values[n]=new J({objectType:"null"});continue}if(o&&d||a&&m)return null;p?(s.minValue=-1/0,s.maxValue=1/0):u&&(r.minValue=-1/0,r.maxValue=1/0);const h=Math.max(s.minValue,r.minValue),y=Math.min(s.maxValue,r.maxValue);if(h>y)return null;i.values[n]=new J({objectType:"range",minValue:h,maxValue:y})}return i}_findMatchingContingenciesContainingAny(e,t,s){return t.filter((t=>s.every((s=>{const i=t.values[s],n=e.values[s];return"any"===i.objectType||"any"===n.objectType||i.codedValue?.code===n.codedValue?.code}))))}_findMatchingContingenciesWithAnyHashMask(e,t){const s=RegExp(`${t}$`),i=[];for(const[t,n]of e){if(t===je)break;s.test(t)&&i.push(...n)}return i}_generateJoinKey(e,t){const s=Array.isArray(e)?new Set(e):e,i=Array.isArray(t)?new Set(t):t,n=s.size<i.size?s:i,r=n===s?i:s,o=new Set,a=new Set;for(const e of n)if(r.has(e)){const t=this.layer?.getFieldDomain(e,{feature:this.feature});if(null==t)continue;switch(t.type){case"coded-value":o.add(e);break;case"range":a.add(e)}}return{codedValueFields:[...o],rangeFields:[...a]}}_contingencyIsValid(e,t){const s={};for(const{name:t,value:i}of this.allFieldInputs)this.fieldsWithContingentValues.has(t)&&null!=i&&t!==e&&(s[t]=i);return Object.entries(s).every((([e,s])=>!t.values.hasOwnProperty(e)||D(s,t.values[e])))}_getContingentValueOptionsForField(e,t){const s=this.joinedContingentValues.slice(),i=new Map,n={code:"",name:t??"No value"};for(const t of s){const s=t.values[e];if("code"===s?.objectType||"null"===s?.objectType){const{code:r,name:o}=s.codedValue&&"null"!==s.objectType?s.codedValue:n;!i.has(r)&&this._contingencyIsValid(e,t)&&i.set(r,{name:o,value:r})}}return[...i.values()]}_hashContingency(e,t,s=!1){if(t.length<1)return["#JSAPI_CONTINGENT_VALUE_EMPTY_HASH",!1];const i=[];let n=!1;for(const r of t){const t=e.values[r];if("any"===t.objectType){if(s)return[je,!0];n=!0,i.push(`${r}:.*`)}else"null"===t.objectType?i.push(`${r}:#JSAPI_CONTINGENT_VALUE_NULL_HASH`):i.push(`${r}:${t.codedValue?.code}`)}return[i.sort().join("&"),n]}_compareObjectTypes(e,t){return{leftIsNull:"null"===e,rightIsNull:"null"===t,bothAreNull:"null"===e&&"null"===t,leftIsAny:"any"===e,rightIsAny:"any"===t,bothAreAny:"any"===e&&"any"===t,leftIsRange:"range"===e,rightIsRange:"range"===t}}};function Ve(e){return"field"===e.type||"group"===e.type||"relationship"===e.type||(r.getLogger(be).warn("form-info::unsupported-element-type","Only element types 'field', 'group' and 'relationship' are supported",`Element ${e.label} has unsupported type '${e.type}'`),!1)}e([u()],ve.prototype,"_expressionInfosLookup",null),e([u()],ve.prototype,"_featureClone",void 0),e([u()],ve.prototype,"_timeZone",void 0),e([u()],ve.prototype,"activeRelationshipInput",null),e([u()],ve.prototype,"_arcadeContextInfo",null),e([u()],ve.prototype,"allFieldInputs",null),e([u()],ve.prototype,"allGroupInputs",null),e([u()],ve.prototype,"allRelationshipInputs",null),e([u()],ve.prototype,"_layerFieldsByName",null),e([u()],ve.prototype,"arcadeEditType",void 0),e([u()],ve.prototype,"contingencyConstraintViolations",void 0),e([u()],ve.prototype,"disabled",void 0),e([u()],ve.prototype,"feature",null),e([u()],ve.prototype,"fieldsWithContingentValues",null),e([u()],ve.prototype,"fieldsWithInvalidCodedValue",null),e([u({type:y})],ve.prototype,"formTemplate",null),e([u()],ve.prototype,"formDescription",null),e([u()],ve.prototype,"formTitle",null),e([u()],ve.prototype,"formHeaderVisible",null),e([u()],ve.prototype,"highlightHelper",void 0),e([u()],ve.prototype,"inputs",void 0),e([u()],ve.prototype,"inputFields",null),e([u()],ve.prototype,"joinedContingentValues",null),e([u()],ve.prototype,"layer",null),e([u()],ve.prototype,"map",void 0),e([u()],ve.prototype,"relatedRecordCallbacks",void 0),e([u()],ve.prototype,"relationshipId",null),e([u()],ve.prototype,"spatialReference",null),e([u()],ve.prototype,"state",null),e([u()],ve.prototype,"strict",void 0),e([u()],ve.prototype,"submittable",null),e([u()],ve.prototype,"timeZone",null),e([u()],ve.prototype,"updating",null),e([u()],ve.prototype,"valid",null),e([u()],ve.prototype,"view",null),e([u()],ve.prototype,"getValues",null),e([u()],ve.prototype,"submit",null),ve=e([d(be)],ve);const xe=ve;export{xe as default};
