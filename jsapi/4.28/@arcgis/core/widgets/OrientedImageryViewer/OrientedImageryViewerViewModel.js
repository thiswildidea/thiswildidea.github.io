/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../geometry.js";import t from"../../Graphic.js";import{i as r}from"../../chunks/typedArrayUtil.js";import i from"../../core/Collection.js";import{d as s}from"../../core/Accessor.js";import o from"../../core/Evented.js";import{JSONSupport as a,isSerializable as n}from"../../core/JSONSupport.js";import{L as l}from"../../chunks/Logger.js";import{c}from"../../chunks/mathUtils.js";import{d as p}from"../../chunks/maybe.js";import{watch as m,once as u,initial as h}from"../../core/reactiveUtils.js";import{c as y}from"../../chunks/screenUtils.js";import{property as g}from"../../core/accessorSupport/decorators/property.js";import{j as d}from"../../chunks/ensureType.js";import{subclass as f}from"../../core/accessorSupport/decorators/subclass.js";import j from"../../geometry/Extent.js";import{geographicToWebMercator as v,webMercatorToGeographic as b}from"../../geometry/support/webMercatorUtils.js";import x from"../../layers/GraphicsLayer.js";import M,{R as w}from"../../layers/ImageryTileLayer.js";import P,{c as _,a as I,b as k,g as C,C as S,o as R,d as z,i as F,v as O}from"../../layers/OrientedImageryLayer.js";import{ClonableMixin as V}from"../../core/Clonable.js";import D from"../../core/Error.js";import{cast as A}from"../../core/accessorSupport/decorators/cast.js";import{e as U}from"../../chunks/enumeration.js";import{r as T}from"../../chunks/reader.js";import{w as L}from"../../chunks/writer.js";import H,{d as E}from"../../geometry/Point.js";import N from"../../rest/support/Query.js";import{e as G}from"../../chunks/Ellipsoid.js";import{z as q}from"../../chunks/vec3f64.js";import{j as $,d as W}from"../../chunks/vec3.js";import B from"../../geometry/Circle.js";import J from"../../geometry/Mesh.js";import{M as Z}from"../../geometry/support/MeshComponent.js";import{b as Q}from"../../chunks/unitUtils.js";import{a as K}from"../../chunks/mat3f64.js";import{a as X}from"../../chunks/mat4f64.js";import{B as Y}from"../../chunks/mat4.js";import ee from"../../geometry/Polygon.js";import te from"../../geometry/SpatialReference.js";import{isAbortError as re}from"../../core/promiseUtils.js";import{k as ie}from"../../chunks/mat3.js";import{project as se}from"../../geometry/projection.js";import oe from"../../layers/ElevationLayer.js";import ae from"../../layers/support/RasterFunction.js";import{convolutionKernel as ne}from"../../layers/support/rasterFunctionConstants.js";import le from"../../rest/support/AttachmentQuery.js";import ce from"../../views/MapView.js";import{j as pe}from"../../views/2d/ViewState.js";import{V as me}from"../../chunks/InputManager.js";import{p as ue}from"../../chunks/projectionUtils.js";import"../../geometry/Geometry.js";import"../../core/Handles.js";import"../../config.js";import"../../core/lang.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../chunks/time.js";import"../../chunks/jsonMap.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polyline.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/common.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../chunks/Axis.js";import"../../PopupTemplate.js";import"../../layers/support/fieldUtils.js";import"../../core/sql.js";import"../../intl.js";import"../../chunks/date.js";import"../../chunks/locale.js";import"../../chunks/timeZoneUtils.js";import"../../chunks/datetime.js";import"../../chunks/messages.js";import"../../chunks/arcadeOnDemand.js";import"../../popup/content.js";import"../../popup/content/AttachmentsContent.js";import"../../popup/content/Content.js";import"../../popup/content/CustomContent.js";import"../../popup/content/ExpressionContent.js";import"../../popup/ElementExpressionInfo.js";import"../../popup/content/FieldsContent.js";import"../../popup/FieldInfo.js";import"../../popup/support/FieldInfoFormat.js";import"../../popup/content/MediaContent.js";import"../../popup/content/BarChartMediaInfo.js";import"../../popup/content/mixins/ChartMediaInfo.js";import"../../popup/content/mixins/MediaInfo.js";import"../../popup/content/support/ChartMediaInfoValue.js";import"../../Color.js";import"../../chunks/colorUtils.js";import"../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../chunks/chartMediaInfoUtils.js";import"../../popup/content/ColumnChartMediaInfo.js";import"../../popup/content/ImageMediaInfo.js";import"../../popup/content/support/ImageMediaInfoValue.js";import"../../popup/content/LineChartMediaInfo.js";import"../../popup/content/PieChartMediaInfo.js";import"../../popup/content/RelationshipContent.js";import"../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../popup/content/TextContent.js";import"../../popup/ExpressionInfo.js";import"../../popup/LayerOptions.js";import"../../popup/RelatedRecordsInfo.js";import"../../support/actions/ActionBase.js";import"../../core/Identifiable.js";import"../../support/actions/ActionButton.js";import"../../support/actions/ActionToggle.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../symbols.js";import"../../symbols/CIMSymbol.js";import"../../symbols/Symbol.js";import"../../symbols/ExtrudeSymbol3DLayer.js";import"../../symbols/Symbol3DLayer.js";import"../../chunks/utils4.js";import"../../symbols/edges/Edges3D.js";import"../../chunks/materialUtils.js";import"../../chunks/opacityUtils.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";import"../../chunks/Symbol3DMaterial.js";import"../../symbols/FillSymbol.js";import"../../symbols/SimpleLineSymbol.js";import"../../symbols/LineSymbol.js";import"../../symbols/LineSymbolMarker.js";import"../../chunks/lineMarkers.js";import"../../symbols/FillSymbol3DLayer.js";import"../../symbols/patterns/LineStylePattern3D.js";import"../../symbols/patterns/StylePattern3D.js";import"../../chunks/utils5.js";import"../../chunks/colors.js";import"../../chunks/symbolLayerUtils3D.js";import"../../chunks/aaBoundingBox.js";import"../../symbols/Font.js";import"../../symbols/IconSymbol3DLayer.js";import"../../chunks/persistableUrlUtils.js";import"../../chunks/Symbol3DAnchorPosition2D.js";import"../../symbols/LabelSymbol3D.js";import"../../symbols/Symbol3D.js";import"../../chunks/collectionUtils.js";import"../../portal/Portal.js";import"../../core/Loadable.js";import"../../core/Promise.js";import"../../portal/PortalGroup.js";import"../../portal/PortalQueryParams.js";import"../../portal/PortalQueryResult.js";import"../../portal/PortalUser.js";import"../../portal/PortalFolder.js";import"../../symbols/LineSymbol3DLayer.js";import"../../symbols/LineStyleMarker3D.js";import"../../symbols/ObjectSymbol3DLayer.js";import"../../symbols/PathSymbol3DLayer.js";import"../../symbols/TextSymbol3DLayer.js";import"../../symbols/WaterSymbol3DLayer.js";import"../../symbols/support/StyleOrigin.js";import"../../chunks/Thumbnail.js";import"../../chunks/calloutUtils.js";import"../../symbols/callouts/Callout3D.js";import"../../symbols/callouts/LineCallout3D.js";import"../../symbols/support/Symbol3DVerticalOffset.js";import"../../symbols/LineSymbol3D.js";import"../../symbols/MarkerSymbol.js";import"../../symbols/MeshSymbol3D.js";import"../../symbols/PictureFillSymbol.js";import"../../chunks/urlUtils.js";import"../../symbols/PictureMarkerSymbol.js";import"../../symbols/PointSymbol3D.js";import"../../symbols/PolygonSymbol3D.js";import"../../chunks/asyncUtils.js";import"../../symbols/SimpleFillSymbol.js";import"../../symbols/SimpleMarkerSymbol.js";import"../../symbols/TextSymbol.js";import"../../symbols/WebStyleSymbol.js";import"../../chunks/GraphicsCollection.js";import"../../layers/Layer.js";import"../../layers/mixins/BlendLayer.js";import"../../chunks/jsonUtils.js";import"../../chunks/parser.js";import"../../chunks/utils3.js";import"../../chunks/_commonjsHelpers.js";import"../../layers/mixins/ScaleRangeLayer.js";import"../../chunks/ElevationInfo.js";import"../../chunks/unitConversionUtils.js";import"../../chunks/lengthUtils.js";import"../../chunks/MultiOriginJSONSupport.js";import"../../chunks/ArcGISService.js";import"../../chunks/arcgisLayerUrl.js";import"../../layers/mixins/CustomParametersMixin.js";import"../../layers/mixins/ImageryTileMixin.js";import"../../rasterRenderers.js";import"../../renderers/ClassBreaksRenderer.js";import"../../renderers/Renderer.js";import"../../renderers/support/AuthoringInfo.js";import"../../renderers/support/AuthoringInfoVisualVariable.js";import"../../chunks/colorRamps.js";import"../../rest/support/AlgorithmicColorRamp.js";import"../../rest/support/ColorRamp.js";import"../../rest/support/MultipartColorRamp.js";import"../../renderers/mixins/VisualVariablesMixin.js";import"../../renderers/visualVariables/ColorVariable.js";import"../../renderers/visualVariables/VisualVariable.js";import"../../chunks/LegendOptions.js";import"../../renderers/visualVariables/support/ColorStop.js";import"../../renderers/visualVariables/OpacityVariable.js";import"../../renderers/visualVariables/support/OpacityStop.js";import"../../renderers/visualVariables/RotationVariable.js";import"../../renderers/visualVariables/SizeVariable.js";import"../../renderers/visualVariables/support/SizeStop.js";import"../../chunks/visualVariableUtils.js";import"../../chunks/compilerUtils.js";import"../../renderers/support/ClassBreakInfo.js";import"../../chunks/commonProperties.js";import"../../symbols/support/jsonUtils.js";import"../../chunks/layerUtils2.js";import"../../renderers/FlowRenderer.js";import"../../renderers/RasterColormapRenderer.js";import"../../renderers/support/ColormapInfo.js";import"../../chunks/colorRampUtils.js";import"../../chunks/colorUtils2.js";import"../../chunks/vec4.js";import"../../chunks/vec4f64.js";import"../../renderers/RasterShadedReliefRenderer.js";import"../../renderers/RasterStretchRenderer.js";import"../../chunks/stretchRendererUtils.js";import"../../renderers/UniqueValueRenderer.js";import"../../chunks/diffUtils.js";import"../../renderers/support/UniqueValue.js";import"../../renderers/support/UniqueValueClass.js";import"../../renderers/support/UniqueValueGroup.js";import"../../renderers/support/UniqueValueInfo.js";import"../../chunks/styleUtils.js";import"../../renderers/VectorFieldRenderer.js";import"../../geometry/support/normalizeUtils.js";import"../../chunks/normalizeUtilsCommon.js";import"../../chunks/simplify.js";import"../../chunks/utils6.js";import"../../chunks/utils7.js";import"../../chunks/vectorFieldUtils.js";import"../../layers/support/PixelBlock.js";import"../../chunks/pixelRangeUtils.js";import"../../chunks/utils8.js";import"../../symbols/support/cimSymbolUtils.js";import"../../chunks/utils9.js";import"../../chunks/LRUCache.js";import"../../chunks/MemCache.js";import"../../chunks/commonProperties2.js";import"../../TimeExtent.js";import"../../chunks/timeUtils.js";import"../../chunks/layerContainerType.js";import"../../support/timeUtils.js";import"../../layers/support/DimensionalDefinition.js";import"../../layers/support/MultidimensionalSubset.js";import"../../chunks/RasterJobHandler.js";import"../../core/workers/workers.js";import"../../core/workers/Connection.js";import"../../chunks/Queue.js";import"../../core/workers/RemoteClient.js";import"../../layers/support/TileInfo.js";import"../../layers/support/LOD.js";import"../../chunks/TileKey.js";import"../../layers/support/RasterInfo.js";import"../../layers/support/RasterBandInfo.js";import"../../layers/support/RasterSensorInfo.js";import"../../chunks/multidimensionalUtils.js";import"../../chunks/RawBlockCache.js";import"../../chunks/rasterProjectionHelper.js";import"../../chunks/RasterSymbolizer.js";import"../../chunks/stretchUtils.js";import"../../rest/support/FeatureSet.js";import"../../layers/support/Field.js";import"../../chunks/domains.js";import"../../layers/support/CodedValueDomain.js";import"../../layers/support/Domain.js";import"../../layers/support/InheritedDomain.js";import"../../layers/support/RangeDomain.js";import"../../chunks/fieldType.js";import"../../chunks/rasterFunctionHelper.js";import"../../chunks/focalStatUtils.js";import"../../chunks/rasterRendererHelper.js";import"../../chunks/generateRendererUtils.js";import"../../rest/support/ImageHistogramParameters.js";import"../../layers/support/MosaicRule.js";import"../../chunks/dataUtils.js";import"../../chunks/projectBuffer.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";import"../../layers/mixins/OperationalLayer.js";import"../../layers/mixins/PortalLayer.js";import"../../portal/PortalItem.js";import"../../portal/PortalItemResource.js";import"../../portal/PortalRating.js";import"../../chunks/portalItemUtils.js";import"../../layers/mixins/RefreshableLayer.js";import"../../layers/mixins/TemporalLayer.js";import"../../TimeInterval.js";import"../../layers/support/TimeInfo.js";import"../../chunks/utils10.js";import"../../chunks/xmlUtilities.js";import"../../chunks/TilemapCache.js";import"../../chunks/ByteSizeUnit.js";import"../../chunks/fetchRasterInfo.js";import"../../support/popupUtils.js";import"../../chunks/interfaces.js";import"../../layers/FeatureLayer.js";import"../../renderers/DictionaryRenderer.js";import"../../chunks/DictionaryLoader.js";import"../../chunks/Version.js";import"../../layers/support/FieldsIndex.js";import"../../chunks/UnknownTimeZone.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/support/AttributeColorInfo.js";import"../../renderers/HeatmapRenderer.js";import"../../renderers/support/HeatmapColorStop.js";import"../../chunks/heatmapUtils.js";import"../../renderers/PieChartRenderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/support/jsonUtils.js";import"../../form/FormTemplate.js";import"../../form/ExpressionInfo.js";import"../../form/elements/GroupElement.js";import"../../form/elements/Element.js";import"../../form/support/elements.js";import"../../form/elements/FieldElement.js";import"../../form/elements/support/inputs.js";import"../../form/elements/inputs/BarcodeScannerInput.js";import"../../form/elements/inputs/TextInput.js";import"../../form/elements/inputs/Input.js";import"../../form/elements/inputs/ComboBoxInput.js";import"../../form/elements/inputs/DatePickerInput.js";import"../../form/elements/inputs/DateTimeOffsetPickerInput.js";import"../../form/elements/inputs/DateTimePickerInput.js";import"../../form/elements/inputs/RadioButtonsInput.js";import"../../form/elements/inputs/SwitchInput.js";import"../../form/elements/inputs/TextAreaInput.js";import"../../form/elements/inputs/TextBoxInput.js";import"../../form/elements/inputs/TimePickerInput.js";import"../../form/elements/RelationshipElement.js";import"../../chunks/editsZScale.js";import"../../chunks/queryZScale.js";import"../../layers/mixins/APIKeyMixin.js";import"../../chunks/EditBusLayer.js";import"../../chunks/uuid.js";import"../../layers/mixins/FeatureEffectLayer.js";import"../../layers/support/FeatureEffect.js";import"../../layers/support/FeatureFilter.js";import"../../chunks/DataLayerSource.js";import"../../chunks/FullTextSearch.js";import"../../chunks/QuantizationParameters.js";import"../../rest/support/StatisticDefinition.js";import"../../layers/mixins/FeatureLayerBase.js";import"../../geometry/HeightModelInfo.js";import"../../chunks/featureLayerUtils.js";import"../../chunks/featureQueryAll.js";import"../../rest/support/RelationshipQuery.js";import"../../layers/support/GeometryFieldsInfo.js";import"../../layers/support/LayerFloorInfo.js";import"../../layers/support/Relationship.js";import"../../chunks/serviceCapabilitiesUtils.js";import"../../chunks/jsonUtils2.js";import"../../layers/support/Subtype.js";import"../../layers/mixins/FeatureReductionLayer.js";import"../../layers/support/AggregateField.js";import"../../layers/support/ExpressionInfo.js";import"../../chunks/FeatureReduction.js";import"../../layers/support/FeatureReductionBinning.js";import"../../layers/support/LabelClass.js";import"../../chunks/labelUtils.js";import"../../chunks/defaults.js";import"../../chunks/defaultsJSON.js";import"../../layers/support/FeatureReductionCluster.js";import"../../layers/support/FeatureReductionSelection.js";import"../../chunks/clusterUtils.js";import"../../chunks/MD5.js";import"../../layers/mixins/OrderedLayer.js";import"../../layers/mixins/PublishableLayer.js";import"../../layers/support/PublishingInfo.js";import"../../layers/support/FeatureTemplate.js";import"../../layers/support/FeatureType.js";import"../../chunks/fieldProperties.js";import"../../chunks/labelingInfo.js";import"../../chunks/versionUtils.js";import"../../chunks/styleUtils2.js";import"../../rest/support/TopFeaturesQuery.js";import"../../rest/support/TopFilter.js";import"../../chunks/requestPresets.js";import"../../geometry/support/geodesicUtils.js";import"../../chunks/axisAngleDegrees.js";import"../../chunks/quat.js";import"../../chunks/quatf64.js";import"../../chunks/meshErrors.js";import"../../geometry/support/MeshGeoreferencedRelativeVertexSpace.js";import"../../geometry/support/MeshGeoreferencedVertexSpace.js";import"../../geometry/support/MeshLocalVertexSpace.js";import"../../geometry/support/MeshTransform.js";import"../../chunks/triangulationUtils.js";import"../../chunks/earcut.js";import"../../chunks/DoubleArray.js";import"../../chunks/Indices.js";import"../../chunks/deduplicate.js";import"../../chunks/plane.js";import"../../chunks/vector.js";import"../../chunks/vec2f64.js";import"../../chunks/mathUtils2.js";import"../../chunks/Attribute.js";import"../../chunks/ContentObject.js";import"../../chunks/Geometry.js";import"../../chunks/basicInterfaces.js";import"../../chunks/Util.js";import"../../chunks/triangle.js";import"../../chunks/lineSegment.js";import"../../chunks/VertexAttribute.js";import"../../chunks/doublePrecisionUtils.js";import"../../chunks/georeference.js";import"../../chunks/spatialReferenceEllipsoidUtils.js";import"../../chunks/computeTranslationToOriginAndRotation.js";import"../../chunks/vec32.js";import"../../chunks/BufferView.js";import"../../chunks/vec2.js";import"../../chunks/projectPointToVector.js";import"../../chunks/External.js";import"../../chunks/infoFor3D.js";import"../../geometry/support/MeshMaterial.js";import"../../geometry/support/MeshTexture.js";import"../../chunks/imageUtils.js";import"../../geometry/support/MeshTextureTransform.js";import"../../geometry/support/MeshMaterialMetallicRoughness.js";import"../../layers/mixins/ArcGISCachedService.js";import"../../chunks/TileInfoTilemapCache.js";import"../../chunks/LercDecoder.js";import"../../chunks/WorkerHandle.js";import"../../Viewpoint.js";import"../../Camera.js";import"../../chunks/Cyclical.js";import"../../chunks/CollectionFlattener.js";import"../../views/BreakpointsOwner.js";import"../../views/DOMContainer.js";import"../../chunks/domUtils.js";import"../../chunks/UpdatingHandles.js";import"../../chunks/projector.js";import"../../chunks/widgetUtils.js";import"../../views/PopupView.js";import"../../chunks/PropertiesPool.js";import"../../core/signal.js";import"../../views/View.js";import"../../Map.js";import"../../Basemap.js";import"../../chunks/loadAll.js";import"../../support/BasemapStyle.js";import"../../chunks/writeUtils.js";import"../../Ground.js";import"../../chunks/editableLayers.js";import"../../chunks/basemapUtils.js";import"../../chunks/collectionUtils2.js";import"../../support/LayersMixin.js";import"../../support/TablesMixin.js";import"../../views/BasemapView.js";import"../../views/Magnifier.js";import"../../views/Theme.js";import"../../chunks/ViewEvents.js";import"../../chunks/IViewEvents.js";import"../../chunks/interfaces5.js";import"../../chunks/screenUtils2.js";import"../../views/input/Input.js";import"../../views/input/gamepad/GamepadSettings.js";import"../../views/input/gamepad/GamepadInputDevice.js";import"../../views/navigation/Navigation.js";import"../../views/navigation/gamepad/GamepadSettings.js";import"../../chunks/heightModelInfoUtils.js";import"../../chunks/ViewingMode.js";import"../../views/ViewAnimation.js";import"../../chunks/unitBezier.js";import"../../chunks/TileInfoView.js";import"../../chunks/TileKey2.js";import"../../chunks/TileStrategy.js";import"../../chunks/QueueProcessor.js";import"../../chunks/WebGLRequirements.js";import"../../chunks/capabilities2.js";import"../../chunks/contextUtils.js";import"../../chunks/TileStore.js";import"../../chunks/rbush.js";import"../../chunks/quickselect.js";import"../../chunks/HighlightOptions.js";import"../../views/ui/DefaultUI.js";import"../../views/ui/UI.js";import"../../chunks/themeUtils.js";import"../Attribution.js";import"../Widget.js";import"../../chunks/dom.js";import"../../chunks/index.js";import"../../chunks/jsxWidgetSupport.js";import"../../chunks/legacyIcon.js";import"../Attribution/AttributionViewModel.js";import"../../chunks/globalCss.js";import"../../chunks/accessibleHandler.js";import"../../chunks/messageBundle.js";import"../../chunks/jsxFactory.js";import"../Compass.js";import"../Compass/CompassViewModel.js";import"../support/GoTo.js";import"../NavigationToggle.js";import"../NavigationToggle/NavigationToggleViewModel.js";import"../Zoom.js";import"../../chunks/resources.js";import"../Zoom/ZoomViewModel.js";import"../../webmap/background/ColorBackground.js";import"../../chunks/mat2d.js";import"../../chunks/mat2df32.js";import"../../chunks/mat2df64.js";import"../../chunks/mat3f32.js";import"../../chunks/vec2f32.js";const he="esri-widget",ye="esri-oriented-imagery-viewer",ge=`${ye}__carousel`,de=`${ye}__image-enhancement`,fe=`${ye}__navigation`,je="--oi-navigation-tool-rotation-from",ve="--oi-navigation-tool-rotation-to",be={addCoverage:`${ye}__body-additional-coverage`,addExpPoints:`${ye}__body-additional-camera-locations`,body:`${ye}__body`,carousel:`${ye}__carousel`,carouselContainer:`${ge}-container`,carouselContent:`${ge}-content`,carouselItem:`${ge}-item`,carouselItemWrapper:`${ge}-item-wrapper`,close:`${ye}__close`,currentCoverage:`${ye}__body-current-coverage`,dock:`${ye}--docked`,feature:`${fe}-feature`,float:`${ye}--floating`,footprint:`${ye}__body-footprint`,imageEnhancementWrapper:`${de}-wrapper`,imageEnhancementTools:`${de}-tools`,imageEnhancementToolContainer:`${de}-tool-container`,messageBox:`${ye}__message-box`,navigationPathOffset0:`${fe}-feature-path-stop-offset-0`,navigationPathOffset1:`${fe}-feature-path-stop-offset-1`,navigationWrapper:`${fe}-wrapper`,navigationZoomed:`${fe}-wrapper--zoomed`,north:`${fe}-pointer-north`,outerSector:`${fe}-sector-outer`,pointer:`${fe}-pointer`,rotateWithAnimation:`${fe}-animate`,selectedFeaturePath:`${fe}-feature-path`,sector:`${fe}-sector`,sectorCross:`${fe}-sector-cross`,sectorDisabled:`${fe}-sector-disabled`,sectorEnabled:`${fe}-sector-enabled`,sectorSeparator:`${fe}-sector-separator`,submenu:`${ye}__submenu`,viewer:`${ye}__viewer`,viewerContainer:`${ye}__viewer-container`},xe={closeButton:!0,coverageMenu:!0,imageEnhancement:!0,imageGallery:!0,mapImageConversionTool:!0,navigationTool:!0,viewerTools:!0,title:!0},Me=120,we=[21,36,51,60],Pe=3.5,_e=["FAR_WEST","FAR_NORTH","FAR_EAST","FAR_SOUTH","WEST","NORTH","EAST","SOUTH","NEAR_WEST","NEAR_NORTH","NEAR_EAST","NEAR_SOUTH"],Ie=23.937554159486076,ke=96.06244584051393,Ce={EAST:[Ie,Ie,ke,Ie,60,Ie],NORTH:[Ie,ke,Ie,Ie,Ie,60],SOUTH:[ke,Ie,ke,ke,ke,60],WEST:[ke,ke,Ie,ke,60,ke]};let Se=class{static getCameraOrientation(e){return _(e)}static register(e,t,r){I.set(e,{desc:t,constructor:r})}};Se=e([f("esri.layers.orientedImagery.core.cameraOrientationFactory")],Se);const Re=Se;let ze=class extends(V(a)){constructor(e){super(e),this.cameraOrientation=null,this.elevation=null,this.elevationSource=null,this.name=null}read(e,t){const r={},{attributes:i,layer:s,geometry:o}=e;for(const e in i)r[e.toLowerCase()]=i[e];super.read({geometry:o,layer:s??{},...r},t)}readCameraHeading(e,t){const{cameraheading:r,camheading:i,layer:s}=t;return r??i??s.cameraHeading}readCameraHeight(e,t){const{cameraheight:r,avghtag:i,layer:s}=t;return r??i??s.cameraHeight}readCamOffset(e,t){const{cameraoffset:r,camoffset:i}=t;return r?.split(";").map(Number)??i?.split(";").map(Number)??null}writeCameraOffset(e,t){e&&(t.cameraOffset=e.join(";"))}readCameraOrientation(e,t){const{cameraorientation:r,camori:i}=t;return r??i}readCameraPitch(e,t){const{camerapitch:r,campitch:i,layer:s}=t;return r??i??s.cameraPitch}readCameraRoll(e,t){const{cameraroll:r,camroll:i,layer:s}=t;return r??i??s.cameraRoll}readDepthImage(e,t){const{depthimage:r,depthimg:i,layer:s}=t,o=r??i??null,{depthImagePathPrefix:a,depthImagePathSuffix:n}=s??{};return k(o,a,n)}readElevationSource(e,t){const{elevationsource:r,layer:i}=t,{demPathSuffix:s,demPathPrefix:o}=i;if(r){const e=this._parseIfJSON(r);return C(e,o,s)}return i.effectiveElevationSource}readFarDistance(e,t){const{fardistance:r,fardist:i,layer:s}=t;return r??i??s.farDistance}readHFOV(e,t){const{horizontalfieldofview:r,hfov:i,layer:s}=t;return r??i??s.horizontalFieldOfView}readImageURL(e,t){const{imagepath:r,layer:i}=t;r||function(e,t){throw new D("exposure-point:missing-attribute-value","a value for imagePath is missing in attribute table",{exposurePoint:t})}(0,this);const{imagePathPrefix:s,imagePathSuffix:o}=i;return k(r,s,o)}readImageRotation(e,t){const{imagerotation:r,imgrot:i,layer:s}=t;return r??i??s.imageRotation}get isHorizontal(){return"horizontal"===this.orientedImageryType}get isInspection(){return"inspection"===this.orientedImageryType}get isNadir(){return"nadir"===this.orientedImageryType}get isOblique(){return"oblique"===this.orientedImageryType}get isSpherical(){return"360"===this.orientedImageryType}get location(){const{cameraOrientation:e,geometry:t,cameraHeight:r,elevation:i}=this;if(e){const{type:t,x:r,y:i,z:s,horizontalWKID:o}=e;return new H({x:r,y:i,z:s,spatialReference:{wkid:t===S.LTP?4326:o}})}if("number"!=typeof r)throw function(e){throw new D("exposure-point:missing-default-value","a value for cameraHeight is missing in default properties")}();return t.z=(i??0)+r,t}readNearDistance(e,t){const{neardistance:r,neardist:i,layer:s}=t;return r??i??s.nearDistance}readOrientationAccuracy(e,t){const{accuracy:r,orientationaccuracy:i}=t;return i?.split(";").map(Number)??r?.split(";").map(Number)??null}writeOrientationAccuracy(e,t){e&&(t.orientationAccuracy=e.join(";"))}readOIType(e,t){const{orientedimagerytype:r,oitype:i,camerapitch:s,campitch:o,layer:a}=t,n=R.read(r??i??a.orientedImageryType),l=s??o??a.cameraPitch;return"oblique"===n?l<10?"nadir":"oblique":n}readVFOV(e,t){const{verticalfieldofview:r,vfov:i,layer:s}=t;return r??i??s.verticalFieldOfView}_parseIfJSON(e){let t=null;try{t=JSON.parse(e)}catch(t){l.getLogger(this).error("couldn't parse the given elevation source JSON",e,t)}return t}};e([g({type:Date,json:{write:{enabled:!0,target:"aquisitionDate"},name:"acquisitiondate"}})],ze.prototype,"acquisitionDate",void 0),e([g({type:Number,json:{write:!0,read:{source:["cameraheading","camheading","layer.cameraHeading"]}}})],ze.prototype,"cameraHeading",void 0),e([T("cameraHeading")],ze.prototype,"readCameraHeading",null),e([g({type:Number,json:{write:!0}})],ze.prototype,"cameraHeight",void 0),e([T("cameraHeight",["cameraheight","avghtag","layer.cameraHeight"])],ze.prototype,"readCameraHeight",null),e([g()],ze.prototype,"cameraOffset",void 0),e([T("cameraOffset",["cameraoffset","camoffset"])],ze.prototype,"readCamOffset",null),e([L("cameraOffset")],ze.prototype,"writeCameraOffset",null),e([g({json:{write:!0},type:z}),A((e=>e?Re.getCameraOrientation(e):null))],ze.prototype,"cameraOrientation",void 0),e([T("cameraOrientation",["cameraorientation","camori"])],ze.prototype,"readCameraOrientation",null),e([g({type:Number,json:{write:!0}})],ze.prototype,"cameraPitch",void 0),e([T("cameraPitch",["camerapitch","campitch","layer.cameraPitch"])],ze.prototype,"readCameraPitch",null),e([g({type:Number,json:{write:!0}})],ze.prototype,"cameraRoll",void 0),e([T("cameraRoll",["cameraroll","camroll","layer.cameraRoll"])],ze.prototype,"readCameraRoll",null),e([g({json:{write:!0},type:String})],ze.prototype,"depthImage",void 0),e([T("depthImage",["depthimage","depthimg"])],ze.prototype,"readDepthImage",null),e([g({type:Number,json:{write:!0}})],ze.prototype,"elevation",void 0),e([g({json:{write:!0}})],ze.prototype,"elevationSource",void 0),e([T("elevationSource",["elevationsource","layer.effectiveElevationSource"])],ze.prototype,"readElevationSource",null),e([g({json:{name:"exposurestationid",write:{target:"exposureStationId"}},type:String})],ze.prototype,"exposureStationId",void 0),e([g({type:Number,json:{write:!0}})],ze.prototype,"farDistance",void 0),e([T("farDistance",["fardistance","fardist","layer.farDistance"])],ze.prototype,"readFarDistance",null),e([g({type:H,json:{name:"geometry"}})],ze.prototype,"geometry",void 0),e([g({type:Number,json:{write:!0}})],ze.prototype,"horizontalFieldOfView",void 0),e([T("horizontalFieldOfView",["horizontalfieldofview","hfov","layer.horizontalFieldOfView"])],ze.prototype,"readHFOV",null),e([g({json:{write:!0},type:String})],ze.prototype,"imagePath",void 0),e([T("imagePath",["imagepath"])],ze.prototype,"readImageURL",null),e([g({type:Number,json:{write:!0}})],ze.prototype,"imageRotation",void 0),e([T("imageRotation",["imagerotation","imgrot","layer.imageRotation"])],ze.prototype,"readImageRotation",null),e([g()],ze.prototype,"isHorizontal",null),e([g()],ze.prototype,"isInspection",null),e([g()],ze.prototype,"isNadir",null),e([g()],ze.prototype,"isOblique",null),e([g()],ze.prototype,"isSpherical",null),e([g()],ze.prototype,"location",null),e([g({json:{write:!0},type:String})],ze.prototype,"name",void 0),e([g({type:Number,json:{write:!0}})],ze.prototype,"nearDistance",void 0),e([T("nearDistance",["neardistance","neardist","layer.nearDistance"])],ze.prototype,"readNearDistance",null),e([g({json:{write:!0,name:"objectid"},type:Number})],ze.prototype,"objectId",void 0),e([g()],ze.prototype,"orientationAccuracy",void 0),e([T("orientationAccuracy",["accuracy","orientationaccuracy"])],ze.prototype,"readOrientationAccuracy",null),e([L("orientationAccuracy")],ze.prototype,"writeOrientationAccuracy",null),e([U(R)],ze.prototype,"orientedImageryType",void 0),e([T("orientedImageryType",["orientedimagerytype","oitype","layer.orientedImageryType"])],ze.prototype,"readOIType",null),e([g({type:Number,json:{name:"sortorder",write:{target:"sortOrder"}}})],ze.prototype,"sortOrder",void 0),e([g({type:Number,json:{write:!0}})],ze.prototype,"verticalFieldOfView",void 0),e([T("verticalFieldOfView",["verticalfieldofview","vfov","layer.verticalFieldOfView"])],ze.prototype,"readVFOV",null),ze=e([f("esri.layers.orientedImagery.core.ExposurePoint")],ze);const Fe=ze,Oe={};function Ve(e){return t=>{const{features:r,spatialReference:i}=t;return r.forEach((t=>{t.geometry&&(t.geometry.spatialReference=i);const r=Fe.fromJSON({...t.toJSON(),layer:e});r&&(t.attributes=r),t.layer=e,t.spatialReference=i})),t}}function De(e,t,r,i,s,o,a,n,l){let c=!1;0===t.z&&0===r.z&&0===i.z&&0===s.z&&(t.z=r.z=i.z=s.z=1,e.z=1),t.z=t.z??1,r.z=r.z??1,i.z=i.z??1,s.z=s.z??1,0===o.z&&0===a.z&&0===n.z&&0===l.z&&(c=!0,o.z=a.z=n.z=l.z=1),o.z=o.z??1,a.z=a.z??1,n.z=n.z??1,l.z=l.z??1;const p=Ae(t,r,i,s),m=Ae(o,a,n,l),u=Y(X(),p),h=X();h[0]=m[0]*u[0]+m[1]*u[4]+m[2]*u[8]+m[3]*u[12],h[1]=m[0]*u[1]+m[1]*u[5]+m[2]*u[9]+m[3]*u[13],h[2]=m[0]*u[2]+m[1]*u[6]+m[2]*u[10]+m[3]*u[14],h[3]=m[0]*u[3]+m[1]*u[7]+m[2]*u[11]+m[3]*u[15],h[4]=m[4]*u[0]+m[5]*u[4]+m[6]*u[8]+m[7]*u[12],h[5]=m[4]*u[1]+m[5]*u[5]+m[6]*u[9]+m[7]*u[13],h[6]=m[4]*u[2]+m[5]*u[6]+m[6]*u[10]+m[7]*u[14],h[7]=m[4]*u[3]+m[5]*u[7]+m[6]*u[11]+m[7]*u[15],h[8]=m[8]*u[0]+m[9]*u[4]+m[10]*u[8]+m[11]*u[12],h[9]=m[8]*u[1]+m[9]*u[5]+m[10]*u[9]+m[11]*u[13],h[10]=m[8]*u[2]+m[9]*u[6]+m[10]*u[10]+m[11]*u[14],h[11]=m[8]*u[3]+m[9]*u[7]+m[10]*u[11]+m[11]*u[15],h[12]=m[12]*u[0]+m[13]*u[4]+m[14]*u[8]+m[15]*u[12],h[13]=m[12]*u[1]+m[13]*u[5]+m[14]*u[9]+m[15]*u[13],h[14]=m[12]*u[2]+m[13]*u[6]+m[14]*u[10]+m[15]*u[14],h[15]=m[12]*u[3]+m[13]*u[7]+m[14]*u[11]+m[15]*u[15];const y=h[0]*e.x+h[1]*e.y+h[2]*e.z+h[3],g=h[4]*e.x+h[5]*e.y+h[6]*e.z+h[7],d=h[8]*e.x+h[9]*e.y+h[10]*e.z+h[11];let f=h[12]*e.x+h[13]*e.y+h[14]*e.z+h[15];return 0===f&&(f=1),{x:y/f,y:g/f,z:c?0:d/f}}function Ae(e,t,r,i){const s=function(e,t){const[r,i,s,o]=e,a=new Array(4);return a[0]=r*t[0]+i*t[1]+s*t[2]+o*t[3],a[1]=r*t[4]+i*t[5]+s*t[6]+o*t[7],a[2]=r*t[8]+i*t[9]+s*t[10]+o*t[11],a[3]=r*t[12]+i*t[13]+s*t[14]+o*t[15],a}([i.x,i.y,i.z,1],Y(new Array(16),[e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,1,1,1,1])),o=s[0],a=s[1],n=s[2],l=new Array(16);return l[0]=o*e.x,l[1]=a*t.x,l[2]=n*r.x,l[3]=0,l[4]=o*e.y,l[5]=a*t.y,l[6]=n*r.y,l[7]=0,l[8]=o*e.z,l[9]=a*t.z,l[10]=n*r.z,l[11]=0,l[12]=o,l[13]=a,l[14]=n,l[15]=1,l}function Ue(e,t,r,i){const s=q();return s[0]=e[0]+t[0]*r,s[1]=e[1]+t[1]*r,s[2]=e[2]+t[2]*(r/i),s}function Te(e,t,r){const i=q();return i[0]=e[0]*t,i[1]=e[1]*t,i[2]=e[2]*(t/r),i}function Le(e,t){const[r,i,s]=e,o=q();return o[0]=r*t[0]+i*t[3]+s*t[6],o[1]=r*t[1]+i*t[4]+s*t[7],o[2]=r*t[2]+i*t[5]+s*t[8],o}function He(e,t){const r=Math.PI/180,i=K();if("OPK"===e){const e=Number(t[0])*r,s=Number(t[1])*r,o=Number(t[2])*r;i[0]=Math.cos(s)*Math.cos(o),i[1]=Math.cos(e)*Math.sin(o)+Math.sin(e)*Math.sin(s)*Math.cos(o),i[2]=Math.sin(e)*Math.sin(o)-Math.cos(e)*Math.sin(s)*Math.cos(o),i[3]=-Math.cos(s)*Math.sin(o),i[4]=Math.cos(e)*Math.cos(o)-Math.sin(e)*Math.sin(s)*Math.sin(o),i[5]=Math.sin(e)*Math.cos(o)+Math.cos(e)*Math.sin(s)*Math.sin(o),i[6]=Math.sin(s),i[7]=-Math.sin(e)*Math.cos(s),i[8]=Math.cos(e)*Math.cos(s)}else{const e=Number(t[0])*r,s=Number(t[1])*r,o=Number(t[2])*r;i[0]=Math.cos(e)*Math.cos(o)-Math.sin(e)*Math.cos(s)*Math.sin(o),i[1]=Math.sin(e)*Math.cos(o)*-1-Math.cos(e)*Math.cos(s)*Math.sin(o),i[2]=Math.sin(o)*Math.sin(s)*-1,i[3]=Math.cos(e)*Math.sin(o)+Math.sin(e)*Math.cos(s)*Math.cos(o),i[4]=Math.sin(e)*Math.sin(o)*-1+Math.cos(e)*Math.cos(s)*Math.cos(o),i[5]=Math.cos(o)*Math.sin(s),i[6]=Math.sin(e)*Math.sin(s)*-1,i[7]=Math.cos(e)*Math.sin(s)*-1,i[8]=Math.cos(s)}return i}function Ee(e,t){const r=Math.PI/180,i=e.y*r,s=e.x*r,o=e.z||0,a=t[0]*r,n=t[1]*r,l=t[2]/Math.sqrt(1-t[3]*Math.sin(a)**2),c=s-n,p=t[2]/Math.sqrt(1-t[3]*Math.sin(i)**2),m=t[3]*(l*Math.sin(a)-p*Math.sin(i));return{x:(p+o)*Math.cos(i)*Math.sin(c),y:(p+o)*(Math.sin(i)*Math.cos(a)-Math.sin(a)*Math.cos(i)*Math.cos(c))+m*Math.cos(a),z:(p+o)*(Math.sin(i)*Math.sin(a)+Math.cos(a)*Math.cos(i)*Math.cos(c))-l+m*Math.sin(a)}}const Ne=Math.PI/180;function Ge(e,t){return Math.sign(e)!==Math.sign(t)}function qe(e,t,r){const i=e.attributes,s=i.geometry,o=s.spatialReference??e.spatialReference;s.spatialReference=o instanceof te?o:te.fromJSON(o);const a=We(s),n=i.nearDistance<0?0:i.nearDistance*a;let l=i.cameraHeight*a/Math.cos(i.cameraPitch*Ne),c=!0;i.cameraPitch+i.verticalFieldOfView/2>=90&&(l=(i.farDistance??20)*a,c=!1);const p=2*Math.tan(i.verticalFieldOfView*Ne/2)*n,m=2*Math.tan(i.horizontalFieldOfView*Ne/2)*n,u=2*Math.tan(i.verticalFieldOfView*Ne/2)*l,h=2*Math.tan(i.horizontalFieldOfView*Ne/2)*l;let y,g;r?(y=r,g=Te($(q(),y,[s.x,s.y,i.cameraHeight]),1/l,1/a)):(g=[0,0,-1],g=Le(g,t),y=Ue([s.x,s.y,i.cameraHeight],g,l,a),c&&(y[2]=0));const d=Ue([s.x,s.y,i.cameraHeight],g,n,a);let f=[0,1,0];f=Le(f,t);let j=[1,0,0];j=Le(j,t);let v=[],b=[];n?(b=[{faces:[4,0,3,4,7,3]},{faces:[5,1,2,5,6,2]},{faces:[4,0,1,4,5,1]},{faces:[6,2,3,6,7,3]}],v=v.concat(W(q(),d,$(q(),Te(f,p/2,a),Te(j,m/2,a)))),v=v.concat(W(q(),d,W(q(),Te(f,p/2,a),Te(j,m/2,a)))),v=v.concat($(q(),d,$(q(),Te(f,p/2,a),Te(j,m/2,a)))),v=v.concat($(q(),d,W(q(),Te(f,p/2,a),Te(j,m/2,a))))):(v=[s.x,s.y,i.cameraHeight],b=[{faces:[0,1,2,0,2,3,0,3,4,0,4,1]}]),v=v.concat(W(q(),y,$(q(),Te(f,u/2,a),Te(j,h/2,a)))),v=v.concat(W(q(),y,W(q(),Te(f,u/2,a),Te(j,h/2,a)))),v=v.concat($(q(),y,$(q(),Te(f,u/2,a),Te(j,h/2,a)))),v=v.concat($(q(),y,W(q(),Te(f,u/2,a),Te(j,h/2,a))));const x=new Z({position:Float64Array.from(v)});return new J({vertexAttributes:x,components:b,spatialReference:s.spatialReference})}function $e(e,t,r,i){{const s=Math.sqrt((e[2]-t)**2+(Math.sqrt((e[0]-r.x)**2+(e[1]-r.y)**2)/i)**2)*i,o=Te($(q(),[e[0],e[1],e[2]],[r.x,r.y,t]),1/s,1/i),a=t/(t-e[2]),n={x:(1-a)*r.x+a*e[0],y:(1-a)*r.y+a*e[1],z:(1-a)*t+a*e[2]},l=Math.sqrt((n.z-t)**2+(Math.sqrt((n.x-r.x)**2+(n.y-r.y)**2)/i)**2)*i,c=Te($(q(),[n.x,n.y,n.z],[r.x,r.y,t]),1/l,1/i);return Ge(o[0],c[0])&&Ge(o[1],c[1])&&Ge(o[2],c[2])||e[2]>=0?[e[0],e[1],0]:[n.x,n.y,n.z]}}function We(e){return e&&Q(e?.spatialReference)?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*e.y/G.radius))):1}const Be=Math.PI/180;async function Je(e,t,r=!1){if(!e)return[];e=e.map((e=>"esri.geometry.Point"===e.declaredClass?e:H.fromJSON(e)));const{feature:i}=t,{attributes:s}=i;if(isNaN(parseFloat(s.elevation))){const e=await Ze([i.geometry],t);i.attributes.elevation=e[0].z}return Ze(e,t,r).then((e=>function(e,t){const{attributes:r}=t.feature;return r.isSpherical||360===r.horizontalFieldOfView?{}:r.cameraOrientation?.isAdvanced?function(e,t){const{feature:r}=t,{attributes:i}=r,s=i.cameraOrientation;if(!s)throw new D("groundToImageUtils:missing-camera-orientation-parameters","CameraOrientation Parameters are required to perform advanced transformations");let o=new H(i.location);o.spatialReference.isWGS84&&4!==i.cameraOrientation?.type&&(o=v(o));const a=o.spatialReference.isWebMercator?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*o.y/6378137))):1;let n;if("esri.layers.orientedImagery.core.CameraOrientationOPK"===s.declaredClass){const{omega:e,phi:t,kappa:r}=s;n=He("OPK",[e,t,r])}else{const{cameraHeading:e,cameraPitch:t,cameraRoll:r}=i;n=He("HPR",[e,t,r])}const{principalOffsetPoint:l,focalLength:c,radialDistortionCoefficients:p,affineTransformations:m,tangentialDistortionCoefficients:u}=s;return Promise.all(e.map((e=>{let t;return e.spatialReference.equals(o.spatialReference)?(t=new H(e),r(t)):(t=se(e,o.spatialReference),t?r(t):null);function r(e){if(e.spatialReference.isWGS84)if(4===i.cameraOrientation?.type){const t=i.cameraOrientation;e=new H(Ee(e,[t.latitude,t.longitude,t.ellipsoidRadius,t.squaredEccentricity]))}else e=new H(v(e));const t=(e.z??0)-(o.z??0),r=(e.x-o.x)/a,s=(e.y-o.y)/a,h=(n[0]*r+n[1]*s+n[2]*t)/(n[6]*r+n[7]*s+n[8]*t),y=(n[3]*r+n[4]*s+n[5]*t)/(n[6]*r+n[7]*s+n[8]*t),g=h**2+y**2;let d=0,f=0,j=0,b=0,x=0,M=0,w=0;p&&(d=p[0]??0,f=p[1]??0,j=p[2]??0),u&&(b=u[0],x=u[1]),l&&(M=l[0]??0,w=l[1]??0);const P=1+(d||0)*g+(f||0)*g*g+(j||0)*g*g*g;let _=h*P+(b||0)*(g+2*h**2)+2*(x||0)*h*y,I=y*P+(x||0)*(g+2*y**2)+2*(b||0)*h*y;return _=-(c??0)*_+M,I=-(c??0)*I+w,{x:Number(m[0])+Number(m[1])*_+Number(m[2])*I,y:Number(m[3])+Number(m[4])*_+Number(m[5])*I}}})))}(e,t):Promise.resolve(function(e,t){const{feature:r,imageProperties:i}=t,{width:s,height:o}=i,{attributes:a}=r,n=He("HPR",[a.cameraHeading,a.cameraPitch,a.cameraRoll]),l=Math.sin(a.imageRotation??0*Be),c=Math.cos(a.imageRotation??0*Be),p=s??1,m=o??1,u=[Math.abs(c*p+l*m),Math.abs(c*m-l*p)],h={horizontal:1/(2*Math.tan(a.horizontalFieldOfView*Be/2)),vertical:1/(2*Math.tan(a.verticalFieldOfView*Be/2))},y=[-h.horizontal,0,.5,0,h.vertical,.5,0,0,1];let g=new H(a.geometry);g.spatialReference.isWGS84&&4!==a.cameraOrientation?.type&&(g=v(g));const d=g.spatialReference.isWebMercator?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*g.y/6378137))):1,f=ie(new Array(9),n,y);return e.map((e=>{let t=new H(e);if(t.spatialReference.isWGS84)if(4===a.cameraOrientation?.type){const e=a.cameraOrientation;t=new H(Ee(t,[e.latitude,e.longitude,e.ellipsoidRadius,e.squaredEccentricity]))}else t=new H(v(t));const r=(t.z??0)-(g.z??0),i=(t.x-g.x)/d,s=(t.y-g.y)/d,o=(f[0]*i+f[1]*s+f[2]*r)/(f[6]*i+f[7]*s+f[8]*r),n=(f[3]*i+f[4]*s+f[5]*r)/(f[6]*i+f[7]*s+f[8]*r),h=o*u[0],y=n*u[1];return{x:c*(h-u[0]/2)+l*(y-u[1]/2)+p/2,y:-l*(h-u[0]/2)+c*(y-u[1]/2)+m/2}}))}(e,t))}(e,t)))}async function Ze(e,t,r=!1){if(r)return e;const{feature:{attributes:{cameraOrientation:i,elevationSource:s,cameraHeight:o,location:a}}}=t;return s&&(F(s)||s.url?.length)?async function(e,t){const{feature:r,options:i,currentCoveragePolygon:s}=t,o=r.attributes.elevationSource;if(!o)return e;if(F(o)){const{constantElevation:t}=o;return"number"!=typeof t?e:Ke(e,t)}const{url:a}=o;if(!a)return e;const{elevationSample:n}=r;if(!n){const t=(c=s,"esri.Graphic"===c?.declaredClass?s.geometry?.extent:s.extent);if(!t)return e;const n=t.clone();n.xmin/=2,n.xmax*=2,n.ymin/=2,n.ymax*=2;const{error:p,isSupported:m}=await O(a);if(!m){l.getLogger(o).warn(p);const{location:t,cameraHeight:i,cameraOrientation:s}=r.attributes;return Ke(e,s&&"number"==typeof t.z?t.z-i:0)}const u=new oe(a);let h=e;try{await u.load(),r.elevationSample=await u.createElevationSampler(n,i),h=e.map(Qe(r.elevationSample))}catch(e){re(e)||l.getLogger("esri.layers.orientedImagery.transformations.groundToImageUtils").warn(`#updateElevation() failed to update elevation using the provided elevation source URL: ${a}. Please provide a valid elevation source url.`,e)}finally{u.destroy()}return h}var c;return e.map(Qe(n))}(e,t):Ke(e,i&&"number"==typeof a.z?a.z-o:0)}function Qe(e){return t=>{t.z=1;const r=e.queryElevation(se(t,e.spatialReference));return r?.z&&(t.z=r.z),t}}function Ke(e,t){return e.map((e=>(e.z=t,e)))}const Xe=Math.PI/180;function Ye(e,t){if(!e)return Promise.resolve([]);const r=t.feature;let i=r.attributes;return i instanceof Fe||(i=Fe.fromJSON(r),i&&(r.attributes=i)),function(e,t){const{attributes:r}=t.feature;return r.isSpherical||360===r.horizontalFieldOfView?[]:async function(e,t){const{feature:r,imageProperties:i}=t,{attributes:s}=r;let o=new H(s.location);if(4===s.cameraOrientation?.type){const e=s.cameraOrientation;o=new H(function(e,t){const r=Math.PI/180,i=Number(e.x),s=Number(e.y),o=Number(e.z),a=t[0]*r,n=t[1]*r,l=t[2]/Math.sqrt(1-t[3]*Math.sin(a)**2),c=i/l,p=s/l,m=o/l,u=Math.cos(a)-Math.sin(a)*p+Math.cos(a)*m,h=Math.sin(a)+Math.cos(a)*p+Math.sin(a)*m,y=Math.sqrt(u**2+c**2),g=t[3]*l*Math.sin(a),d=a,f=Math.atan(h/y-(g-t[3]*(t[2]/Math.sqrt(1-t[3]*Math.sin(d)**2))*Math.sin(d))/(l*y)),j=Math.atan(h/y-(g-t[3]*(t[2]/Math.sqrt(1-t[3]*Math.sin(f)**2))*Math.sin(f))/(l*y)),v=Math.atan(h/y-(g-t[3]*(t[2]/Math.sqrt(1-t[3]*Math.sin(j)**2))*Math.sin(j))/(l*y)),b=Math.atan(h/y-(g-t[3]*(t[2]/Math.sqrt(1-t[3]*Math.sin(v)**2))*Math.sin(v))/(l*y)),x=Math.atan(i/(l*u))+n;return{x:x/r,y:b/r,z:i/(Math.cos(b)*Math.sin(x-n))-t[2]/Math.sqrt(1-t[3]*Math.sin(b)**2),spatialReference:{wkid:4326}}}(o,[e.latitude,e.longitude,e.ellipsoidRadius,e.squaredEccentricity]))}let a=!1;o.spatialReference.isWGS84&&(a=!0,o=v(o));const n=o.spatialReference.isWebMercator?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*o.y/6378137))):1,l=function(e,t,r){const{feature:i}=e,{attributes:s}=i,o=2*Math.tan(s.verticalFieldOfView*Xe/2)*s.farDistance*r,a=2*Math.tan(s.horizontalFieldOfView*Xe/2)*s.farDistance*r,n=He("HPR",[s.cameraHeading,s.cameraPitch,s.cameraRoll??0]),l=Le([0,0,-1],n),c=Ue([t.x,t.y,t.z],l,s.farDistance*r,r),p=Le([0,1,0],n),m=Le([1,0,0],n),u=Te(p,o/2,r),h=Te(m,a/2,r),y=$(q(),u,h),g=W(q(),u,h);return[W(q(),c,y),W(q(),c,g),$(q(),c,y),$(q(),c,g)].map((e=>{const[r,i,s]=e;return new H({x:r,y:i,z:s,spatialReference:t.spatialReference})}))}(t,o,n),c=4===s.cameraOrientation?.type?l.map((e=>b(new H(e)))):l,p=await Je(c,t,!0),m=await Promise.all(p);m.forEach((e=>{e.z=1,e.x=e.x*i.pixelSize.x+i.extent.xmin,e.y=i.extent.ymax-e.y*i.pixelSize.y}));const u=function(e,t,r){const i=Math.sin(r*Math.PI/180),s=Math.cos(r*Math.PI/180),o=[[e,0],[e,t],[0,t]];o.forEach(((e,t)=>{o[t]=[s*e[0]-i*e[1],i*e[0]+s*e[1]]}));const a=Math.min(0,o[0][0],o[1][0],o[2][0]),n=Math.max(0,o[0][0],o[1][0],o[2][0]),l=Math.min(0,o[0][1],o[1][1],o[2][1]),c=Math.max(0,o[0][1],o[1][1],o[2][1]);return{hfov:Math.abs(n-a),vfov:Math.abs(c-l)}}(s.horizontalFieldOfView,s.verticalFieldOfView,s.cameraRoll??0).vfov;return Promise.all(e.map((async e=>{e.z=1;let r,l=function(e,t,r){const[i,s,o,a]=t,[n,l,c,p]=r;return De(e,i,s,o,a,n,l,c,p)}(e,m,c);if(r=4===s.cameraOrientation?.type?(await Je([b(new H({...l,spatialReference:o.spatialReference}))],t,!0))[0]:(await Je([new H({...l,spatialReference:o.spatialReference})],t,!0))[0],!r)return null;r.x=r.x*i.pixelSize.x+i.extent.xmin,r.y=i.extent.ymax-r.y*i.pixelSize.y;let p,h=Math.abs(e.x-r.x)+Math.abs(e.y-r.y);if(h>1){const i=await async function(e,t,r,i,s,o,a){const{feature:{attributes:n},imageProperties:l}=a;let c=Math.abs(e.x-t.x)+Math.abs(e.y-t.y);if(c>1)for(let t=0;t<9;t++)if(c>1){let p,m={x:e.x-c,y:e.y-c,z:1},u={x:e.x+c,y:e.y-c,z:1},h={x:e.x+c,y:e.y+c,z:1},y={x:e.x-c,y:e.y+c,z:1};m=De(m,r[0],r[1],r[2],r[3],{x:i[0].x,y:i[0].y,z:i[0].z},{x:i[1].x,y:i[1].y,z:i[1].z},{x:i[2].x,y:i[2].y,z:i[2].z},{x:i[3].x,y:i[3].y,z:i[3].z}),u=De(u,r[0],r[1],r[2],r[3],{x:i[0].x,y:i[0].y,z:i[0].z},{x:i[1].x,y:i[1].y,z:i[1].z},{x:i[2].x,y:i[2].y,z:i[2].z},{x:i[3].x,y:i[3].y,z:i[3].z}),h=De(h,r[0],r[1],r[2],r[3],{x:i[0].x,y:i[0].y,z:i[0].z},{x:i[1].x,y:i[1].y,z:i[1].z},{x:i[2].x,y:i[2].y,z:i[2].z},{x:i[3].x,y:i[3].y,z:i[3].z}),y=De(y,r[0],r[1],r[2],r[3],{x:i[0].x,y:i[0].y,z:i[0].z},{x:i[1].x,y:i[1].y,z:i[1].z},{x:i[2].x,y:i[2].y,z:i[2].z},{x:i[3].x,y:i[3].y,z:i[3].z}),m.spatialReference=s.spatialReference,u.spatialReference=s.spatialReference,h.spatialReference=s.spatialReference,y.spatialReference=s.spatialReference,p=4===n.cameraOrientation?.type?await Je([b(new H(m)),b(new H(u)),b(new H(h)),b(new H(y))],a,!0):await Je([new H(m),new H(u),new H(h),new H(y)],a,!0);const g=await Promise.all(p);g.forEach((e=>{e.z=0,e.x=e.x*l.pixelSize.x+l.extent.xmin,e.y=l.extent.ymax-e.y*l.pixelSize.y}));const d=De(e,g[0],g[1],g[2],g[3],m,u,h,y);let f;if(f=4===n.cameraOrientation?.type?(await Je([b(new H({x:d.x,y:d.y,z:d.z,spatialReference:s.spatialReference}))],a,!0))[0]:(await Je([new H({x:d.x,y:d.y,z:d.z,spatialReference:s.spatialReference})],a,!0))[0],c=Math.abs(e.x-f.x)+Math.abs(e.y-f.y),c<=1||8===t){o=d;break}}return{error:c,point:o}}(e,r,m,c,o,l,t);l=i.point,h=i.error}if(s.elevationSource){let r=await function(e){const{feature:t}=e,r=function(e){if(!e.currentCoveragePolygon.geometry)return null;const{xmin:t,xmax:r,ymin:i,ymax:s,spatialReference:o}=e.currentCoveragePolygon.geometry.extent.toJSON();return[new H({x:t,y:s,spatialReference:o}),new H({x:r,y:s,spatialReference:o}),new H({x:r,y:i,spatialReference:o}),new H({x:t,y:i,spatialReference:o})]}(e);if(!r)return Promise.resolve(null);const i=t.attributes.location.spatialReference.isWGS84?new te({wkid:102100}):t.attributes.location.spatialReference;return Ze(r,e,!1).then((e=>{const t=e.map((e=>se(e,i)));return new ee({hasZ:!0,rings:[t.map((e=>[e.x,e.y,e.z]))],spatialReference:i})}))}(t);if(r?.extent){let c=tt(r,o,l);if(!c)return null;const m={x:c.x,y:c.y,z:c.z,hasZ:!0,spatialReference:o.spatialReference},h=new H(m);if(c){const m=Ze([se(h,t.currentCoveragePolygon.geometry?.spatialReference)],t,!1);let y;y=m instanceof Promise?await m:m,h.z=c.z=y[0].z;const g=await Je([4===s.cameraOrientation?.type?b(h):h],t);if(!g[0])return null;g[0].x=g[0].x*i.pixelSize.x+i.extent.xmin,g[0].y=i.extent.ymax-g[0].y*i.pixelSize.y;let d=Math.abs(e.x-g[0].x)+Math.abs(e.y-g[0].y);if(p=c.z,d>1){let m=0;const h=async y=>{if(d>1){const g=y.width/10,f=y.height/10;if(!y||g<1||f<1)return l=et(l,o,n,p,s.cameraPitch,u,a),l;const j=[{x:c.x-g,y:c.y-f,spatialReference:o.spatialReference},{x:c.x+g,y:c.y-f,spatialReference:o.spatialReference},{x:c.x+g,y:c.y+f,spatialReference:o.spatialReference},{x:c.x-g,y:c.y+f,spatialReference:o.spatialReference}].map((e=>new H(e))),v=await Ze(j,t,!1);if(r=new ee({rings:[[[v[0].x,v[0].y,v[0].z],[v[1].x,v[1].y,v[1].z],[v[2].x,v[2].y,v[2].z],[v[3].x,v[3].y,v[3].z],[v[0].x,v[0].y,v[0].z]]],spatialReference:o.spatialReference}),c=tt(r,o,l),c){const y=se(new H({x:c.x,y:c.y,z:c.z,spatialReference:o.spatialReference}),t.currentCoveragePolygon.geometry?.spatialReference),g=await Je([4===s.cameraOrientation?.type?b(y):y],t);if(g[0])return g[0].x=g[0].x*i.pixelSize.x+i.extent.xmin,g[0].y=i.extent.ymax-g[0].y*i.pixelSize.y,d=Math.abs(e.x-g[0].x)+Math.abs(e.y-g[0].y),p=c.z,d<=1||8===m?et(l,o,n,p,s.cameraPitch,u,a):(m+=1,h(r.extent))}return et(l,o,n,o.z-s.cameraHeight,s.cameraPitch,u,a)}return et(l,o,n,o.z-s.cameraHeight,s.cameraPitch,u,a)};return h(r.extent)}return et(l,o,n,o.z-s.cameraHeight,s.cameraPitch,u,a)}return et(l,o,n,o.z-s.cameraHeight,s.cameraPitch,u,a)}}return et(l,o,n,o.z-s.cameraHeight,s.cameraPitch,u,a)})))}(e,t)}(e,t)}function et(e,t,r,i,s,o,a){const n=Math.sqrt((e.z-t.z)**2+(Math.sqrt((e.x-t.x)**2+(e.y-t.y)**2)/r)**2)*r,l=Te($(q(),[e.x,e.y,e.z],[t.x,t.y,t.z]),1/n,1/r);if(e.z<i||s+o/2<90){const s=Math.abs((t.z-i)/-l[2])*r,o=Ue([t.x,t.y,t.z],l,s,r);e={x:o[0],y:o[1],z:o[2]}}else e.z=i;return e.spatialReference=t.spatialReference,e=new H(e),a&&(e=b(e)),e}function tt(e,t,r){const i=e.rings[0][0][0],s=e.rings[0][0][1],o=e.rings[0][0][2],a=e.rings[0][1][0],n=e.rings[0][1][1],l=e.rings[0][1][2],c=e.rings[0][1][0],p=e.rings[0][1][1],m=e.rings[0][1][2],u=e.rings[0][2][0],h=e.rings[0][2][1],y=e.rings[0][2][2],g=(y-m)*(n-s)-(h-p)*(l-o),d=-((y-m)*(a-i)-(l-o)*(u-c)),f=(h-p)*(a-i)-(n-s)*(u-c),j=-(g*i+d*s+f*o),v=function(e,t,r,i,s,o){const a=r*(t.x-e.x)+i*(t.y-e.y)+s*(t.z-e.z);if(0===a)return null;const n=-(r*e.x+i*e.y+s*e.z+o)/a;return{x:e.x+n*(t.x-e.x),y:e.y+n*(t.y-e.y),z:e.z+n*(t.z-e.z)}}(t.toJSON(),r,g,d,f,j);return v}const rt={type:"simple-marker",size:15,style:"circle",color:[255,102,102,.5],outline:null},it={type:"simple-marker",size:10,style:"circle",color:[0,128,192,.5],outline:null},st={type:"simple-fill",style:"solid",color:[0,128,192,.5],outline:null},ot={type:"simple-fill",style:"solid",color:[255,102,102,.5],outline:null},at={type:"simple-marker",size:10,style:"diamond",color:[255,102,102],outline:null},nt={type:"simple-marker",size:8,style:"x",color:[255,0,0],outline:{color:[255,0,0],width:2,style:"solid"}};function lt(e){return"esri.Graphic"===e?.declaredClass}function ct(e){return/.*.(tif|mrf)$/i.test(e??"")}const pt="view-click",mt="image-click",ut=e=>"FA"===e;let ht=class extends o.EventedAccessor{constructor(e){super(e),this.layer=null,this.shouldShowSelectedImage=!1,this.coverageFrustums=new i,this.coveragePolygons=new i,this.currentCoverageVisible=!0,this.disabled=!1,this.displayMessage=null,this.pointSources=new i,this.previousFeatureAngle=0,this.selectedFeature=null,this.selectedFeatureAngle=0,this.selectedPoint=null,this.features=new i,this.isAdditionalCoverageVisible=!1,this.isAdditionalPointSourcesVisible=!1,this.localPort=null,this.mapImageConversionToolState=!1,this.navigatorSelectedFeature=null,this._additionalCoveragePolygons=new i,this._additionalFeatureGraphics=new i,this._currentCoveragePolygon=null,this._currentImage=null,this._fetchFeaturesController=null,this._imageViewer=null,this._initialCurrentCoveragePolygon=null,this._initialCurrentCoverageUpdate=!0,this._overlays=new x({listMode:"hide",internal:!0}),this._plotPolygons=!1,this._initialPreviousCoveragePolygon=null,this._referencePointOnGround=null,this._referencePointOnImage=null,this._sectorData=null,this._crossSymbol=null,this._panConstraint=null,this._scaleConstraint=null,this._suitabilities=null,this._transformController=new AbortController,this._updateCoverageController=null,this._imageClickHandler=async e=>{if(0===e.button&&this._currentImage&&this._currentImage?.fullExtent){const{xmin:t,xmax:r,ymin:i,ymax:s}=this._currentImage.fullExtent,{x:o,y:a}=e.mapPoint;if(t>o||r<o||s<a||i>a)return;this.plotReferencePointOnImage(e.mapPoint);const n=this.getSelectedFeature();if(n){const t=(await Ye([e.mapPoint.toJSON()],{feature:n,currentCoveragePolygon:this.getSelectedFeaturePolygon(),imageProperties:this._currentImage.rasterInfo,options:{signal:this._transformController?.signal}}))[0];t&&this.plotReferencePointOnGround(t)}}},this._viewClickHandler=e=>{"mouse"===e.pointerType&&0!==e.button||(e.stopPropagation(),e.preventDefault(),this.loadBestImage(e.mapPoint))},this._mapImageConversionToolViewClickHandler=e=>{e.stopPropagation(),e.preventDefault(),this.plotMapPoint(e.mapPoint)},this.handleSectorClick=this.handleSectorClick.bind(this),this.loadViewer=this.loadViewer.bind(this),this.searchBestImage=this.searchBestImage.bind(this),this.transformAndPlotReferencePointOnImage=this.transformAndPlotReferencePointOnImage.bind(this)}initialize(){this.addHandles([m((()=>this.view?.map),((e,t)=>{t?.layers.remove(this._overlays),e?.layers.add(this._overlays)}),h),m((()=>this.view?.map?.allLayers?.length),(e=>{e&&this.view?.map?.layers.reorder(this._overlays,e-1)}),h),m((()=>this.layer?.visible??!1),(e=>{this._overlays.visible=e}),h),m((()=>[this.state,this.mapImageConversionToolState]),(()=>{if(this.removeHandles(pt),"disabled"===this.state||null==this.view)return;const e=this.mapImageConversionToolState&&"image-loaded"===this.state?this._mapImageConversionToolViewClickHandler:this._viewClickHandler;this.addHandles(this.view.on("click",e,me.WIDGET),pt)}),h),m((()=>this.mapImageConversionToolState),(()=>{this.removeHandles(mt),this.imageLoaded&&this.mapImageConversionToolState&&this.addHandles(this._imageViewer.on("click",this._imageClickHandler),mt)}))])}destroy(){this._cancelCurrentCoverageUpdate(),this._cancelFetchingFeatures(),this.coverageFrustums.destroy(),this.coveragePolygons.destroy(),this.pointSources.destroy(),this._additionalCoveragePolygons.destroy(),this._additionalFeatureGraphics.destroy(),this._currentImage=p(this._currentImage),this._imageViewer=p(this._imageViewer),this._initialCurrentCoveragePolygon=p(this._initialCurrentCoveragePolygon),this._currentCoveragePolygon=p(this._currentCoveragePolygon),this._crossSymbol=p(this._crossSymbol),this._referencePointOnGround=p(this._referencePointOnGround),this._referencePointOnImage=p(this._referencePointOnImage),this._overlays&&this.view?.map.remove(this._overlays),this._overlays.destroy()}get activeLayer(){return s(l.getLogger(this),"activeLayer",{replacement:"layer"}),this.layer}set activeLayer(e){s(l.getLogger(this),"activeLayer",{replacement:"layer"}),this.layer=e}get brightness(){return this._get("brightness")??0}set brightness(e){this._set("brightness",c(e,-10,10))}get contrast(){return this._get("contrast")??0}set contrast(e){this._set("contrast",c(e,-10,10))}get currentImageView(){return this._imageViewer?.allLayerViews.find((e=>e.layer===this._currentImage))}get featureCount(){return this.features?.length??0}get imageGalleryEnabled(){return ct(this.selectedFeature?.attributes.imagePath.trim())}get imageLoaded(){return this._currentImage?.loaded??!1}get updating(){return"loading"===this._currentImage?.loadStatus||!!this._fetchFeaturesController}get referencePoint(){return this._referencePointOnGround?.geometry}get sharpness(){return this._get("sharpness")??0}set sharpness(e){this._set("sharpness",c(e,0,1))}get sectorData(){const{_sectorData:e}=this;if(e)return _e.map((t=>e[t]))}get state(){const{layer:e,view:t,_currentImage:r}=this;return this.disabled||!e||t&&!t.ready?"disabled":r?.loadStatus?`image-${r.loadStatus}`:"ready"}get thumbnails(){const{features:e}=this;return e?new i(e.map((({attributes:{imagePath:e,objectId:t}})=>{const r=e.trim();return ct(r)?{url:r,objectId:t}:null})).filter(r)):null}set view(e){this._set("view",e)}getCurrentCoveragePolygon(){return this._currentCoveragePolygon}getSelectedFeature(){return this.selectedFeature}getSelectedFeaturePolygon(){return this._initialCurrentCoveragePolygon}handleSectorClick(e){if(isNaN(e))return;const t=this._sectorData?.[_e[e]];t?.length&&this._updateSelectedFeature(t.at(0))}handleFeatureClick(e){const{sector:t,featureIndexInSector:r}=e;if(isNaN(r))return;const i=this._sectorData?.[t];i?.length&&this._updateSelectedFeature(i.at(r))}async loadBestImage(e){this.displayMessage=null,this.selectedPoint=e.spatialReference.isGeographic?v(e):e.clone(),this.features.removeAll(),this._additionalCoveragePolygons.removeAll(),this._additionalFeatureGraphics.removeAll(),this._currentCoveragePolygon=p(this._currentCoveragePolygon),this._overlays?.removeAll(),this.selectedFeature=null,await this._fetchFeaturesWithController(e)}loadViewer(e){const t=new Map;this._imageViewer=new ce({container:e,map:t,spatialReferance:{wkid:0},constraints:{snapToZoom:!1,rotationEnabled:!1},ui:{components:["zoom"]}}),u((()=>!0===this._imageViewer?.stationary)).then((()=>{this.setMessage("onLoadMessage","info")})),this._imageViewer.addHandles([m((()=>[this._imageViewer?.viewpoint,this._initialCurrentCoveragePolygon]),((e,t)=>{e?.[1]!==t?.[1]&&(this._initialPreviousCoveragePolygon=this._plotPolygons?null:t?.[1]),this._imageViewer?.viewpoint&&this._initialCurrentCoveragePolygon&&(this._cancelCurrentCoverageUpdate(),this.updateCoverage())})),m((()=>this.selectedFeatureAngle),((e,t)=>{this.previousFeatureAngle=t??0}),h),m((()=>this.selectedFeature),(async()=>{const{selectedFeature:e,selectedPoint:t}=this;if(!e&&this._currentImage&&(this._imageViewer?.map.layers.remove(this._currentImage),this._currentImage=p(this._currentImage)),e&&t){this._initialCurrentCoverageUpdate=!0,this._updatePointsAndPolygons(),this._fetchFeaturesController??=new AbortController;const{signal:t}=this._fetchFeaturesController;await this.loadImage(e,{signal:t}).finally((()=>{this._fetchFeaturesController=null}))}}))])}async plotMapPoint(e){return this.plotReferencePoint(e),this.transformAndPlotReferencePointOnImage({feature:this.selectedFeature,selectedLocation:e,options:{signal:this._transformController?.signal}})}resetImage(){this._currentImage=p(this._currentImage),this.setMessage("onLoadMessage","info"),this._cancelCurrentCoverageUpdate(),this._cancelFetchingFeatures()}async searchBestImage(e,t){try{const r=await async function(e,t){const{point:r,queryParams:i,queryFeatures:s}=e,o={};let a=e.layerInstanceOrURL;const n=r.spatialReference.isGeographic?v(r.clone()):r.clone();if(o.outSpatialReference=n.spatialReference,i&&(o.maxRecordCountFactor=i.maxRecordCountFactor??5,o.outFields=i.outFields??["*"],o.where=i.where??"1=1",o.returnGeometry=i.returnGeometry??!0,o.outSpatialReference=i.outSpatialReference),"string"==typeof a&&(Oe.layer&&Oe.layer.url===a?a=Oe.layer:(Oe.layer?.destroy(),a=Oe.layer=new P({url:a}),await a.load())),a){if(s&&"esri.layers.OrientedImageryLayer"===a?.declaredClass)return Ve(a)(s);const e=a,r=function(e,t){const r=e.x-t,i=e.x+t,s=e.y-t,o=e.y+t;return new j({xmin:r,xmax:i,ymin:s,ymax:o,spatialReference:e.spatialReference})}(n,i?.maximumDistance??e.maximumDistance??1e3),l=new N({geometry:r,...o});return e.queryFeatures(l,t).then(Ve(e))}return null}(e,t);r&&await this._processFeatureResponse(r,{signal:t?.signal})}catch(e){const t=l.getLogger(this);this.setMessage("imageLoadError","error"),t.error("error occurred while finding best image",e)}}setAdditionalCameraLocationsVisibility(e){this._additionalFeatureGraphics.forEach((t=>{t.visible=e}))}setAdditionalCoverageVisibility(e){this._additionalCoveragePolygons.forEach((t=>{t.visible=e}))}setCurrentCoverageVisibility(e){this._currentCoveragePolygon&&(this._currentCoveragePolygon.visible=e),this._selectedFeatureGraphic&&(this._selectedFeatureGraphic.visible=e)}setMapImageConversionToolState(e){this.mapImageConversionToolState=e}_cancelFetchingFeatures(e){const t=this._fetchFeaturesController;t&&t.abort(e),this._fetchFeaturesController=null}_cancelCurrentCoverageUpdate(){const e=this._updateCoverageController;e&&e.abort("Multiple Coverage Updates: Aborting Current Coverage Update to sync image and coverage"),this._updateCoverageController=null}async _fetchFeatures(e,t){if(!this.view)return;const r=this.layer;if(r){const i={include:r},s=this.view.toScreen(e);if(!s)return;const o=await this.view.hitTest(s,i);this._processHitTestResults(r,o,t)}}async _fetchFeaturesWithController(e){this._cancelFetchingFeatures();const t=new AbortController,{signal:r}=t;this._fetchFeaturesController=t;try{await this._fetchFeatures(e,{signal:r}).finally((()=>{this._fetchFeaturesController=null}))}catch(e){const t=l.getLogger(this);this.setMessage("imageLoadError","error"),t.error("error occurred while fetching features",e)}}_groupFeaturesBySectors(){const{_suitabilities:e,features:t}=this;if(!e||!t)return void(this._sectorData=null);this._sectorData={};for(const e of _e)this._sectorData[e]=new i;const r=e.map(((e,t)=>({...e,featureIndex:t})));r.sort(((e,t)=>e.trueSuitability-t.trueSuitability));const s=r.map((({distance:e})=>e)),o=Math.max(...s);r.forEach((e=>{const{distance:r,angle:i,featureIndex:s}=e;let a="FAR";const n=r/o*we[2];n<=we[0]?a="NEAR":n<=we[1]&&(a="");let l="NORTH";if(Math.abs(i)>=135?l="WEST":i<-45&&i>-135?l="SOUTH":i<=45&&(l="EAST"),!this._sectorData)return;const c=we[3]+n*Math.sin(i*Math.PI/180),p=we[3]+n*Math.cos(i*Math.PI/180);let m;const u=t.at(s),h=u===this.selectedFeature,y=this.selectedFeature?.attributes.cameraPitch&&this.selectedFeature?.attributes.cameraPitch<5;if(h&&y)m=-90;else{const e=c-we[3],t=p-we[3],r=t/Math.sqrt(e**2+t**2);let i=180*Math.acos(r)/Math.PI;(e<0&&t<0||e<0&&t>0)&&(i*=-1),m=i}const g=""===a?l:`${a}_${l}`;h&&(m===this.selectedFeatureAngle?this.previousFeatureAngle=m:this.selectedFeatureAngle=m,this.navigatorSelectedFeature=y?null:{x:c,y:p,direction:l});const d=this._sectorData[g];d.add({angle:i,featureIndex:s,x:c,y:p,objectID:u.attributes.objectId,sector:g,featureIndexInSector:d.length})}))}async _processFeatureResponse(e,t){const{selectedPoint:r}=this;if(!r)return;if(!e)return;const i=e;if(!i)return;const{features:s}=i;if(!s.length)return this.setMessage("noImageError","error"),void(this.selectedFeature=null);const o=new Array;this.coveragePolygons.removeAll(),this.coverageFrustums.removeAll(),this.pointSources.removeAll(),s.forEach((e=>{let t;const{polygon:i,frustum:s}=function(e){const{attributes:t}=e,{horizontalFieldOfView:r,geometry:i,verticalFieldOfView:s}=t;let o,a=1,n=null;if(i&&Q(i?.spatialReference)&&(a=1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*i.y/G.radius)))),t.isSpherical){if(o=new B({center:i,radius:t.farDistance*a}),t.nearDistance){const e=new B({center:i,radius:t.nearDistance*a});o.addRing(e.rings[0])}const e=o.center;e&&(e.z=t.cameraHeight,n=J.createSphere(e,{size:2*t.farDistance}),n.centerAt(e))}else{let l=t.cameraPitch,c=t.cameraRoll,p=150;const m=[];r>150&&(l=90,c=0,p=5);const u=Math.ceil(r/p);if(u%2==0)for(let e=0;e<u/2;e++)m.push(t.cameraHeading-r/u*(e+.5),t.cameraHeading+r/u*(e+.5));else{m.push(t.cameraHeading);for(let e=1;e<u/2;e++)m.push(t.cameraHeading-r/u*e,t.cameraHeading+r/u*e)}m.sort();let h=t.farDistance?t.farDistance*a:t.cameraHeight*a/Math.cos(l*Ne);t.cameraPitch+s/2>=90&&(h=(t.farDistance||20)*a),o=new ee({spatialReference:i?.spatialReference});for(const p of m){const m=He("HPR",[p,l,c]);n=qe(e,m);const y=Le([0,0,-1],m),{x:g,y:d}=i,f=Ue([g,d,t.cameraHeight],y,h,a),j=2*Math.tan(s*Ne/2)*h,v=2*Math.tan(r/u*Ne/2)*h,b=Le([0,1,0],m),x=Le([1,0,0],m),M=Te(b,j/2,a),w=Te(x,v/2,a),P=$(q(),M,w),_=W(q(),M,w),I=[W(q(),f,P),W(q(),f,_),$(q(),f,P),$(q(),f,_)].map((e=>$e(e,t.cameraHeight,i,a)));I.push(I[0]),o.addRing(I)}}return{polygon:o,frustum:n}}(e);if(t=i,e.attributes.isInspection&&(t=function(e){const{spatialReference:t,x:r,y:i}=e.geometry,{cameraHeading:s,cameraPitch:o,farDistance:a,nearDistance:n}=e,l=We(e.geometry),c=new ee({spatialReference:t}),p=Math.abs(1.44*a*l);let m=Math.abs(1.44*n*l);(o<20||null==s)&&(m=p);const u=[];return u[0]={x:r+p*Math.sin((s-45)*Ne),y:i+p*Math.cos((s-45)*Ne)},u[1]={x:r+p*Math.sin((s+45)*Ne),y:i+p*Math.cos((s+45)*Ne)},u[2]={x:r+m*Math.sin((s+135)*Ne),y:i+m*Math.cos((s+135)*Ne)},u[3]={x:r+m*Math.sin((s+225)*Ne),y:i+m*Math.cos((s+225)*Ne)},c.addRing([[u[0].x,u[0].y,0],[u[1].x,u[1].y,0],[u[2].x,u[2].y,0],[u[3].x,u[3].y,0],[u[0].x,u[0].y,0]]),c}(e.attributes)),e.layer.coveragePercent&&(t=function(e,t){const r=1+t/100;if("esri.geometry.Circle"===e.declaredClass){const{radius:t,center:i}=e,s=new B({radius:t*r,center:i});return e.rings.length>1&&s.addRing(e.rings[1]),s}if("esri.geometry.Polygon"===e.declaredClass){const t=new ee({spatialReference:e.spatialReference}),i=e.centroid;if(i){const s=[];for(let t=0;t<e.rings[0].length;t++){const o=Math.sqrt((i.x-e.rings[0][t][0])**2+(i.y-e.rings[0][t][1])**2),a=Te($(q(),[e.rings[0][t][0],e.rings[0][t][1],0],[i.x,i.y,0]),1/o,1),n=Ue([i.x,i.y,0],a,o*r,1);s.push({x:n[0],y:n[1]})}t.addRing([[s[0].x,s[0].y,0],[s[1].x,s[1].y,0],[s[2].x,s[2].y,0],[s[3].x,s[3].y,0],[s[0].x,s[0].y,0]])}return t}return e}(t,e.layer.coveragePercent)),function(e,t){return e.contains(t)}(t,r)){o.push(e);const r=t.toJSON(),i=s?.toJSON(),{attributes:a}=e,{cameraHeight:l,cameraHeading:c,location:p,objectId:m}=a,u=n(p)?p.toJSON():p;r.imageID=u.imageID=m,i&&(i.imageID=m),u.z=l,this.pointSources?.push(u),this.coveragePolygons?.push(c>0?r:void 0),this.coverageFrustums?.push(c>0?i:void 0)}}));const a=this.coveragePolygons?.getItemAt(0);if(!o.length)return void this.setMessage("noImageError","error");if(o[0].attributes.elevationSource&&!r.z&&a){const e=await Ze([r],{feature:o[0],currentCoveragePolygon:new ee(a),options:t});if(e[0]){const t=e[0];r.elevation=t.z}}var l;this._suitabilities=function(e){const{camera:t,features:r,selectedPoint:i}=e;if(!r.length)return[];e.currentImage??={attributes:{cameraHeading:0,cameraPitch:0}};const s=function(e,t,r){return t.z??=0,t.elevation??=0,i=>{const{hfovWeight:s,vfovWeight:o,distanceWeight:a}=function(e,t){const r="isOblique"in e?e:new Fe(e),{isOblique:i,isSpherical:s,isNadir:o}=r;return s?{hfovWeight:"2d"===t?0:1,vfovWeight:"2d"===t?0:.6,distanceWeight:"2d"===t?1:.5}:o?{hfovWeight:.25,vfovWeight:1,distanceWeight:1}:i?{hfovWeight:1,vfovWeight:.25,distanceWeight:1}:{hfovWeight:1,vfovWeight:1,distanceWeight:1}}(i.attributes,e?"3d":"2d"),n=i.attributes,{cameraHeight:l,cameraHeading:c,cameraPitch:p,farDistance:m,horizontalFieldOfView:u,verticalFieldOfView:h,isOblique:y}=n,g=n.geometry,d=180*Math.atan2(g.y-t.y,g.x-t.x)/Math.PI,f=E(t,g);let j,v,b=u,x=h,M=!1;e?(j=e.heading,v=e.tilt,b=180,x=180,M=!0):!y||p<10?(j=c,v=p,M=!1):(j=r.attributes.cameraHeading,v=p,M=!0,b=180),j>180&&(j-=360);let w=1;g.spatialReference.isWebMercator&&(w=1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*g.y/G.radius))));const P=Math.sqrt((Math.sqrt((t.x-g.x)**2+(t.y-g.y)**2)/w)**2+((t.z??0)-(t.elevation??0)-l)**2),_=90-180*Math.atan2(t.y-g.y,t.x-g.x)/Math.PI;let I=(Math.abs(_-j)>180?Math.abs(360-Math.abs(_-j)):Math.abs(_-j))/b;I=4*I+1;const k=180*Math.acos((n.cameraHeight-(t.z??0)+(t.elevation??0))/P)/Math.PI;let C=Math.abs(k-v)/x;C=4*C+1;let S=P/Math.sqrt(m**2+l**2);S=4*S+1;const R=s*I+o*C+a*S;let z;if(M){const e=c>180?c-360:c;z=s*((Math.abs(_-e)>180?Math.abs(360-Math.abs(_-e)):Math.abs(_-e))/u*4+1)+o*(Math.abs(k-p)/h*4+1)+a*S}else z=R;return{suitability:R,trueSuitability:z,feature:i,angle:d,distance:f,verticalAngle:Math.abs(180*Math.atan(f/l)/Math.PI)}}}(t,i,e.currentImage);return r.map(s)}({features:o,selectedPoint:r,camera:(l=this.view,"3d"===l?.type?this.view.camera:null),currentImage:this.selectedFeature}),this._suitabilities?.sort(((e,t)=>e.suitability-t.suitability));const c=this._suitabilities?.map((e=>e.feature)),p=c[0];this._updateFeatures(c),this.selectedFeature=p,this._groupFeaturesBySectors(),this._initialCurrentCoverageUpdate=!0,this._plotPolygons=!0}async _processHitTestResults(e,t,r){const{screenPoint:i,results:[s]}=t,o="graphic"===s?.type&&this.shouldShowSelectedImage,a={layerInstanceOrURL:e,point:s?.mapPoint??this.view?.toMap(i),queryParams:{maximumDistance:e.maximumDistance,objectIds:o?[s.graphic.getAttribute(e.objectIdField)]:void 0},queryFeatures:null};await this.searchBestImage(a,r)}_updateFeatures(e){e.length&&(this.features.removeAll(),this.features.addMany(e))}_updatePointsAndPolygons(){const{coveragePolygons:e,pointSources:r,selectedFeature:i,currentCoverageVisible:s,isAdditionalCoverageVisible:o,isAdditionalPointSourcesVisible:a}=this;if(e&&r&&i){this._additionalCoveragePolygons.removeAll(),this._additionalFeatureGraphics.removeAll(),this._currentCoveragePolygon&&(this._currentCoveragePolygon.destroy(),this._currentCoveragePolygon=null,this._initialCurrentCoveragePolygon=null);for(const r of e)r?.imageID===i?.attributes.objectId?this._initialCurrentCoveragePolygon=new t({attributes:{imageID:r?.imageID},geometry:{type:"polygon",...r},symbol:ot,visible:!1}):this._additionalCoveragePolygons.push(new t({attributes:{imageID:r?.imageID},geometry:{type:"polygon",...r},symbol:st,visible:o}));for(const e of r)e.imageID===i?.attributes.objectId?this._selectedFeatureGraphic=new t({attributes:{imageID:e.imageID},geometry:{type:"point",...e},symbol:rt,visible:s}):this._additionalFeatureGraphics?.push(new t({attributes:{imageID:e.imageID},geometry:{type:"point",...e},symbol:it,visible:a}))}}_updateSelectedFeature(e){if(!e)return;this.selectedFeature=this.features?.at(e.featureIndex);const t=this.selectedFeature?.attributes.cameraPitch&&this.selectedFeature?.attributes.cameraPitch<5;let r;if(t)r=-90;else{const t=e.x-we[3],i=e.y-we[3],s=i/Math.sqrt(t**2+i**2);let o=180*Math.acos(s)/Math.PI;(t<0&&i<0||t<0&&i>0)&&(o*=-1),r=o}r===this.selectedFeatureAngle?this.previousFeatureAngle=r:this.selectedFeatureAngle=r,this.navigatorSelectedFeature=t?null:{x:e.x,y:e.y,direction:e.sector.includes("_")?e.sector.split("_")[1]:e.sector}}plotReferencePoint(e){"mapPoint"in e?this.plotReferencePointOnGround(e.mapPoint):this.plotReferencePointOnGround(e)}updateCurrentCoveragePolygon(e){if(this._initialCurrentCoverageUpdate)if(this._overlays?.removeAll(),this._initialCurrentCoverageUpdate=!1,e&&(this._currentCoveragePolygon&&this._currentCoveragePolygon.destroy(),e.visible=this.currentCoverageVisible,this._currentCoveragePolygon=e),this.view){this._plotPolygons=!1;const e=this.selectedPoint?new t({geometry:this.selectedPoint.clone(),symbol:nt,attributes:{imageID:this.selectedFeature?.attributes.objectId}}):null;this._overlays?.graphics.addMany([...this._additionalCoveragePolygons,...this._additionalFeatureGraphics,this._currentCoveragePolygon,this._selectedFeatureGraphic,e].filter(lt))}else if(this._plotPolygons){this._plotPolygons=!1;const e={points:this.pointSources?.filter((e=>e?.imageID!==this.selectedFeature?.attributes.objectId)),frustums:this.coverageFrustums?.filter((e=>e?.imageID!==this.selectedFeature?.attributes.objectId)),polygons:this._additionalCoveragePolygons?.map((e=>e.geometry?.toJSON())),currentPoint:this.pointSources.find((e=>e?.imageID===this.selectedFeature?.attributes.objectId)),currentPolygon:this._currentCoveragePolygon,currentFrustum:this.coverageFrustums?.find((e=>e?.imageID===this.selectedFeature?.attributes.objectId))};this.emit("plot-polygons",{data:e})}else{const e={currentPoint:this.pointSources.find((e=>e?.imageID===this.selectedFeature?.attributes.objectId)),additionalPoint:this.pointSources.find((e=>e?.imageID===this._initialPreviousCoveragePolygon?.attributes.imageID)),currentPolygon:this._currentCoveragePolygon,additionalPolygon:this._initialPreviousCoveragePolygon};this.emit("update-selected-feature",{data:e})}else if(this.view){const t=this._currentCoveragePolygon&&this._overlays?this._overlays.graphics.indexOf(this._currentCoveragePolygon):-1;e&&(this._currentCoveragePolygon&&(this._overlays?.remove(this._currentCoveragePolygon),this._currentCoveragePolygon.destroy()),e.visible=this.currentCoverageVisible,this._currentCoveragePolygon=e,this._overlays?.graphics.add(this._currentCoveragePolygon,t>=0?t:void 0))}else e&&(this._currentCoveragePolygon=e,this.emit("update-current-coverage",{graphic:e.toJSON()}))}async loadImage(e,t){if(!this._imageViewer)return;if(this._imageViewer.graphics.removeAll(),this._currentImage&&this._imageViewer?.map.layers.includes(this._currentImage)&&(this._currentImage?.removeHandles("image-handles"),this._imageViewer?.map.layers.remove(this._currentImage),this._currentImage?.destroy(),this._currentImage=null),!e)return void this.setMessage("noImageError","error");const{horizontalFieldOfView:r,isSpherical:i}=e.attributes;if(360===r||i)return void this.setMessage("unsupportedPanaromicImageryError","error");let s,o,a=e.attributes.imagePath;if(!/^https?:/i.test(a)&&!ut(a)){if(!this.localPort)return this.setMessage("noLocalPort","error"),void l.getLogger(this).error("oriented-imagery-viewer:missing-local-port","A value for local port is not set. Local port is needed to load local images.");a=`http://127.0.0.1:${this.localPort}/${a}`}this._referencePointOnGround&&(this._imageViewer?.graphics.remove(this._referencePointOnGround),this._referencePointOnGround.destroy());const n={skipExtensions:["aux.xml","jgw"]};if(ut(a)){const r=new le({objectIds:[e.attributes.objectId]}),i=(await e.layer.queryAttachments(r,t))[`${e.attributes.objectId}`];if(!i[0]?.url)return void this.setMessage("noAttachment","error");if(s=i[0].contentType.split("/")[1]?.toUpperCase(),a=i[0]?.url,o=await w.open({ioConfig:n,url:a,datasetFormat:s,...t}).catch((e=>(this.setMessage("imageLoadError","error",e.message),null))),!o)return}this._currentImage=new M({ioConfig:n,url:a,raster:o,options:t}),this._imageViewer.map.layers.add(this._currentImage);try{const r=await this._currentImage.when();this._imageViewer.extent=r.fullExtent,r.raster.rasterInfo.isPseudoSpatialReference&&(this._imageViewer.rotation=(e.attributes.cameraRoll??0)+(e.attributes.imageRotation??0)),this._panConstraint&&this._imageViewer.constraints.customConstraints.remove(this._panConstraint),this._scaleConstraint&&this._imageViewer.constraints.customConstraints.remove(this._scaleConstraint),this._panConstraint={constrain:(e,t)=>{if(!this._currentImage||!this._imageViewer||!e.targetGeometry)return e;const{xmin:r,xmax:i,ymin:s,ymax:o}=this._currentImage.fullExtent,{extent:a,rotation:n}=this._imageViewer,l=n*Math.PI/180,c=Math.abs(Math.cos(l)*a.width+Math.sin(l)*a.height),p=Math.abs(Math.cos(l)*a.height+Math.sin(l)*a.width),{rasterInfo:m}=this._currentImage;return e.targetGeometry.x=Math.min(Math.max(r+Math.min(m.width,c)/2,e.targetGeometry.x),i-Math.min(m.width,c)/2),e.targetGeometry.y=Math.min(Math.max(s+Math.min(m.height,p)/2,e.targetGeometry.y),o-Math.min(m.height,p)/2),e},applyPanConstraint:e=>{if(!this._currentImage||!this._imageViewer||!e.targetGeometry)return e;const{xmin:t,xmax:r,ymin:i,ymax:s}=this._currentImage.fullExtent,{extent:o,rotation:a}=this._imageViewer,n=a*Math.PI/180,l=Math.abs(Math.cos(n)*o.width+Math.sin(n)*o.height),c=Math.abs(Math.cos(n)*o.height+Math.sin(n)*o.width),{rasterInfo:p}=this._currentImage;return e.targetGeometry.x=Math.min(Math.max(t+Math.min(p.width,l)/2,e.targetGeometry.x),r-Math.min(p.width,l)/2),e.targetGeometry.y=Math.min(Math.max(i+Math.min(p.height,c)/2,e.targetGeometry.y),s-Math.min(p.height,c)/2),e}},this._scaleConstraint={constrain:(e,t)=>{if(this._imageViewer&&this._currentImage){const{width:t,height:r}=this._currentImage.rasterInfo,{width:i,height:s,rotation:o,zoom:a}=this._imageViewer,n=o*Math.PI/180,l=Math.abs(Math.cos(n)*t+Math.sin(n)*r),c=Math.abs(Math.cos(n)*r+Math.sin(n)*t);a<1&&(e.scale=Math.max(e.scale,pe(this._imageViewer.spatialReference)*Math.max(l/i,c/s)/2**a))}return e}},this._imageViewer.constraints.customConstraints.addMany([this._panConstraint,this._scaleConstraint]),r.addHandles(m((()=>[this.brightness,this.contrast,this.sharpness]),(([e,t,i])=>{r.loaded&&(r.effect=`contrast(${10*(t+10)}%) brightness(${10*(e+10)}%)`,this.sharpenImage(r,i))}),h)),await this.transformAndPlotSelectedLocation(t)}catch(e){l.getLogger(this).error("oriented-imagery-viewer:load-image",e),this.setMessage("imageLoadError","error",e.message)}}sharpenImage(e,t){const r=[0,-1*t,0,-1*t,5,-1*t,0,-1*t,0],i=new ae({functionName:"Convolution",functionArguments:{type:ne.userDefined,cols:3,rows:3,kernel:r,convolutionType:ne.userDefined}});e.renderer=null,e.rasterFunction=i}async transformAndPlotSelectedLocation(e){const{_currentImage:r,selectedFeature:i,selectedPoint:s}=this;if(!s||!i||!r?.loaded)return;const{pixelSize:o}=r.rasterInfo,a=await Je([s],{feature:i,imageProperties:r.rasterInfo,currentCoveragePolygon:this.getSelectedFeaturePolygon(),options:e});if(!a.length)return;const n=a[0];if(!n)return;const l=d(j,await ue(r.fullExtent,d(te,this._imageViewer?.spatialReference),null,e?.signal));n.x=n.x*o.x+l.xmin,n.y=l.ymax-n.y*o.y,n.spatialReference=l.spatialReference,this._crossSymbol&&(this._imageViewer?.graphics.remove(this._crossSymbol),this._crossSymbol.destroy()),this._crossSymbol=new t({geometry:H.fromJSON(n),symbol:nt}),this._imageViewer?.graphics.add(this._crossSymbol)}async transformAndPlotReferencePointOnImage(e){if(!this._imageViewer)return;const t=this._currentImage;if(!t)return;const{feature:r,selectedLocation:i,options:s}=e,{pixelSize:o,isPseudoSpatialReference:a,transform:n}=t.rasterInfo,l=await Je([i],{feature:r,imageProperties:t.rasterInfo,currentCoveragePolygon:this.getSelectedFeaturePolygon(),options:s});if(!l.length)return;let c=l[0];const p=await ue(t.fullExtent,this._imageViewer.spatialReference,null,s?.signal);return a?(c.x=c.x*o.x+p.xmin,c.y=p.ymax-c.y*o.y,c.spatialReference=p.spatialReference):c=n.forwardTransform(new H(c)),this.plotReferencePointOnImage(c),{x:c.x,y:c.y}}plotReferencePointOnGround(e){this._referencePointOnGround&&(this._overlays?.remove(this._referencePointOnGround),this._referencePointOnGround.destroy()),this._referencePointOnGround=new t({geometry:{type:"point",...e.toJSON()},symbol:at}),this.view?this._overlays?.add(this._referencePointOnGround):this.emit("plot-ground-point",{data:{point:this._referencePointOnGround?.geometry}})}plotReferencePointOnImage(e){this._imageViewer&&(this._referencePointOnImage&&(this._imageViewer.graphics.remove(this._referencePointOnImage),this._referencePointOnImage.destroy()),this._referencePointOnImage=new t({geometry:{type:"point",...n(e)?e.toJSON():e},symbol:at}),this._imageViewer.graphics.add(this._referencePointOnImage))}setMessage(e,t,r){this.displayMessage={key:e,type:t,data:r}}async updateCoverage(){const e=new AbortController,{signal:r}=e;this._updateCoverageController=e;const{_imageViewer:i}=this;if(this._currentImage?.loaded&&i){const{width:e,height:s}=this._currentImage.rasterInfo,{xmin:o,xmax:a,ymin:n,ymax:l}=this._currentImage.fullExtent,c=[[0,0],[Math.min(i.width,e),0],[Math.min(i.width,e),Math.min(i.height,s)],[0,Math.min(i.height,s)]].map((e=>i.toMap(y(e[0],e[1]))));c.forEach((e=>{e.x=o<=e.x&&e.x<=a?e.x:Math.abs(o-e.x)>Math.abs(a-e.x)?a:o,e.y=n<=e.y&&e.y<=l?e.y:Math.abs(n-e.y)>Math.abs(l-e.y)?l:n}));const p=await Ye(c,{feature:this.getSelectedFeature(),currentCoveragePolygon:this.getSelectedFeaturePolygon(),imageProperties:this._currentImage.rasterInfo,options:{signal:r}});if(p&&!r.aborted){const e=[p.map((e=>[e.x,e.y,1]))];e[0].push(e[0][0]);const r=new ee({hasZ:!0,rings:e,spatialReference:p[0].spatialReference});this.updateCurrentCoveragePolygon(new t({attributes:{imageID:this.selectedFeature?.attributes.objectId},geometry:r,symbol:ot,visible:this.currentCoverageVisible}))}}}};e([g()],ht.prototype,"activeLayer",null),e([g()],ht.prototype,"layer",void 0),e([g()],ht.prototype,"shouldShowSelectedImage",void 0),e([g({type:Number})],ht.prototype,"brightness",null),e([g({type:Number})],ht.prototype,"contrast",null),e([g()],ht.prototype,"coverageFrustums",void 0),e([g()],ht.prototype,"coveragePolygons",void 0),e([g()],ht.prototype,"currentCoverageVisible",void 0),e([g({readOnly:!0})],ht.prototype,"currentImageView",null),e([g()],ht.prototype,"disabled",void 0),e([g()],ht.prototype,"displayMessage",void 0),e([g()],ht.prototype,"pointSources",void 0),e([g()],ht.prototype,"previousFeatureAngle",void 0),e([g()],ht.prototype,"selectedFeature",void 0),e([g()],ht.prototype,"selectedFeatureAngle",void 0),e([g()],ht.prototype,"selectedPoint",void 0),e([g({readOnly:!0})],ht.prototype,"featureCount",null),e([g()],ht.prototype,"features",void 0),e([g({readOnly:!0})],ht.prototype,"imageGalleryEnabled",null),e([g({readOnly:!0})],ht.prototype,"imageLoaded",null),e([g()],ht.prototype,"isAdditionalCoverageVisible",void 0),e([g()],ht.prototype,"isAdditionalPointSourcesVisible",void 0),e([g({type:Number})],ht.prototype,"localPort",void 0),e([g()],ht.prototype,"mapImageConversionToolState",void 0),e([g()],ht.prototype,"navigatorSelectedFeature",void 0),e([g({readOnly:!0})],ht.prototype,"updating",null),e([g()],ht.prototype,"referencePoint",null),e([g({type:Number})],ht.prototype,"sharpness",null),e([g({readOnly:!0})],ht.prototype,"sectorData",null),e([g({readOnly:!0})],ht.prototype,"state",null),e([g({readOnly:!0})],ht.prototype,"thumbnails",null),e([g({value:null})],ht.prototype,"view",null),e([g()],ht.prototype,"_additionalCoveragePolygons",void 0),e([g()],ht.prototype,"_additionalFeatureGraphics",void 0),e([g()],ht.prototype,"_currentCoveragePolygon",void 0),e([g()],ht.prototype,"_currentImage",void 0),e([g()],ht.prototype,"_fetchFeaturesController",void 0),e([g()],ht.prototype,"_imageViewer",void 0),e([g()],ht.prototype,"_initialCurrentCoveragePolygon",void 0),e([g()],ht.prototype,"_initialCurrentCoverageUpdate",void 0),e([g()],ht.prototype,"_overlays",void 0),e([g()],ht.prototype,"_plotPolygons",void 0),e([g()],ht.prototype,"_initialPreviousCoveragePolygon",void 0),e([g()],ht.prototype,"_referencePointOnGround",void 0),e([g()],ht.prototype,"_referencePointOnImage",void 0),e([g()],ht.prototype,"_selectedFeatureGraphic",void 0),e([g()],ht.prototype,"_sectorData",void 0),ht=e([f("esri.widgets.OrientedImageryViewer.OrientedImageryViewerViewModel")],ht);const yt=ht;export{ve as a,he as b,be as c,xe as d,yt as default,fe as e,Pe as f,Me as g,we as h,je as n,ye as r,Ce as s};
