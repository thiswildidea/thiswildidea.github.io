/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
import{B as r}from"../../../chunks/ByteSizeUnit.js";import s from"./LayerPerformanceInfo.js";import{i as o}from"../../../chunks/terrainUtils.js";import"../../../core/Collection.js";import"../../../chunks/tslib.es6.js";import"../../../core/Accessor.js";import"../../../chunks/typedArrayUtil.js";import"../../../core/Handles.js";import"../../../chunks/Logger.js";import"../../../config.js";import"../../../core/lang.js";import"../../../chunks/maybe.js";import"../../../core/accessorSupport/decorators/subclass.js";import"../../../chunks/metadata.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/tracking.js";import"../../../chunks/ensureType.js";import"../../../core/Error.js";import"../../../core/accessorSupport/decorators/property.js";import"../../../chunks/ObjectPool.js";import"../../../chunks/ObservableBase.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../chunks/PooledArray.js";import"../../../core/promiseUtils.js";import"../../../chunks/time.js";import"../../../core/Evented.js";import"../../../chunks/shared.js";import"../../../chunks/SimpleObservable.js";import"../../../chunks/unitUtils.js";import"../../../chunks/jsonMap.js";import"../../../chunks/Ellipsoid.js";import"../../../chunks/assets.js";import"../../../request.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../core/JSONSupport.js";import"../../../chunks/layerUtils2.js";import"../../../chunks/ViewingMode.js";import"../../../chunks/Util.js";import"../../../chunks/vec2f64.js";import"../../../chunks/vec4.js";import"../../../chunks/common.js";import"../../../chunks/vec4f64.js";import"../../../chunks/Scheduler.js";import"../../../core/reactiveUtils.js";import"../../../chunks/asyncUtils.js";import"../../../core/signal.js";import"../../../chunks/debugFlags.js";import"../../../chunks/RenderState.js";import"../../../chunks/vec3.js";import"../../../chunks/vec3f64.js";import"../../../geometry/projection.js";import"../../../geometry/Extent.js";import"../../../geometry/Geometry.js";import"../../../chunks/reader.js";import"../../../geometry/SpatialReference.js";import"../../../chunks/writer.js";import"../../../geometry/Point.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../geometry/support/webMercatorUtils.js";import"../../../geometry/Multipoint.js";import"../../../chunks/zmUtils.js";import"../../../geometry/Polygon.js";import"../../../chunks/Axis.js";import"../../../chunks/extentUtils.js";import"../../../chunks/aaBoundingRect.js";import"../../../chunks/mathUtils.js";import"../../../geometry/Polyline.js";import"../../../chunks/projectBuffer.js";import"../../../chunks/geodesicConstants.js";import"../../../geometry/support/GeographicTransformation.js";import"../../../geometry/support/GeographicTransformationStep.js";import"../../../chunks/zscale.js";import"../../../chunks/TerrainConst.js";import"../../../geometry.js";import"../../../chunks/typeUtils.js";import"../../../geometry/support/jsonUtils.js";import"../../../layers/support/LOD.js";import"../../../layers/support/TileInfo.js";import"../../../chunks/TileKey.js";function e(r){return"usedMemory"in r&&"unloadedMemory"in r&&"ignoresMemoryFactor"in r}class t{constructor(t){if(this.totalMemory=0,this.usedMemory=0,this.quality=1,this.load=0,this.terrainMemory=0,this.edgesMemory=0,this.layerPerformanceInfos=new Array,this.cachedMemory=0,this.fboMemory=0,null!=t.resourceController){const s=t.resourceController.memoryController;this.totalMemory=(s.maxMemory??0)*r.MEGABYTES,this.usedMemory=Math.round(s.usedMemory*this.totalMemory),this.quality=t.quality,this.load=t.resourceController.scheduler.load,this.cachedMemory=s.usedCacheMemory}this.terrainMemory=t.basemapTerrain?.usedMemory??0,this.edgesMemory=t?._stage?.renderer?.edgeView?.usedMemory??0,this.fboMemory=t?._stage?.renderer?.memoryInfo?.fbos??0,t.allLayerViews.items.forEach((r=>{(function(r){return e(r)}(r)||o(r))&&this.layerPerformanceInfos.push(new s(r,t))})),this.layerPerformanceInfos.sort(((r,s)=>s.memory-r.memory))}}export{t as default,e as i};
