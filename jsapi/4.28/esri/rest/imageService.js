// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("exports ../geometry ../request ../geometry/support/normalizeUtils ../geometry/support/spatialReferenceUtils ./utils ./support/ImageAngleResult ./support/ImageAreaResult ./support/ImageDistanceResult ./support/ImageHeightResult ./support/ImageIdentifyResult ./support/ImagePixelLocationResult ./support/ImagePointResult ./support/ImageSampleResult ../geometry/SpatialReference".split(" "),function(g,F,k,m,v,e,w,x,y,z,A,B,C,D,p){function q(b){const a=b?.time;if(a&&(null!=a.start||null!=a.end)){const c=
[];null!=a.start&&c.push(a.start);null==a.end||c.includes(a.end)||c.push(a.end);b.time=c.join(",")}}async function r(b,a,c){b=e.parseUrl(b);var d=await m.normalizeCentralMeridian(a.geometry?[a.geometry]:[]);a=a.toJSON();q(a);d=d?.[0];null!=d&&(a.geometry=d.toJSON());b=e.encode({...b.query,f:"json",...a});return e.asValidOptions(b,c)}async function n(b,a,c,d){b=e.parseUrl(b);c=await m.normalizeCentralMeridian(c);a=a.toJSON();null!=c[0]&&(a.fromGeometry=JSON.stringify(t(c[0])));null!=c[1]&&(a.toGeometry=
JSON.stringify(t(c[1])));a=e.encode({...b.query,f:"json",...a});d=e.asValidOptions(a,d);({data:d}=await k(b.path+"/measure",d));return d}function t(b){const a=b.toJSON();b.spatialReference?.imageCoordinateSystem&&(a.spatialReference=l(b.spatialReference));return a}function l(b){const {imageCoordinateSystem:a}=b;if(a){const {id:c,referenceServiceName:d}=a;return null!=c?d?{icsid:c,icsns:d}:{icsid:c}:{ics:a}}return b.toJSON()}function u(b,a){if(!b.imageCoordinateSystem)return v.srToRESTValue(b);b=l(b);
const {icsid:c,icsns:d}=b;return null==c||null!=d&&!a?.toLowerCase().includes("/"+d.toLowerCase()+"/")?JSON.stringify(b):`0:${c}`}g.computeAngles=async function(b,a,c){var d=a.toJSON();null!=d.angleName&&(d.angleName=d.angleName.join(","));a?.point?.spatialReference?.imageCoordinateSystem&&(d.point.spatialReference=l(a.point.spatialReference));a?.spatialReference?.imageCoordinateSystem&&(d.spatialReference=u(a.spatialReference));b=e.parseUrl(b);d=e.encode({...b.query,f:"json",...d});c=e.asValidOptions(d,
c);({data:c}=await k(`${b.path}/computeAngles`,c));c.spatialReference=c.spatialReference?null!=c.spatialReference.geodataXform?new p({wkid:0,imageCoordinateSystem:c.spatialReference}):p.fromJSON(c.spatialReference):null;"NaN"===c.north&&(c.north=null);"NaN"===c.up&&(c.up=null);return new w(c)};g.computeHistograms=async function(b,a,c){a=await r(b,a,c);b=e.parseUrl(b);({data:b}=await k(`${b.path}/computeHistograms`,a));return{histograms:b.histograms}};g.computePixelSpaceLocations=async function(b,
a,c){var d=a.toJSON();({geometries:a}=a);if(a)for(let f=0;f<a.length;f++)a[f].spatialReference?.imageCoordinateSystem&&(d.geometries.geometries[f].spatialReference=l(a[f].spatialReference));b=e.parseUrl(b);d=e.encode({...b.query,f:"json",...d});c=e.asValidOptions(d,c);({data:c}=await k(`${b.path}/computePixelLocation`,c));return B.fromJSON(c)};g.computeStatisticsHistograms=async function(b,a,c){a=await r(b,a,c);b=e.parseUrl(b);({data:b}=await k(`${b.path}/computeStatisticsHistograms`,a));({statistics:a}=
b);a?.length&&a.forEach(d=>{d.avg=d.mean;d.stddev=d.standardDeviation});return{statistics:a,histograms:b.histograms}};g.getImageSpatialReferenceJSON=l;g.getImageSpatialReferenceQueryParameter=u;g.getSamples=async function(b,a,c){var d=a.toJSON();q(d);d.outFields?.length&&(d.outFields=d.outFields.join(","));a=(await m.normalizeCentralMeridian(a.geometry))?.[0];null!=a&&(d.geometry=a.toJSON());b=e.parseUrl(b);d=e.encode({...b.query,f:"json",...d});c=e.asValidOptions(d,c);({data:c}=await k(`${b.path}/getSamples`,
c));c=c?.samples?.map(f=>{const h="NaN"===f.value||""===f.value?null:f.value.split(" ").map(E=>Number(E));return{...f,pixelValue:h}});return D.fromJSON({samples:c})};g.identify=async function(b,a,c){const d=e.parseUrl(b);return m.normalizeCentralMeridian(a.geometry?[a.geometry]:[]).then(f=>{var h=a.toJSON();f=f?.[0];null!=f&&(h.geometry=JSON.stringify(f.toJSON()));h=e.encode({...d.query,f:"json",...h});h=e.asValidOptions(h,c);return k(d.path+"/identify",h)}).then(f=>A.fromJSON(f.data))};g.measureAreaAndPerimeter=
async function(b,a,c){b=await n(b,a,[a.geometry],c);return x.fromJSON(b)};g.measureDistanceAndAngle=async function(b,a,c){b=await n(b,a,[a.fromGeometry,a.toGeometry],c);return y.fromJSON(b)};g.measureHeight=async function(b,a,c){b=await n(b,a,[a.fromGeometry,a.toGeometry],c);return z.fromJSON(b)};g.measurePointOrCentroid=async function(b,a,c){b=await n(b,a,[a.geometry],c);return C.fromJSON(b)};Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});