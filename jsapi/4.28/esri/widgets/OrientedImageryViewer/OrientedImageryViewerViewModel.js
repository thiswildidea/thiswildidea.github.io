// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("../../chunks/tslib.es6 ../../geometry ../../Graphic ../../core/arrayUtils ../../core/Collection ../../core/deprecate ../../core/Evented ../../core/JSONSupport ../../core/Logger ../../core/mathUtils ../../core/maybe ../../core/reactiveUtils ../../core/screenUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/has ../../core/accessorSupport/decorators/subclass ../../geometry/Extent ../../geometry/support/webMercatorUtils ../../layers/GraphicsLayer ../../layers/ImageryTileLayer ../../layers/orientedImagery/queries ../../layers/orientedImagery/core/bestImageUtils ../../layers/orientedImagery/core/coverageUtils ../../layers/orientedImagery/transformations/groundToImageUtils ../../layers/orientedImagery/transformations/imageToGroundUtils ../../layers/support/RasterFunction ../../layers/support/rasterFunctionConstants ../../layers/support/rasterDatasets/RasterFactory ../../rest/support/AttachmentQuery ../../views/MapView ../../views/2d/viewpointUtils ../../views/input/InputManager ../../views/support/projectionUtils ./constants ./symbols ./utils ../../geometry/Polygon ../../geometry/SpatialReference ../../geometry/Point".split(" "),
function(f,e,C,S,E,K,T,L,F,I,B,v,U,g,M,ka,V,W,X,Y,Z,aa,ba,G,J,N,ca,O,da,ea,fa,ha,ia,P,w,D,H,Q,ja,R){e=class extends T.EventedAccessor{constructor(a){super(a);this.layer=null;this.shouldShowSelectedImage=!1;this.coverageFrustums=new E;this.coveragePolygons=new E;this.currentCoverageVisible=!0;this.disabled=!1;this.displayMessage=null;this.pointSources=new E;this.previousFeatureAngle=0;this.selectedFeature=null;this.selectedFeatureAngle=0;this.selectedPoint=null;this.features=new E;this.isAdditionalPointSourcesVisible=
this.isAdditionalCoverageVisible=!1;this.localPort=null;this.mapImageConversionToolState=!1;this.navigatorSelectedFeature=null;this._additionalCoveragePolygons=new E;this._additionalFeatureGraphics=new E;this._initialCurrentCoveragePolygon=this._imageViewer=this._fetchFeaturesController=this._currentImage=this._currentCoveragePolygon=null;this._initialCurrentCoverageUpdate=!0;this._overlays=new Y({listMode:"hide",internal:!0});this._plotPolygons=!1;this._suitabilities=this._scaleConstraint=this._panConstraint=
this._crossSymbol=this._sectorData=this._referencePointOnImage=this._referencePointOnGround=this._initialPreviousCoveragePolygon=null;this._transformController=new AbortController;this._updateCoverageController=null;this._imageClickHandler=async b=>{if(0===b.button&&this._currentImage&&this._currentImage?.fullExtent){const {xmin:h,xmax:d,ymin:k,ymax:p}=this._currentImage.fullExtent,{x:m,y:n}=b.mapPoint;if(!(h>m||d<m||p<n||k>n)){this.plotReferencePointOnImage(b.mapPoint);var c=this.getSelectedFeature();
c&&(b=(await N.transformPoints([b.mapPoint.toJSON()],{feature:c,currentCoveragePolygon:this.getSelectedFeaturePolygon(),imageProperties:this._currentImage.rasterInfo,options:{signal:this._transformController?.signal}}))[0])&&this.plotReferencePointOnGround(b)}}};this._viewClickHandler=b=>{if("mouse"!==b.pointerType||0===b.button)b.stopPropagation(),b.preventDefault(),this.loadBestImage(b.mapPoint)};this._mapImageConversionToolViewClickHandler=b=>{b.stopPropagation();b.preventDefault();this.plotMapPoint(b.mapPoint)};
this.handleSectorClick=this.handleSectorClick.bind(this);this.loadViewer=this.loadViewer.bind(this);this.searchBestImage=this.searchBestImage.bind(this);this.transformAndPlotReferencePointOnImage=this.transformAndPlotReferencePointOnImage.bind(this)}initialize(){this.addHandles([v.watch(()=>this.view?.map,(a,b)=>{b?.layers.remove(this._overlays);a?.layers.add(this._overlays)},v.initial),v.watch(()=>this.view?.map?.allLayers?.length,a=>{a&&this.view?.map?.layers.reorder(this._overlays,a-1)},v.initial),
v.watch(()=>this.layer?.visible??!1,a=>{this._overlays.visible=a},v.initial),v.watch(()=>[this.state,this.mapImageConversionToolState],()=>{this.removeHandles("view-click");"disabled"!==this.state&&null!=this.view&&this.addHandles(this.view.on("click",this.mapImageConversionToolState&&"image-loaded"===this.state?this._mapImageConversionToolViewClickHandler:this._viewClickHandler,ia.ViewEventPriorities.WIDGET),"view-click")},v.initial),v.watch(()=>this.mapImageConversionToolState,()=>{this.removeHandles("image-click");
this.imageLoaded&&this.mapImageConversionToolState&&this.addHandles(this._imageViewer.on("click",this._imageClickHandler),"image-click")})])}destroy(){this._cancelCurrentCoverageUpdate();this._cancelFetchingFeatures();this.coverageFrustums.destroy();this.coveragePolygons.destroy();this.pointSources.destroy();this._additionalCoveragePolygons.destroy();this._additionalFeatureGraphics.destroy();this._currentImage=B.destroyMaybe(this._currentImage);this._imageViewer=B.destroyMaybe(this._imageViewer);
this._initialCurrentCoveragePolygon=B.destroyMaybe(this._initialCurrentCoveragePolygon);this._currentCoveragePolygon=B.destroyMaybe(this._currentCoveragePolygon);this._crossSymbol=B.destroyMaybe(this._crossSymbol);this._referencePointOnGround=B.destroyMaybe(this._referencePointOnGround);this._referencePointOnImage=B.destroyMaybe(this._referencePointOnImage);this._overlays&&this.view?.map.remove(this._overlays);this._overlays.destroy()}get activeLayer(){K.deprecatedProperty(F.getLogger(this),"activeLayer",
{replacement:"layer"});return this.layer}set activeLayer(a){K.deprecatedProperty(F.getLogger(this),"activeLayer",{replacement:"layer"});this.layer=a}get brightness(){return this._get("brightness")??0}set brightness(a){this._set("brightness",I.clamp(a,-10,10))}get contrast(){return this._get("contrast")??0}set contrast(a){this._set("contrast",I.clamp(a,-10,10))}get currentImageView(){return this._imageViewer?.allLayerViews.find(a=>a.layer===this._currentImage)}get featureCount(){return this.features?.length??
0}get imageGalleryEnabled(){return H.isTifOrMrf(this.selectedFeature?.attributes.imagePath.trim())}get imageLoaded(){return this._currentImage?.loaded??!1}get updating(){return"loading"===this._currentImage?.loadStatus||!!this._fetchFeaturesController}get referencePoint(){return this._referencePointOnGround?.geometry}get sharpness(){return this._get("sharpness")??0}set sharpness(a){this._set("sharpness",I.clamp(a,0,1))}get sectorData(){const {_sectorData:a}=this;if(a)return w.sectorsInOrder.map(b=>
a[b])}get state(){const {layer:a,view:b,_currentImage:c}=this;return this.disabled||!a||b&&!b.ready?"disabled":c?.loadStatus?`image-${c.loadStatus}`:"ready"}get thumbnails(){const {features:a}=this;return a?new E(a.map(({attributes:{imagePath:b,objectId:c}})=>{b=b.trim();return H.isTifOrMrf(b)?{url:b,objectId:c}:null}).filter(S.isSome)):null}set view(a){this._set("view",a)}getCurrentCoveragePolygon(){return this._currentCoveragePolygon}getSelectedFeature(){return this.selectedFeature}getSelectedFeaturePolygon(){return this._initialCurrentCoveragePolygon}handleSectorClick(a){isNaN(a)||
(a=this._sectorData?.[w.sectorsInOrder[a]],a?.length&&this._updateSelectedFeature(a.at(0)))}handleFeatureClick(a){const {sector:b,featureIndexInSector:c}=a;isNaN(c)||(a=this._sectorData?.[b],a?.length&&this._updateSelectedFeature(a.at(c)))}async loadBestImage(a){this.displayMessage=null;this.selectedPoint=a.spatialReference.isGeographic?X.geographicToWebMercator(a):a.clone();this.features.removeAll();this._additionalCoveragePolygons.removeAll();this._additionalFeatureGraphics.removeAll();this._currentCoveragePolygon=
B.destroyMaybe(this._currentCoveragePolygon);this._overlays?.removeAll();this.selectedFeature=null;await this._fetchFeaturesWithController(a)}loadViewer(a){const b=new Map;this._imageViewer=new fa({container:a,map:b,spatialReferance:{wkid:0},constraints:{snapToZoom:!1,rotationEnabled:!1},ui:{components:["zoom"]}});v.once(()=>!0===this._imageViewer?.stationary).then(()=>{this.setMessage("onLoadMessage","info")});this._imageViewer.addHandles([v.watch(()=>[this._imageViewer?.viewpoint,this._initialCurrentCoveragePolygon],
(c,h)=>{c?.[1]!==h?.[1]&&(this._initialPreviousCoveragePolygon=this._plotPolygons?null:h?.[1]);this._imageViewer?.viewpoint&&this._initialCurrentCoveragePolygon&&(this._cancelCurrentCoverageUpdate(),this.updateCoverage())}),v.watch(()=>this.selectedFeatureAngle,(c,h)=>{this.previousFeatureAngle=h??0},v.initial),v.watch(()=>this.selectedFeature,async()=>{const {selectedFeature:c,selectedPoint:h}=this;!c&&this._currentImage&&(this._imageViewer?.map.layers.remove(this._currentImage),this._currentImage=
B.destroyMaybe(this._currentImage));if(c&&h){this._initialCurrentCoverageUpdate=!0;this._updatePointsAndPolygons();this._fetchFeaturesController??(this._fetchFeaturesController=new AbortController);const {signal:d}=this._fetchFeaturesController;await this.loadImage(c,{signal:d}).finally(()=>{this._fetchFeaturesController=null})}})])}async plotMapPoint(a){this.plotReferencePoint(a);return this.transformAndPlotReferencePointOnImage({feature:this.selectedFeature,selectedLocation:a,options:{signal:this._transformController?.signal}})}resetImage(){this._currentImage=
B.destroyMaybe(this._currentImage);this.setMessage("onLoadMessage","info");this._cancelCurrentCoverageUpdate();this._cancelFetchingFeatures()}async searchBestImage(a,b){try{const c=await aa.searchImages(a,b);c&&await this._processFeatureResponse(c,{signal:b?.signal})}catch(c){a=F.getLogger(this),this.setMessage("imageLoadError","error"),a.error("error occurred while finding best image",c)}}setAdditionalCameraLocationsVisibility(a){this._additionalFeatureGraphics.forEach(b=>{b.visible=a})}setAdditionalCoverageVisibility(a){this._additionalCoveragePolygons.forEach(b=>
{b.visible=a})}setCurrentCoverageVisibility(a){this._currentCoveragePolygon&&(this._currentCoveragePolygon.visible=a);this._selectedFeatureGraphic&&(this._selectedFeatureGraphic.visible=a)}setMapImageConversionToolState(a){this.mapImageConversionToolState=a}_cancelFetchingFeatures(a){const b=this._fetchFeaturesController;b&&b.abort(a);this._fetchFeaturesController=null}_cancelCurrentCoverageUpdate(){const a=this._updateCoverageController;a&&a.abort("Multiple Coverage Updates: Aborting Current Coverage Update to sync image and coverage");
this._updateCoverageController=null}async _fetchFeatures(a,b){if(this.view){var c=this.layer;if(c){var h={include:c};if(a=this.view.toScreen(a))h=await this.view.hitTest(a,h),this._processHitTestResults(c,h,b)}}}async _fetchFeaturesWithController(a){this._cancelFetchingFeatures();const b=new AbortController,{signal:c}=b;this._fetchFeaturesController=b;try{await this._fetchFeatures(a,{signal:c}).finally(()=>{this._fetchFeaturesController=null})}catch(h){a=F.getLogger(this),this.setMessage("imageLoadError",
"error"),a.error("error occurred while fetching features",h)}}_groupFeaturesBySectors(){const {_suitabilities:a,features:b}=this;if(a&&b){this._sectorData={};for(var c of w.sectorsInOrder)this._sectorData[c]=new E;c=a.map((k,p)=>({...k,featureIndex:p}));c.sort((k,p)=>k.trueSuitability-p.trueSuitability);var h=c.map(({distance:k})=>k),d=Math.max(...h);c.forEach(k=>{const {distance:p,angle:m,featureIndex:n}=k;var l="FAR",q=p/d*w.sectorsRadii[2];q<=w.sectorsRadii[0]?l="NEAR":q<=w.sectorsRadii[1]&&(l=
"");var r="NORTH";135<=Math.abs(m)?r="WEST":-45>m&&-135<m?r="SOUTH":45>=m&&(r="EAST");if(this._sectorData){k=w.sectorsRadii[3]+q*Math.sin(m*Math.PI/180);q=w.sectorsRadii[3]+q*Math.cos(m*Math.PI/180);var x=b.at(n),z=x===this.selectedFeature,A=this.selectedFeature?.attributes.cameraPitch&&5>this.selectedFeature?.attributes.cameraPitch;if(z&&A)var t=-90;else{t=k-w.sectorsRadii[3];const u=q-w.sectorsRadii[3];let y=180*Math.acos(u/Math.sqrt(t**2+u**2))/Math.PI;if(0>t&&0>u||0>t&&0<u)y*=-1;t=y}l=""===l?
r:`${l}_${r}`;z&&(t===this.selectedFeatureAngle?this.previousFeatureAngle=t:this.selectedFeatureAngle=t,this.navigatorSelectedFeature=A?null:{x:k,y:q,direction:r});r=this._sectorData[l];r.add({angle:m,featureIndex:n,x:k,y:q,objectID:x.attributes.objectId,sector:l,featureIndexInSector:r.length})}})}else this._sectorData=null}async _processFeatureResponse(a,b){const {selectedPoint:c}=this;if(c&&a&&a)if({features:a}=a,a.length){var h=[];this.coveragePolygons.removeAll();this.coverageFrustums.removeAll();
this.pointSources.removeAll();a.forEach(d=>{const {polygon:k,frustum:p}=G.createCoveragePolygon(d);var m=k;d.attributes.isInspection&&(m=G.computePolygonForInspection(d.attributes));d.layer.coveragePercent&&(m=G.resizePolygon(m,d.layer.coveragePercent));if(G.checkIfPolygonContainsSelectedPoint(m,c)){h.push(d);m=m.toJSON();const n=p?.toJSON();({attributes:d}=d);const {cameraHeight:l,cameraHeading:q,location:r,objectId:x}=d;d=L.isSerializable(r)?r.toJSON():r;m.imageID=d.imageID=x;n&&(n.imageID=x);d.z=
l;this.pointSources?.push(d);this.coveragePolygons?.push(0<q?m:void 0);this.coverageFrustums?.push(0<q?n:void 0)}});a=this.coveragePolygons?.getItemAt(0);h.length?(h[0].attributes.elevationSource&&!c.z&&a&&(b=await J.updateElevation([c],{feature:h[0],currentCoveragePolygon:new Q(a),options:b}),b[0]&&(c.elevation=b[0].z)),this._suitabilities=ba.calculateSuitabilities({features:h,selectedPoint:c,camera:H.isSceneView(this.view)?this.view.camera:null,currentImage:this.selectedFeature}),this._suitabilities?.sort((d,
k)=>d.suitability-k.suitability),b=this._suitabilities?.map(d=>d.feature),a=b[0],this._updateFeatures(b),this.selectedFeature=a,this._groupFeaturesBySectors(),this._plotPolygons=this._initialCurrentCoverageUpdate=!0):this.setMessage("noImageError","error")}else this.setMessage("noImageError","error"),this.selectedFeature=null}async _processHitTestResults(a,b,c){const {screenPoint:h,results:[d]}=b;b="graphic"===d?.type&&this.shouldShowSelectedImage;const k=d?.mapPoint??this.view?.toMap(h);a={layerInstanceOrURL:a,
point:k,queryParams:{maximumDistance:a.maximumDistance,objectIds:b?[d.graphic.getAttribute(a.objectIdField)]:void 0},queryFeatures:null};await this.searchBestImage(a,c)}_updateFeatures(a){a.length&&(this.features.removeAll(),this.features.addMany(a))}_updatePointsAndPolygons(){const {coveragePolygons:a,pointSources:b,selectedFeature:c,currentCoverageVisible:h,isAdditionalCoverageVisible:d,isAdditionalPointSourcesVisible:k}=this;if(a&&b&&c){this._additionalCoveragePolygons.removeAll();this._additionalFeatureGraphics.removeAll();
this._currentCoveragePolygon&&(this._currentCoveragePolygon.destroy(),this._initialCurrentCoveragePolygon=this._currentCoveragePolygon=null);for(const p of a)p?.imageID===c?.attributes.objectId?this._initialCurrentCoveragePolygon=new C({attributes:{imageID:p?.imageID},geometry:{type:"polygon",...p},symbol:D.activePolygonSymbol,visible:!1}):this._additionalCoveragePolygons.push(new C({attributes:{imageID:p?.imageID},geometry:{type:"polygon",...p},symbol:D.polygonSymbol,visible:d}));for(const p of b)p.imageID===
c?.attributes.objectId?this._selectedFeatureGraphic=new C({attributes:{imageID:p.imageID},geometry:{type:"point",...p},symbol:D.activeSourcePointSymbol,visible:h}):this._additionalFeatureGraphics?.push(new C({attributes:{imageID:p.imageID},geometry:{type:"point",...p},symbol:D.sourcePointSymbol,visible:k}))}}_updateSelectedFeature(a){if(a){this.selectedFeature=this.features?.at(a.featureIndex);var b=this.selectedFeature?.attributes.cameraPitch&&5>this.selectedFeature?.attributes.cameraPitch;if(b)var c=
-90;else{c=a.x-w.sectorsRadii[3];const h=a.y-w.sectorsRadii[3];let d=180*Math.acos(h/Math.sqrt(c**2+h**2))/Math.PI;if(0>c&&0>h||0>c&&0<h)d*=-1;c=d}c===this.selectedFeatureAngle?this.previousFeatureAngle=c:this.selectedFeatureAngle=c;this.navigatorSelectedFeature=b?null:{x:a.x,y:a.y,direction:a.sector.includes("_")?a.sector.split("_")[1]:a.sector}}}plotReferencePoint(a){"mapPoint"in a?this.plotReferencePointOnGround(a.mapPoint):this.plotReferencePointOnGround(a)}updateCurrentCoveragePolygon(a){if(this._initialCurrentCoverageUpdate)this._overlays?.removeAll(),
this._initialCurrentCoverageUpdate=!1,a&&(this._currentCoveragePolygon&&this._currentCoveragePolygon.destroy(),a.visible=this.currentCoverageVisible,this._currentCoveragePolygon=a),this.view?(this._plotPolygons=!1,a=this.selectedPoint?new C({geometry:this.selectedPoint.clone(),symbol:D.crossSymbol,attributes:{imageID:this.selectedFeature?.attributes.objectId}}):null,this._overlays?.graphics.addMany([...this._additionalCoveragePolygons,...this._additionalFeatureGraphics,this._currentCoveragePolygon,
this._selectedFeatureGraphic,a].filter(H.isGraphic))):this._plotPolygons?(this._plotPolygons=!1,a={points:this.pointSources?.filter(b=>b?.imageID!==this.selectedFeature?.attributes.objectId),frustums:this.coverageFrustums?.filter(b=>b?.imageID!==this.selectedFeature?.attributes.objectId),polygons:this._additionalCoveragePolygons?.map(b=>b.geometry?.toJSON()),currentPoint:this.pointSources.find(b=>b?.imageID===this.selectedFeature?.attributes.objectId),currentPolygon:this._currentCoveragePolygon,currentFrustum:this.coverageFrustums?.find(b=>
b?.imageID===this.selectedFeature?.attributes.objectId)},this.emit("plot-polygons",{data:a})):(a={currentPoint:this.pointSources.find(b=>b?.imageID===this.selectedFeature?.attributes.objectId),additionalPoint:this.pointSources.find(b=>b?.imageID===this._initialPreviousCoveragePolygon?.attributes.imageID),currentPolygon:this._currentCoveragePolygon,additionalPolygon:this._initialPreviousCoveragePolygon},this.emit("update-selected-feature",{data:a}));else if(this.view){const b=this._currentCoveragePolygon&&
this._overlays?this._overlays.graphics.indexOf(this._currentCoveragePolygon):-1;a&&(this._currentCoveragePolygon&&(this._overlays?.remove(this._currentCoveragePolygon),this._currentCoveragePolygon.destroy()),a.visible=this.currentCoverageVisible,this._currentCoveragePolygon=a,this._overlays?.graphics.add(this._currentCoveragePolygon,0<=b?b:void 0))}else a&&(this._currentCoveragePolygon=a,this.emit("update-current-coverage",{graphic:a.toJSON()}))}async loadImage(a,b){if(this._imageViewer)if(this._imageViewer.graphics.removeAll(),
this._currentImage&&this._imageViewer?.map.layers.includes(this._currentImage)&&(this._currentImage?.removeHandles("image-handles"),this._imageViewer?.map.layers.remove(this._currentImage),this._currentImage?.destroy(),this._currentImage=null),a){var {horizontalFieldOfView:c,isSpherical:h}=a.attributes;if(360===c||h)this.setMessage("unsupportedPanaromicImageryError","error");else{var d=a.attributes.imagePath;if(!/^https?:/i.test(d)&&"FA"!==d){if(!this.localPort){this.setMessage("noLocalPort","error");
F.getLogger(this).error("oriented-imagery-viewer:missing-local-port","A value for local port is not set. Local port is needed to load local images.");return}d=`http://127.0.0.1:${this.localPort}/${d}`}this._referencePointOnGround&&(this._imageViewer?.graphics.remove(this._referencePointOnGround),this._referencePointOnGround.destroy());var k={skipExtensions:["aux.xml","jgw"]};if("FA"===d){d=new ea({objectIds:[a.attributes.objectId]});d=(await a.layer.queryAttachments(d,b))[`${a.attributes.objectId}`];
if(!d[0]?.url){this.setMessage("noAttachment","error");return}var p=d[0].contentType.split("/")[1]?.toUpperCase();d=d[0]?.url;p=await da.open({ioConfig:k,url:d,datasetFormat:p,...b}).catch(m=>{this.setMessage("imageLoadError","error",m.message);return null});if(!p)return}this._currentImage=new Z({ioConfig:k,url:d,raster:p,options:b});this._imageViewer.map.layers.add(this._currentImage);try{const m=await this._currentImage.when();this._imageViewer.extent=m.fullExtent;m.raster.rasterInfo.isPseudoSpatialReference&&
(this._imageViewer.rotation=(a.attributes.cameraRoll??0)+(a.attributes.imageRotation??0));this._panConstraint&&this._imageViewer.constraints.customConstraints.remove(this._panConstraint);this._scaleConstraint&&this._imageViewer.constraints.customConstraints.remove(this._scaleConstraint);this._panConstraint={constrain:(n,l)=>{if(!this._currentImage||!this._imageViewer||!n.targetGeometry)return n;const {xmin:q,xmax:r,ymin:x,ymax:z}=this._currentImage.fullExtent,{extent:A,rotation:t}=this._imageViewer;
var u=t*Math.PI/180;l=Math.abs(Math.cos(u)*A.width+Math.sin(u)*A.height);u=Math.abs(Math.cos(u)*A.height+Math.sin(u)*A.width);const {rasterInfo:y}=this._currentImage;n.targetGeometry.x=Math.min(Math.max(q+Math.min(y.width,l)/2,n.targetGeometry.x),r-Math.min(y.width,l)/2);n.targetGeometry.y=Math.min(Math.max(x+Math.min(y.height,u)/2,n.targetGeometry.y),z-Math.min(y.height,u)/2);return n},applyPanConstraint:n=>{if(!this._currentImage||!this._imageViewer||!n.targetGeometry)return n;const {xmin:l,xmax:q,
ymin:r,ymax:x}=this._currentImage.fullExtent,{extent:z,rotation:A}=this._imageViewer;var t=A*Math.PI/180;const u=Math.abs(Math.cos(t)*z.width+Math.sin(t)*z.height);t=Math.abs(Math.cos(t)*z.height+Math.sin(t)*z.width);const {rasterInfo:y}=this._currentImage;n.targetGeometry.x=Math.min(Math.max(l+Math.min(y.width,u)/2,n.targetGeometry.x),q-Math.min(y.width,u)/2);n.targetGeometry.y=Math.min(Math.max(r+Math.min(y.height,t)/2,n.targetGeometry.y),x-Math.min(y.height,t)/2);return n}};this._scaleConstraint=
{constrain:(n,l)=>{if(this._imageViewer&&this._currentImage){const {width:r,height:x}=this._currentImage.rasterInfo,{width:z,height:A,rotation:t,zoom:u}=this._imageViewer;var q=t*Math.PI/180;l=Math.abs(Math.cos(q)*r+Math.sin(q)*x);q=Math.abs(Math.cos(q)*x+Math.sin(q)*r);1>u&&(n.scale=Math.max(n.scale,ha.getResolutionToScaleFactor(this._imageViewer.spatialReference)*Math.max(l/z,q/A)/2**u))}return n}};this._imageViewer.constraints.customConstraints.addMany([this._panConstraint,this._scaleConstraint]);
m.addHandles(v.watch(()=>[this.brightness,this.contrast,this.sharpness],([n,l,q])=>{m.loaded&&(m.effect=`contrast(${10*(l+10)}%) brightness(${10*(n+10)}%)`,this.sharpenImage(m,q))},v.initial));await this.transformAndPlotSelectedLocation(b)}catch(m){F.getLogger(this).error("oriented-imagery-viewer:load-image",m),this.setMessage("imageLoadError","error",m.message)}}}else this.setMessage("noImageError","error")}sharpenImage(a,b){b=new ca({functionName:"Convolution",functionArguments:{type:O.convolutionKernel.userDefined,
cols:3,rows:3,kernel:[0,-1*b,0,-1*b,5,-1*b,0,-1*b,0],convolutionType:O.convolutionKernel.userDefined}});a.renderer=null;a.rasterFunction=b}async transformAndPlotSelectedLocation(a){const {_currentImage:b,selectedFeature:c,selectedPoint:h}=this;if(h&&c&&b?.loaded){var {pixelSize:d}=b.rasterInfo,k=await J.transformPoints([h],{feature:c,imageProperties:b.rasterInfo,currentCoveragePolygon:this.getSelectedFeaturePolygon(),options:a});k.length&&(k=k[0])&&(a=M.ensureType(W,await P.projectWithEngineOrService(b.fullExtent,
M.ensureType(ja,this._imageViewer?.spatialReference),null,a?.signal)),k.x=k.x*d.x+a.xmin,k.y=a.ymax-k.y*d.y,k.spatialReference=a.spatialReference,this._crossSymbol&&(this._imageViewer?.graphics.remove(this._crossSymbol),this._crossSymbol.destroy()),this._crossSymbol=new C({geometry:R.fromJSON(k),symbol:D.crossSymbol}),this._imageViewer?.graphics.add(this._crossSymbol))}}async transformAndPlotReferencePointOnImage(a){if(this._imageViewer){var b=this._currentImage;if(b){var {feature:c,selectedLocation:h,
options:d}=a,{pixelSize:k,isPseudoSpatialReference:p,transform:m}=b.rasterInfo;a=await J.transformPoints([h],{feature:c,imageProperties:b.rasterInfo,currentCoveragePolygon:this.getSelectedFeaturePolygon(),options:d});if(a.length)return a=a[0],b=await P.projectWithEngineOrService(b.fullExtent,this._imageViewer.spatialReference,null,d?.signal),p?(a.x=a.x*k.x+b.xmin,a.y=b.ymax-a.y*k.y,a.spatialReference=b.spatialReference):a=m.forwardTransform(new R(a)),this.plotReferencePointOnImage(a),{x:a.x,y:a.y}}}}plotReferencePointOnGround(a){this._referencePointOnGround&&
(this._overlays?.remove(this._referencePointOnGround),this._referencePointOnGround.destroy());this._referencePointOnGround=new C({geometry:{type:"point",...a.toJSON()},symbol:D.diamondSymbol});this.view?this._overlays?.add(this._referencePointOnGround):this.emit("plot-ground-point",{data:{point:this._referencePointOnGround?.geometry}})}plotReferencePointOnImage(a){this._imageViewer&&(this._referencePointOnImage&&(this._imageViewer.graphics.remove(this._referencePointOnImage),this._referencePointOnImage.destroy()),
this._referencePointOnImage=new C({geometry:{type:"point",...(L.isSerializable(a)?a.toJSON():a)},symbol:D.diamondSymbol}),this._imageViewer.graphics.add(this._referencePointOnImage))}setMessage(a,b,c){this.displayMessage={key:a,type:b,data:c}}async updateCoverage(){var a=new AbortController,{signal:b}=a;this._updateCoverageController=a;const {_imageViewer:c}=this;if(this._currentImage?.loaded&&c){const {width:h,height:d}=this._currentImage.rasterInfo,{xmin:k,xmax:p,ymin:m,ymax:n}=this._currentImage.fullExtent;
a=[[0,0],[Math.min(c.width,h),0],[Math.min(c.width,h),Math.min(c.height,d)],[0,Math.min(c.height,d)]].map(l=>c.toMap(U.createScreenPoint(l[0],l[1])));a.forEach(l=>{l.x=k<=l.x&&l.x<=p?l.x:Math.abs(k-l.x)>Math.abs(p-l.x)?p:k;l.y=m<=l.y&&l.y<=n?l.y:Math.abs(m-l.y)>Math.abs(n-l.y)?n:m});(a=await N.transformPoints(a,{feature:this.getSelectedFeature(),currentCoveragePolygon:this.getSelectedFeaturePolygon(),imageProperties:this._currentImage.rasterInfo,options:{signal:b}}))&&!b.aborted&&(b=[a.map(l=>[l.x,
l.y,1])],b[0].push(b[0][0]),b=new Q({hasZ:!0,rings:b,spatialReference:a[0].spatialReference}),this.updateCurrentCoveragePolygon(new C({attributes:{imageID:this.selectedFeature?.attributes.objectId},geometry:b,symbol:D.activePolygonSymbol,visible:this.currentCoverageVisible})))}}};f.__decorate([g.property()],e.prototype,"activeLayer",null);f.__decorate([g.property()],e.prototype,"layer",void 0);f.__decorate([g.property()],e.prototype,"shouldShowSelectedImage",void 0);f.__decorate([g.property({type:Number})],
e.prototype,"brightness",null);f.__decorate([g.property({type:Number})],e.prototype,"contrast",null);f.__decorate([g.property()],e.prototype,"coverageFrustums",void 0);f.__decorate([g.property()],e.prototype,"coveragePolygons",void 0);f.__decorate([g.property()],e.prototype,"currentCoverageVisible",void 0);f.__decorate([g.property({readOnly:!0})],e.prototype,"currentImageView",null);f.__decorate([g.property()],e.prototype,"disabled",void 0);f.__decorate([g.property()],e.prototype,"displayMessage",
void 0);f.__decorate([g.property()],e.prototype,"pointSources",void 0);f.__decorate([g.property()],e.prototype,"previousFeatureAngle",void 0);f.__decorate([g.property()],e.prototype,"selectedFeature",void 0);f.__decorate([g.property()],e.prototype,"selectedFeatureAngle",void 0);f.__decorate([g.property()],e.prototype,"selectedPoint",void 0);f.__decorate([g.property({readOnly:!0})],e.prototype,"featureCount",null);f.__decorate([g.property()],e.prototype,"features",void 0);f.__decorate([g.property({readOnly:!0})],
e.prototype,"imageGalleryEnabled",null);f.__decorate([g.property({readOnly:!0})],e.prototype,"imageLoaded",null);f.__decorate([g.property()],e.prototype,"isAdditionalCoverageVisible",void 0);f.__decorate([g.property()],e.prototype,"isAdditionalPointSourcesVisible",void 0);f.__decorate([g.property({type:Number})],e.prototype,"localPort",void 0);f.__decorate([g.property()],e.prototype,"mapImageConversionToolState",void 0);f.__decorate([g.property()],e.prototype,"navigatorSelectedFeature",void 0);f.__decorate([g.property({readOnly:!0})],
e.prototype,"updating",null);f.__decorate([g.property()],e.prototype,"referencePoint",null);f.__decorate([g.property({type:Number})],e.prototype,"sharpness",null);f.__decorate([g.property({readOnly:!0})],e.prototype,"sectorData",null);f.__decorate([g.property({readOnly:!0})],e.prototype,"state",null);f.__decorate([g.property({readOnly:!0})],e.prototype,"thumbnails",null);f.__decorate([g.property({value:null})],e.prototype,"view",null);f.__decorate([g.property()],e.prototype,"_additionalCoveragePolygons",
void 0);f.__decorate([g.property()],e.prototype,"_additionalFeatureGraphics",void 0);f.__decorate([g.property()],e.prototype,"_currentCoveragePolygon",void 0);f.__decorate([g.property()],e.prototype,"_currentImage",void 0);f.__decorate([g.property()],e.prototype,"_fetchFeaturesController",void 0);f.__decorate([g.property()],e.prototype,"_imageViewer",void 0);f.__decorate([g.property()],e.prototype,"_initialCurrentCoveragePolygon",void 0);f.__decorate([g.property()],e.prototype,"_initialCurrentCoverageUpdate",
void 0);f.__decorate([g.property()],e.prototype,"_overlays",void 0);f.__decorate([g.property()],e.prototype,"_plotPolygons",void 0);f.__decorate([g.property()],e.prototype,"_initialPreviousCoveragePolygon",void 0);f.__decorate([g.property()],e.prototype,"_referencePointOnGround",void 0);f.__decorate([g.property()],e.prototype,"_referencePointOnImage",void 0);f.__decorate([g.property()],e.prototype,"_selectedFeatureGraphic",void 0);f.__decorate([g.property()],e.prototype,"_sectorData",void 0);return e=
f.__decorate([V.subclass("esri.widgets.OrientedImageryViewer.OrientedImageryViewerViewModel")],e)});