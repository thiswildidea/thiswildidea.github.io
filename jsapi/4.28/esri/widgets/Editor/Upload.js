// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("require exports ../../chunks/tslib.es6 ../../core/Accessor ../../core/asyncUtils ../../core/Error ../../core/events ../../core/promiseUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/subclass ../../geometry/Point ../../layers/graphics/sources/support/uploadProgressWeights ../../layers/support/infoFor3D ../../support/progressUtils".split(" "),function(q,b,g,r,t,u,v,k,h,D,E,F,
w,x,y,z,p){async function A(c){const {resolve:d,promise:e}=k.createResolver(),a=document.createElement("input");a.type="file";a.multiple=!1;a.accept=[...z.getSupportedExtensions(c.infoFor3D),".zip"].join();a.style.display="none";document.body.appendChild(a);const f=v.on(a,"change",()=>d(a.files?Array.from(a.files):[]));l?l(a):a.click();return e.finally(()=>{f.remove();a.remove()})}b.Upload=class extends r{constructor(){super({});this.files=[];this.progress=0;this._layer=this._uploadTask=null}destroy(){this.cancel();
this.files=[];this._uploadTask=this._layer=null}get state(){const c=this._uploadTask;return c&&0!==this.files.length?c.finished?c.error?"error":"success":"pending":"default"}get result(){return this._uploadTask?.value??null}get error(){return this._uploadTask?.error??null}uploadTo(c){this.cancel();this.files=[];this._layer=c;this._uploadTask=t.createTask(async d=>{var e=await A(c);k.throwIfAborted(d);this.progress=0;this.files=e;var a=p.makeProgressManager(y.uploadProgressWeights.upload,m=>{this.progress=
m},"Upload.uploadTo");if(0===e.length)return null;var {default:f}=await new Promise((m,n)=>q(["../../geometry/Mesh"],B=>m(Object.freeze(Object.defineProperty({__proto__:null,default:B},Symbol.toStringTag,{value:"Module"}))),n));k.throwIfAborted(d);e=await f.extractAndFilterFiles(e,c);k.throwIfAborted(d);0<e.length&&(this.files=e);const C=new x({x:0,y:0,z:0,spatialReference:c.spatialReference});f=await f.createFromFiles(C,e,{layer:c,signal:d,onProgress:a.makeOnProgress("createFromFiles")});k.throwIfAborted(d);
if(!f)throw new u("editor:upload","could not upload or convert model");d=e.reduce((m,n)=>m+n.size,0);a=a.simulate("loadMesh",p.estimatedTransferTime(d));try{await f.load()}finally{a.remove()}return f})}retry(){this._layer&&this.uploadTo(this._layer)}cancel(){this._uploadTask?.abort()}};g.__decorate([h.property()],b.Upload.prototype,"files",void 0);g.__decorate([h.property()],b.Upload.prototype,"progress",void 0);g.__decorate([h.property()],b.Upload.prototype,"state",null);g.__decorate([h.property()],
b.Upload.prototype,"result",null);g.__decorate([h.property()],b.Upload.prototype,"error",null);g.__decorate([h.property()],b.Upload.prototype,"_uploadTask",void 0);g.__decorate([h.property()],b.Upload.prototype,"_layer",void 0);b.Upload=g.__decorate([w.subclass("esri.widgets.Editor.Upload")],b.Upload);let l=null;b.clearPromptForFilesStub=function(){l=null};b.stubFilePickerToSelect=function(c){l=d=>{Promise.resolve().then(()=>c).then(e=>{if(l){var a=new DataTransfer;e.forEach(f=>a.items.add(f));d.files=
a.files;d.dispatchEvent(new Event("change"))}})}};Object.defineProperty(b,Symbol.toStringTag,{value:"Module"})});