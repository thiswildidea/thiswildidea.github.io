// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/Logger ../../../core/promiseUtils ../../../layers/FeatureLayer ./featureUtils".split(" "),function(u,p,v,w,x,m){function y(b){return`<ul class="esri-widget__list">${b.map(a=>`<li>${"string"===typeof a?m.applyTextFormattingHTML(m.htmlEntities(a)):a}</li>`).join("")}</ul>`}function z(b){return`<table class="esri-widget__table">${b.keys().map(a=>{var c=b.field(a);c="string"===typeof c?m.applyTextFormattingHTML(m.htmlEntities(c)):c;return`<tr><th>${a}</th><td>${c}</td></tr>`}).join("")}</table>`}
function A({aggregatedFeatures:b,arcadeUtils:a,featureSetVars:c,context:e,viewInfo:k,map:l,graphic:f,interceptor:h}){c.forEach(d=>{d=d.toLowerCase();var g=k.sr;const n={map:l,spatialReference:g,interceptor:h};"$map"===d&&(e.vars[d]=a.convertMapToFeatureSetCollection(n));"$layer"===d&&(e.vars[d]=a.convertFeatureLayerToFeatureSet({layer:f.sourceLayer,spatialReference:g,interceptor:h}));"$datastore"===d&&(e.vars[d]=a.convertServiceUrlToWorkspace({url:f.sourceLayer.url,spatialReference:g,interceptor:h}));
if("$aggregatedfeatures"===d){g=f.layer;const {fields:B,objectIdField:C,geometryType:D,spatialReference:q,displayField:E}=g;g=new x({fields:B,objectIdField:C,geometryType:D,spatialReference:q,displayField:E,...("feature"===g.type?{templates:g.templates,typeIdField:g.typeIdField,types:g.types}:null),source:b});e.vars[d]=a.convertFeatureLayerToFeatureSet({layer:g,spatialReference:q,interceptor:h})}})}function r(){return new Promise((b,a)=>u(["../../../support/arcadeUtils"],b,a))}async function F({graphic:b,
view:a}){const {isAggregate:c,layer:e}=b;if(!c||!e||"2d"!==a?.type)return[];a=await a.whenLayerView(e);if(!("createQuery"in a&&"queryFeatures"in a))return[];const k=a.createQuery();b=b.getObjectId();k.aggregateIds=null!=b?[b]:[];({features:b}=await a.queryFeatures(k));return b}async function t({expressionInfo:b,arcadeUtils:a,interceptor:c,spatialReference:e,map:k,graphic:l,view:f}){if(!b?.expression)return null;const h=a.createSyntaxTree(b.expression),d=G.filter(n=>a.hasVariable(h,n)),[g]=await Promise.all([F({graphic:l,
view:f}),a.loadScriptDependencies(h,!0,d)]);e=a.getViewInfo({spatialReference:e});f=a.createExecContext(l,e,f?.timeZone);f.interceptor=c;f.useAsync=!0;A({aggregatedFeatures:g,arcadeUtils:a,featureSetVars:d,context:f,viewInfo:e,map:k,graphic:l,interceptor:c});c=a.createFunction(h,f);return a.executeAsyncFunction(c,f).catch(n=>H.error("arcade-execution-error",{error:n,graphic:l,expressionInfo:b}))}const G=["$datastore","$map","$layer","$aggregatedfeatures"],H=v.getLogger("esri.widgets.Feature.support.arcadeFeatureUtils");
p.createCompiledExpression=t;p.createCompiledExpressions=async function({expressionInfos:b,spatialReference:a,graphic:c,interceptor:e,map:k,view:l}){if(!b?.length)return{};const f=await r(),h={};for(const d of b)h[`expression/${d.name}`]=t({expressionInfo:d,arcadeUtils:f,interceptor:e,spatialReference:a,map:k,graphic:c,view:l});b=await w.eachAlways(h);a={};for(const d in b)c=b[d].value,c="string"===typeof c?m.applyTextFormattingHTML(m.htmlEntities(c)):Array.isArray(c)?y(c):"esri.arcade.Dictionary"===
c?.declaredClass?z(c):c,a[d]=c;return a};p.loadArcadeUtils=r;Object.defineProperty(p,Symbol.toStringTag,{value:"Module"})});