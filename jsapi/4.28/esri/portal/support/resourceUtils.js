// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define(["exports","../../request","../../core/Error","../../core/urlUtils"],function(e,q,n,h){function p(a){const b=a.lastIndexOf("/");return-1===b?[".",a]:[a.slice(0,b),a.slice(b+1)]}function m(a){{const f=h.getPathExtension(a);a=null==f?[a,""]:[a.slice(0,a.length-f.length-1),`.${f}`]}const [b,d]=a,[c,k]=p(b);return[c,k,d]}e.addOrUpdateResource=async function(a,b,d,c){if(!a.hasPath())throw new n(`portal-item-resource-${b}:invalid-path`,"Resource does not have a valid path");const k=a.portalItem;
await k.load(c);b=h.join(k.userItemUrl,"add"===b?"addResources":"updateResources");const [f,l]=p(a.path),g=new FormData;f&&"."!==f&&g.append("resourcesPrefix",f);null!=c&&c.compress&&g.append("compress","true");g.append("fileName",l);g.append("file",d,l);g.append("f","json");c?.access&&g.append("access",c.access);await k.portal.request(b,{method:"post",body:g,signal:c?.signal});return a};e.contentToBlob=async function(a){return"blob"===a.type?a.blob:"json"===a.type?new Blob([a.jsonString],{type:"application/json"}):
(await q(a.url,{responseType:"blob"})).data};e.fetchResources=async function(a,b={},d){await a.load(d);const c=h.join(a.itemUrl,"resources"),{start:k=1,num:f=10,sortOrder:l="asc",sortField:g="created"}=b;b=await a.portal.request(c,{query:{start:k,num:f,sortOrder:l,sortField:g,token:a.apiKey},signal:d?.signal});return{total:b.total,nextStart:b.nextStart,resources:b.resources.map(({created:r,size:t,resource:u})=>({created:new Date(r),size:t,resource:a.resourceFromPath(u)}))}};e.getSiblingOfSameType=
function(a,b){if(!a.hasPath())return null;const [d,,c]=m(a.path);return a.portalItem.resourceFromPath(h.join(d,b+c))};e.getSiblingOfSameTypeI=function(a,b){if(!a.hasPath())return null;const [d,,c]=m(a.path);return a.portalItem.resourceFromPath(h.join(d,b+c))};e.removeAllResources=async function(a,b){await a.load(b);const d=h.join(a.userItemUrl,"removeResources");return a.portal.request(d,{method:"post",query:{deleteAll:!0},signal:b?.signal})};e.removeResource=async function(a,b,d){if(!b.hasPath())throw new n("portal-item-resources-remove:invalid-path",
"Resource does not have a valid path");await a.load(d);const c=h.join(a.userItemUrl,"removeResources");await a.portal.request(c,{method:"post",query:{resource:b.path},signal:d?.signal});b.portalItem=null};e.splitPrefixFileNameAndExtension=m;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});