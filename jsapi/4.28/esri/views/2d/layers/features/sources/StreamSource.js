// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("exports ../../../../../core/handleUtils ../../../../../core/has ../../../../../chunks/rbush ../../../../../layers/graphics/featureConversionUtils ../../../../../layers/graphics/OptimizedGeometry ../../../../../layers/graphics/data/StreamFeatureManager ../../../../../layers/graphics/sources/connections/createConnection ./DataTileSource ./StreamConnectionState ../support/FeatureSetReaderJSON ../support/UpdateToken".split(" "),function(p,t,N,u,k,q,v,w,x,y,z,A){function B(a,b){const c=a.weakClone();
if(null!=a.geometry){const d=k.quantizeX(b,a.geometry.coords[0]);a=k.quantizeY(b,a.geometry.coords[1]);c.geometry=new q([],[d,a])}return c}function C(a){switch(a){case "esriGeometryPoint":return B;default:return(b,c)=>{const d=b.weakClone(),e=new q;b=k.quantizeOptimizedGeometry(e,b.geometry,!1,!1,a,c,!1,!1);d.geometry=b;return d}}}function D(a){switch(a){case "esriGeometryPoint":return b=>null!=b.geometry?{minX:b.geometry.coords[0],minY:b.geometry.coords[1],maxX:b.geometry.coords[0],maxY:b.geometry.coords[1]}:
{minX:Infinity,minY:Infinity,maxX:-Infinity,maxY:-Infinity};default:return b=>{let c=Infinity,d=Infinity,e=-Infinity,f=-Infinity;null!=b.geometry&&b.geometry.forEachVertex((l,m)=>{c=Math.min(c,l);d=Math.min(d,m);e=Math.max(e,l);f=Math.max(f,m)});return{minX:c,minY:d,maxX:e,maxY:f}}}}class E{constructor(a,b){this.onUpdate=a;this._geometryType=b;this._objectIdToFeature=new Map;this._index=null}get _features(){const a=[];this._objectIdToFeature.forEach(b=>a.push(b));return a}add(a){this._objectIdToFeature.set(a.objectId,
a);this._index=null}get(a){return this._objectIdToFeature.has(a)?this._objectIdToFeature.get(a):null}forEach(a){this._objectIdToFeature.forEach(a)}search(a){if(!this._index){var b=this._features;const c=u.rbush(9,D(this._geometryType));c.load(b);this._index=c}return this._index.search({minX:a.bounds[0],minY:a.bounds[1],maxX:a.bounds[2],maxY:a.bounds[3]})}clear(){this._index=null;this._objectIdToFeature.clear()}removeById(a){const b=this._objectIdToFeature.get(a);return b?(this._objectIdToFeature.delete(a),
this._index=null,b):null}update(a,b){this.onUpdate(a,b)}get size(){return this._objectIdToFeature.size}}class F extends x.DataTileSource{constructor(a){super(a);this.type="stream";this._level=this._updateIntervalId=0;this._isPaused=!1;this._updateInfo={websocket:0,client:0};this._inUpdate=!1;var {outSR:b}=a;const {geometryType:c,objectIdField:d,timeInfo:e,purgeOptions:f,source:l,spatialReference:m,serviceFilter:G,maxReconnectionAttempts:H,maxReconnectionInterval:I,updateInterval:J,customParameters:K,
enabledEventTypes:L}=a.serviceInfo,r=new E(this._onUpdate.bind(this),c),M=new v.StreamFeatureManager(r,d,e,f);b=w.createConnection(l,m,b,c,G,H,I,K??{});this._connectionState=new y.StreamConnectionState({connection:b});this._store=r;this._manager=M;this._connection=b;this._quantize=C(c);this._enabledEventTypes=new Set(L);this._handlesGroup=t.handlesGroup([this._connection.on("data-received",g=>this._onFeature(g)),this._connection.on("message-received",g=>this._onWebSocketMessage(g))]);this._initUpdateInterval=
()=>{let g=performance.now();this._updateIntervalId=setInterval(()=>{var n=performance.now(),h=n-g;2500<h&&(g=n,n=Math.round(this._updateInfo.client/(h/1E3)),h=Math.round(this._updateInfo.websocket/(h/1E3)),this._updateInfo.client=0,this._updateInfo.websocket=0,this.events.emit("updateRate",{client:n,websocket:h}));a.canAcceptRequest()&&!this._inUpdate&&this._manager.checkForUpdates()},J)};(this._isPaused=a.serviceInfo.isPaused)||this._initUpdateInterval()}destroy(){super.destroy();this._clearUpdateInterval();
this._connection.destroy();this._handlesGroup?.remove()}_fetchDataTile(){}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState.errorString}updateCustomParameters(a){this._connection.updateCustomParameters(a)}pauseStream(){this._isPaused||(this._isPaused=!0,this._clearUpdateInterval())}resumeStream(){this._isPaused&&(this._isPaused=!1,this._initUpdateInterval())}sendMessageToSocket(a){this._connection.sendMessageToSocket(a)}sendMessageToClient(a){this._isPaused&&
"type"in a&&"clear"===a.type?(this._store.clear(),this._subscriptions.forEach((b,c)=>{b.didSend&&b.tile.level===this._level&&this._onMessage({type:"append",id:c,addOrUpdate:null,clear:!0,end:!0})})):this._connection.sendMessageToClient(a)}enableEvent(a,b){b?this._enabledEventTypes.add(a):this._enabledEventTypes.delete(a)}subscribe(a,b){b=super.subscribe(a,b);this._level=a.level;const c=this._getTileFeatures(a);this._onMessage({type:"append",id:a.key.id,addOrUpdate:c,end:!0});b.didSend=!0;return b}unsubscribe(a){super.unsubscribe(a)}*readers(a){a=
this._subscriptions.get(a);({tile:a}=a);yield this._getTileFeatures(a)}createTileQuery(a){throw Error("Service does not support tile  queries");}async resend(){this._subscriptions.forEach(a=>{({tile:a}=a);a={type:"append",id:a.id,addOrUpdate:this._getTileFeatures(a),end:!0};this._onMessage(a)})}_getTileFeatures(a){const b=this._store.search(a).map(c=>this._quantize(c,a.transform));return z.FeatureSetReaderJSON.fromOptimizedFeatures(b,this._arcadeLayerSchema,a.transform)}_onWebSocketMessage(a){this._enabledEventTypes.has("message-received")&&
this.events.emit("message-received",a);if("type"in a)switch(a.type){case "delete":if(a.objectIds)for(const b of a.objectIds)this._manager.removeById(b);if(a.trackIds)for(const b of a.trackIds)this._manager.removeByTrackId(b);break;case "clear":this._store.forEach(b=>this._manager.removeById(b.objectId))}}_onFeature(a){this._updateInfo.websocket++;try{this._enabledEventTypes.has("data-received")&&this.events.emit("data-received",a);const b=k.convertFromFeature(a,this._serviceInfo.geometryType,!1,!1,
this._serviceInfo.objectIdField);this._manager.add(b)}catch(b){}}_clearUpdateInterval(){clearInterval(this._updateIntervalId);this._updateIntervalId=0}async _onUpdate(a,b){this._inUpdate=!0;try{null!=a&&(this._updateInfo.client+=a.length);this._subscriptions.forEach((d,e)=>{d.didSend&&d.tile.level===this._level&&this._onMessage({type:"append",id:e,addOrUpdate:null,clear:!0,end:!1})});const c=[];this._subscriptions.forEach((d,e)=>{if(d.didSend&&d.tile.level===this._level){var f=this._getTileFeatures(d.tile);
e={type:"append",id:e,addOrUpdate:f,remove:[],end:!1,status:A.UpdateToken.empty()};d.requests.stream.enqueue(e);c.push(this._onMessage(e))}});await Promise.all(c);this._subscriptions.forEach((d,e)=>{d.didSend&&d.tile.level===this._level&&this._onMessage({type:"append",id:e,addOrUpdate:null,end:!0})})}catch{}this._inUpdate=!1}}p.StreamSource=F;Object.defineProperty(p,Symbol.toStringTag,{value:"Module"})});