// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("exports ../../../../../geometry ../../../../../core/Evented ../../../../../core/has ../../../../../core/Logger ../../../../../core/accessorSupport/diffUtils ../../../../../geohash/GeohashTree ../../../../../geohash/geohashUtils ../../../../../geometry/support/aaBoundingBox ../../../../../geometry/support/Ellipsoid ../../../../../geometry/support/spatialReferenceUtils ../../../../../layers/graphics/featureConversionUtils ../../../../../layers/graphics/OptimizedFeature ../../../../../layers/graphics/OptimizedGeometry ../../../../../layers/graphics/data/projectionSupport ../../../../../layers/support/FieldsIndex ../../../engine/webgl/DisplayId ../FeatureStore2D ../Store2D ./FeatureSetReaderJSON ../../../../../geometry/SpatialReference ../../../../../geometry/Polygon ../../../../../geometry/Extent".split(" "),
function(t,M,x,u,y,k,z,l,A,v,B,m,C,D,n,E,F,G,H,w,p,I,J){const q=y.getLogger("esri.view.2d.layers.features.support.BinStore"),K=A.create();class L extends H.Store2D{constructor(a,b,c,d){super(a,c);this.type="bin";this.events=new x;this.objectIdField="aggregateId";this.featureAdapter=G.featureAdapter;this._geohashLevel=5;this._geohashBuf=[];this._serviceInfo=d;this.geometryInfo=a.geometryInfo;this._spatialReference=b;this._projectionSupportCheck=n.checkProjectionSupport(b,p.WGS84);this._bitsets.geohash=
c.getBitset(c.createBitset());this._bitsets.inserted=c.getBitset(c.createBitset())}destroy(){this._tree&&this._tree.destroy()}get featureSpatialReference(){return this._spatialReference}get fields(){return this._fields}async updateSchema(a,b){const c=this._schema;try{await super.updateSchema(a,b),await this._projectionSupportCheck}catch(e){}this._fields=this._schema.params.fields;this._fieldsIndex=new E(this._fields);const d=k.diff(c,b);if(b&&(null!=d||a.source||a.storage.filters)){if(k.hasDiff(d,
"params.fields")||k.hasDiff(d,"params")||!this._tree||a.source)this._tree&&this._tree.destroy(),this._tree=new z.GeohashTree(this._statisticFields,this._serviceInfo),this._tree.onRelease=e=>e.displayId&&this._storage.releaseDisplayId(e.displayId),this._geohashLevel=this._schema.params.fixedBinLevel,this._rebuildTree(),u("esri-2d-update-debug")&&q.info("Aggregate mesh needs update due to tree changing");u("esri-2d-update-debug")&&q.info("Aggregate mesh needs update due to tree changing");a.targets[b.name]=
!0;a.mesh=!1}else c&&(a.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(a,b){this._bitsets.inserted.forEachSet(c=>{a.has(c)||(c=b.lookupByDisplayIdUnsafe(c),this._remove(c))})}sweepAggregates(a,b,c){}onTileData(a,b,c,d,e,g=!0){if(!this._schema||null==b.addOrUpdate)return b;this.events.emit("changed");var f=this._getTransforms(a,this._spatialReference);const h=b.addOrUpdate.getCursor();for(;h.next();)this._update(h,d);if(b.status.mesh||!g)return b;d=[];this._getBinsForTile(d,a,f,c);b.addOrUpdate=
w.FeatureSetReaderJSON.fromOptimizedFeatures(d,{fields:this.fields,fieldsIndex:this._fieldsIndex,geometryType:"esriGeometryPolygon",objectIdField:this.objectIdField});b.addOrUpdate.attachStorage(c);b.end=!0;b.isRepush||(b.clear=!0);for(f=b.addOrUpdate.getCursor();f.next();)d=f.getDisplayId(),this._bitsets.computed.unset(d),this.setComputedAttributes(c,f,d,a.scale,e);return b}forEachBin(a){this._tree.forEach(a)}forEach(a){this._tree.forEach(b=>{b.depth===this._geohashLevel&&(b=this._toFeatureJSON(b),
b=w.FeatureSetReaderJSON.fromFeatures([b],{objectIdField:this.objectIdField,globalIdField:null,geometryType:this.geometryInfo.geometryType,fields:this.fields,fieldsIndex:this._fieldsIndex}).getCursor(),b.next(),a(b))})}forEachInBounds(a,b){}forEachBounds(a,b){const {hasM:c,hasZ:d}=this.geometryInfo;for(const e of a)a=m.getBoundsOptimizedGeometry(K,e.readGeometry(),d,c),null!=a&&b(a)}onTileUpdate(a){}getAggregate(a){const b=F.createDisplayId(a,!0);return(a=this._tree.findIf(c=>c.displayId===b))?this._toFeatureJSON(a):
null}getAggregates(){return this._tree.findAllIf(a=>a.depth===this._geohashLevel).map(this._toFeatureJSON.bind(this))}getDisplayId(a){return this._tree.findIf(b=>b.id===a)?.displayId}getFeatureDisplayIdsForAggregate(a){const b=this._tree.findIf(c=>c.id===a);return null!=b?Array.from(b.displayIds):[]}getDisplayIdForReferenceId(a){return this._tree.findIf(b=>1===b.displayIds.size&&b.displayIds.has(a))?.displayId}_toFeatureJSON(a){const b=this._spatialReference;return{displayId:a.displayId,attributes:a.getAttributes(),
geometry:m.convertToGeometry(a.getGeometry(b),"esriGeometryPolygon",!1,!1),centroid:null}}_rebuildTree(){this._bitsets.computed.clear();this._bitsets.inserted.clear();this._tree&&this._tree.clear()}_remove(a){const b=a.getDisplayId(),c=a.getXHydrated(),d=a.getYHydrated(),e=this._geohashBuf[2*b],g=this._geohashBuf[2*b+1];this._bitsets.inserted.has(b)&&(this._bitsets.inserted.unset(b),this._tree.removeCursor(a,c,d,e,g,this._geohashLevel))}_update(a,b){const c=a.getDisplayId(),d=this._bitsets.inserted;
b=b.isVisible(c);var e=d.has(c);b!==e&&(b?(b=a.getXHydrated(),e=a.getYHydrated(),this._setGeohash(c,b,e)&&(this._tree.insertCursor(a,c,b,e,this._geohashBuf[2*c],this._geohashBuf[2*c+1],this._geohashLevel),d.set(c))):this._remove(a))}_setGeohash(a,b,c){if(this._bitsets.geohash.has(a))return!0;const d=this._geohashBuf;if(this._spatialReference.isWebMercator)b=b/v.earth.radius*57.29577951308232,l.setGeohashBuf(d,a,57.29577951308232*(Math.PI/2-2*Math.atan(Math.exp(-c/v.earth.radius))),b-360*Math.floor((b+
180)/360),12);else{c=n.project({x:b,y:c},this._spatialReference,p.WGS84);if(!c)return!1;l.setGeohashBuf(d,a,c.y,c.x,12)}this._bitsets.geohash.set(a);return!0}_getBinsForTile(a,b,c,d){try{var e=this._getGeohashBounds(b);const g=this._tree.getBins(e);for(const f of g){f.displayId||(f.displayId=d.createDisplayId(!0));e=null;const h=f.getGeometry(this._spatialReference,c.tile);h||(e=f.getGeometryCentroid(this._spatialReference,c.tile));const r=new C.OptimizedFeature(h,f.getAttributes(),e);r.objectId=
f.id;r.displayId=f.displayId;a.push(r)}}catch(g){q.error("Unable to get bins for tile",b.key.id)}}_getGeohash(a,b,c){const d={geohashX:0,geohashY:0};l.setGeohashXY(d,b,a,c);return d}_getGeohashBounds(a){const b=this._getGeohashLevel(a.key.level),c=[a.extent.xmin,a.extent.ymin,a.extent.xmax,a.extent.ymax];var d=I.fromExtent(J.fromBounds(c,this._spatialReference));a=n.project(d,this._spatialReference,p.WGS84,{densificationStep:64*a.resolution});a=m.convertFromPolygon(new D,a,!1,!1);var e=a.coords.filter((f,
h)=>!(h%2)),g=a.coords.filter((f,h)=>h%2);a=Math.min(...e);d=Math.min(...g);e=Math.max(...e);g=Math.max(...g);a=this._getGeohash(a,d,b);d=this._getGeohash(e,g,b);return{bounds:c,geohashBounds:{xLL:a.geohashX,yLL:a.geohashY,xTR:d.geohashX,yTR:d.geohashY},level:b}}_getGeohashLevel(a){return this._schema.params.fixedBinLevel}_getTransforms(a,b){const c={originPosition:"upperLeft",scale:[a.resolution,a.resolution],translate:[a.bounds[0],a.bounds[3]]};b=B.getInfo(b);if(!b)return{tile:c,left:null,right:null};
const [d,e]=b.valid;return{tile:c,left:{...c,translate:[e,a.bounds[3]]},right:{...c,translate:[d-e+a.bounds[0],a.bounds[3]]}}}}t.BinStore=L;Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});