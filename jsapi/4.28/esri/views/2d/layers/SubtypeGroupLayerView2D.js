// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../core/has ../../../core/reactiveUtils ../../../core/Logger ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/Error ../../../core/accessorSupport/decorators/subclass ../../../layers/support/FeatureFilter ./FeatureLayerView2D".split(" "),function(l,m,f,e,t,u,v,n,p,q){e=class extends q{initialize(){this.addHandles([f.watch(()=>this.view.scale,()=>this._update(),f.initial)],"constructor")}isUpdating(){const a=this.layer.sublayers.some(r=>
null!=r.renderer),d=this._commandsQueue.updating,c=null!=this._updatingRequiredFieldsPromise,b=!this._proxy||!this._proxy.isReady,g=this._pipelineIsUpdating,h=null==this.tileRenderer||this.tileRenderer?.updating,k=a&&(d||c||b||g||h);m("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${k}\n  -> hasRenderer ${a}\n  -> hasPendingCommand ${d}\n  -> updatingRequiredFields ${c}\n  -> updatingProxy ${b}\n  -> updatingPipeline ${g}\n  -> updatingTileRenderer ${h}\n`);return k}_injectOverrides(a){a=super._injectOverrides(a);
const d=this.view.scale;var c=this.layer.sublayers.filter(b=>!b.visible||0!==b.minScale&&d>b.minScale||0!==b.maxScale&&d<b.maxScale).map(b=>b.subtypeCode);if(!c.length)return a;a=null!=a?a:(new p).toJSON();c=`NOT ${this.layer.subtypeField} IN (${c.join(",")})`;a.where=a.where?`(${a.where}) AND (${c})`:c;return a}_setLayersForFeature(a){var d=this.layer.fieldsIndex.get(this.layer.subtypeField);const c=a.attributes[d.name];d=this.layer.sublayers.find(b=>b.subtypeCode===c);a.layer=a.sourceLayer=d}_createSchemaConfig(){const a=
{subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(b=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:b.labelingInfo,labelsVisible:b.labelsVisible,renderer:b.renderer,subtypeCode:b.subtypeCode,orderBy:null}))},d=this.layer.sublayers.map(b=>b.subtypeCode).join(",");let c=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";c+=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${d})`:"1\x3d2";return{...super._createSchemaConfig(),
...a,definitionExpression:c}}};return e=l.__decorate([n.subclass("esri.views.2d.layers.SubtypeGroupLayerView2D")],e)});