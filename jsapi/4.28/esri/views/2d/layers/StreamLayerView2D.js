// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../core/Error ../../../core/handleUtils ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../../rest/support/FeatureSet ./FeatureLayerView2D ./support/util ../../layers/StreamLayerView".split(" "),function(f,m,n,k,h,d,x,y,q,r,t,u,v){function p(a,c){if(null==a&&null==c)return null;const b={};null!=
c&&(b.geometry=c.toJSON());null!=a&&(b.where=a);return b}d=class extends v(t){constructor(){super(...arguments);this.pipelineConnectionStatus="disconnected";this.pipelineErrorString=null;this._enabledEventTypes=new Set}initialize(){this.addHandles([k.watch(()=>this.layer.customParameters,a=>this._proxy.updateCustomParameters(a)),this.layer.on("send-message-to-socket",a=>this._proxy.sendMessageToSocket(a)),this.layer.on("send-message-to-client",a=>this._proxy.sendMessageToClient(a)),k.watch(()=>this.layer.purgeOptions,
()=>this._update()),k.watch(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor")}get connectionError(){return this.pipelineErrorString?new m("stream-controller",this.pipelineErrorString):null}on(a,c){if(Array.isArray(a))return n.handlesGroup(a.map(l=>this.on(l,c)));const b=["data-received","message-received"].includes(a);b&&(this._enabledEventTypes.add(a),this._proxy.enableEvent(a,!0));const e=super.on(a,c),g=this;return n.makeHandle(()=>{e.remove();b&&(g._proxy.closed||g.hasEventListener(a)||
g._proxy.enableEvent(a,!1))})}queryLatestObservations(a,c){if(!(this.layer.timeInfo?.endField||this.layer.timeInfo?.startField||this.layer.timeInfo?.trackIdField))throw new m("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(a),c).then(b=>{b=r.fromJSON(b);b.features.forEach(e=>{e.layer=this.layer;e.sourceLayer=this.layer});return b})}detach(){super.detach();this.pipelineConnectionStatus=
"disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._proxy?.pauseStream()}_doResume(){this._proxy?.resumeStream()}_createClientOptions(){return{...super._createClientOptions(),setProperty:a=>{this.set(a.propertyName,a.value)}}}_createTileRendererHash(a){var c=JSON.stringify(this.layer.purgeOptions);const b=JSON.stringify(p(this.layer.definitionExpression,this.layer.geometryDefinition));c=`${c}.${b})`;return super._createTileRendererHash(a)+c}async _createServiceOptions(){const a=
this.layer,{objectIdField:c}=a,b=a.fields.map(w=>w.toJSON()),e=u.toJSONGeometryType(a.geometryType),g=a.timeInfo?.toJSON()||null,l=a.spatialReference?a.spatialReference.toJSON():null;return{type:"stream",isPaused:this._isUserPaused,fields:b,fieldsIndex:this.layer.fieldsIndex.toJSON(),geometryType:e,objectIdField:c,timeInfo:g,source:this.layer.parsedUrl,serviceFilter:p(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(this._enabledEventTypes.values()),
spatialReference:l,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:a.customParameters}}};f.__decorate([h.property()],d.prototype,"pipelineConnectionStatus",void 0);f.__decorate([h.property()],d.prototype,"pipelineErrorString",void 0);f.__decorate([h.property({readOnly:!0})],d.prototype,"connectionError",null);f.__decorate([h.property({readOnly:!0})],d.prototype,"_streamConnectionStatus",
null);return d=f.__decorate([q.subclass("esri.views.2d.layers.StreamLayerView2D")],d)});