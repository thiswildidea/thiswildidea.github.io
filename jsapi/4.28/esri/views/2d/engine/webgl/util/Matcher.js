// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("require exports ../../../../../core/arrayUtils ../../../../../core/Error ../../../../../core/Logger ../../../../../core/LRUCache ../../../../../support/arcadeOnDemand ../../../arcade/callExpressionWithFeature ../../../layers/support/cimSymbolUtils".split(" "),function(z,p,B,C,D,E,F,G,l){async function A(a,b,c,d){switch(a.type){case "simple":case "heatmap":return n.fromBasicRenderer(a,b,c,d);case "map":return t.fromUVRenderer(a,b,c,d);case "interval":return u.fromCBRenderer(a,b,c,d);case "dictionary":return v.fromDictionaryRenderer(a,
b,c,d);case "pie-chart":return r.fromPieChartRenderer(a,b,c,d);case "subtype":return r.fromSubtypes(a,b,c,d)}}async function H(a,b){const c=a||1;if("number"===typeof c)return(e,f,g)=>c;const d=await F.createRendererExpression(c,b.spatialReference,b.fields);return(e,f,g)=>G(d,e,{$view:g},b.geometryType,f)||1}async function I(){w||(w=new Promise((a,b)=>z(["../../../layers/features/createSymbolSchema"],a,b)));return w}const x=D.getLogger("esri/views/2d/engine/webgl/util/Matcher");class n{constructor(){this.type=
"feature";this._defaultResult=null}static async fromBasicRenderer(a,b,c,d){const e=new n;a.symbol&&(a=await l.expandSymbol(a.symbol,c,d),b=b.createTemplateGroup(a,null),e.setDefault(b));return e}static async fromPieChartRenderer(a,b,c,d){const e=new n;if(a.markerSymbol){const f=await l.expandSymbol(a.markerSymbol,c,d);let g;a.fillSymbol&&(g=await l.expandSymbol(a.fillSymbol,c,d));a=b.createTemplateGroup(f,g);e.setDefault(a)}return e}size(){return 1}getDefault(){return this._defaultResult}setDefault(a){this._defaultResult=
a}match(a,b,c,d,e){return this.getDefault()}async analyze(a,b,c,d,e,f){return null}}class r extends n{constructor(a,b){super();this._subMatchers=a;this._subtypeField=b}static async fromSubtypes(a,b,c,d){const e=new Map,f=[];for(const g in a.renderers){const h=parseInt(g,10),k=A(a.renderers[g],b,c,d).then(m=>e.set(h,m));f.push(k)}await Promise.all(f);return new r(e,a.subtypeField)}match(a,b,c,d,e){var f=b.readAttribute(this._subtypeField);return(f=this._subMatchers.get(f))?f.match(a,b,c,d,e):null}}
class u extends n{constructor(a,b,c,d){super();this.type="interval";this._intervals=[];this._isMaxInclusive=b;this._fieldIndex=d;this._field=a;this._normalizationInfo=c}static async fromCBRenderer(a,b,c,d){const {isMaxInclusive:e,normalizationField:f,normalizationTotal:g,normalizationType:h}=a,k=new u(a.field,e,{normalizationField:f,normalizationTotal:g,normalizationType:h},a.fieldIndex),m=await l.expandSymbol(a.backgroundFillSymbol,c,d);await Promise.all(a.intervals.map(async q=>{var y=await l.expandSymbol(q.symbol,
c,d);y=b.createTemplateGroup(y,m);k.add({min:q.min,max:q.max},y)}));if(a=await l.expandSymbol(a.defaultSymbol,c,d))a=b.createTemplateGroup(a,m),k.setDefault(a);return k}add(a,b){this._intervals.push({interval:a,result:b});this._intervals.sort((c,d)=>c.interval.min-d.interval.min)}size(){return super.size()+this._intervals.length}match(a,b,c,d,e){if(null==this._fieldIndex&&!this._field)return this.getDefault();a=null!=this._fieldIndex?b.getComputedNumericAtIndex(this._fieldIndex):this._getValueFromField(b);
if(null===a||void 0===a||isNaN(a)||Infinity===a||-Infinity===a)return this.getDefault();for(b=0;b<this._intervals.length;b++){const {interval:f,result:g}=this._intervals[b];c=this._isMaxInclusive?a<=f.max:a<f.max;if(a>=f.min&&c)return g}return this.getDefault()}_needsNormalization(){const a=this._normalizationInfo;return a&&(a.normalizationField||a.normalizationTotal||a.normalizationType)}_getValueFromField(a){const b=a.readAttribute(this._field);if(!this._needsNormalization()||null==b)return b;const {normalizationField:c,
normalizationTotal:d,normalizationType:e}=this._normalizationInfo;a=a.readAttribute(c)??1;if(e)switch(e){case "esriNormalizeByField":return(a||void 0)&&b/a;case "esriNormalizeByLog":return Math.log(b)*Math.LOG10E;case "esriNormalizeByPercentOfTotal":return b/d*100;default:x.error(`Found unknown normalization type: ${e}`)}else x.error("Normalization is required, but no type was set!")}}class t extends n{constructor(a,b,c){super();this.type="map";this._nullResult=null;this._resultsMap=new Map;this._fields=
[];this._fieldsIndex=c;this._fields=a;this._seperator=b||""}static async fromUVRenderer(a,b,c,d){const e=a.fieldDelimiter,f=[a.field];a.field2&&f.push(a.field2);a.field3&&f.push(a.field3);const g=await l.expandSymbol(a.backgroundFillSymbol,c,d),h=new t(f,e,a.fieldIndex);await Promise.all(a.map.map(async(k,m)=>{const q=await l.expandSymbol(k.symbol,c,d);m=b.createTemplateGroup(q,g,m+1);"\x3cNull\x3e"===k.value?h.setNullResult(m):h.add(k.value,m)}));if(a=await l.expandSymbol(a.defaultSymbol,c,d))a=
b.createTemplateGroup(a,g,Number.MAX_SAFE_INTEGER),h.setDefault(a);return h}setNullResult(a){this._nullResult=a}add(a,b){this._resultsMap.set(a.toString(),b)}size(){return super.size()+this._resultsMap.size}match(a,b,c,d,e){if(null==this._fieldsIndex&&!this._fields)return this.getDefault();a=null!=this._fieldsIndex?b.getComputedStringAtIndex(this._fieldsIndex):this._getValueFromFields(b);if(null!==this._nullResult&&(null==a||""===a||"\x3cNull\x3e"===a))return this._nullResult;if(null==a)return this.getDefault();
a=a.toString();return this._resultsMap.has(a)?this._resultsMap.get(a):this.getDefault()}_getValueFromFields(a){const b=[];for(const c of this._fields){const d=a.readAttribute(c);null==d||""===d?b.push("\x3cNull\x3e"):b.push(d)}return b.join(this._seperator)}}let w;class v extends n{constructor(a,b,c,d,e,f){super();this.type="dictionary";this._groupIdCache=new E.LRUCache(100);this._loader=a;this._fieldMap=a.fieldMap;this._symbolFields=a.getSymbolFields();this._templates=b;this._info=c;this._scaleFn=
d;this._schemaUtilsModule=e;this._symbolOptions=f}static async fromDictionaryRenderer(a,b,c,d){const [{DictionaryLoader:e},f]=await Promise.all([new Promise((h,k)=>z(["../../../../../renderers/support/DictionaryLoader"],h,k)),I()]);d=new e(a.url,a.config,a.fieldMap);await d.fetchResources({spatialReference:c.spatialReference,fields:c.fields});const g=await H(a.scaleExpression,c);return new v(d,b,c,g,f,a.symbolOptions)}async _analyzeFeature(a,b,c,d,e){a=a.readLegacyFeature();const f=this._scaleFn(a,
c,d);c=this._attributeHash(a)+"-"+f;const g=this._groupIdCache.get(c);if(g)return g;d=await this._loader.getSymbolAsync(a,{...d,spatialReference:this._info.spatialReference,abortOptions:e,fields:this._info.fields});d=this._schemaUtilsModule.createSymbolSchema(d,this._symbolOptions);b=l.expandSymbol(d,this._info,b,e).then(h=>{if("expanded-cim"!==h?.type)return x.error(new C("mapview-bad-type",`Found unexpected type ${h?.type} in dictionary response`)),null;h.hash+="-"+f;for(const k of h.layers)k.scaleFactor=
f,k.templateHash+="-"+f;return this._templates.createTemplateGroup(h,null)});this._groupIdCache.put(c,b,1);return b}async analyze(a,b,c,d,e,f){a=b.getCursor();for(b=[];a.next();)b.push(this._analyzeFeature(a,c,d,e,f));return Promise.all(b).then(g=>g.filter(B.isSome))}match(a,b,c,d,e){return null}_attributeHash(a){let b="";for(const c of this._symbolFields){const d=this._fieldMap?.[c];d&&(b+=a.attributes[d]+"-")}return b}}p.DictionaryMatcher=v;p.FeatureMatcher=n;p.IntervalMatcher=u;p.MapMatcher=t;
p.SubtypeMatcher=r;p.createMatcher=A;Object.defineProperty(p,Symbol.toStringTag,{value:"Module"})});