// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("../../../../config ../../../../request ../../../../core/BidiText ../../../../core/Error ../../../../core/fontUtils ../../../../core/has ../../../../core/Logger ../../../../core/mathUtils ../../../../core/promiseUtils ../../../../core/screenUtils ../../../../core/urlUtils ../../../../chunks/vec2 ../../../../chunks/vec2f32 ../../../../symbols/cim/Rasterizer ./definitions ./enums ./GlyphMosaic ./GlyphSource ./SDFConverter ./SpriteMosaic ./Utils ./animatedFormats/AnimatableTextureResource ./animatedFormats/utils ./util/Result ./util/symbolUtils ../../../support/QueueProcessor ../../../webgl/enums".split(" "),
function(E,F,G,m,H,I,J,x,u,K,L,y,M,N,k,q,O,P,Q,R,g,S,T,U,V,W,z){function r(a){a=Math.round(K.pt2px(a)*window.devicePixelRatio);return a*(128<=a?2:4)}function A(a,c){if(!a||!c)return{width:0,height:0};const b=a/c;if(1<b)return a=r(a),{width:a,height:a/b};a=r(c);return{width:a*b,height:a}}const B=M.create(),t=J.getLogger("esri.views.2d.engine.webgl.TextureManager");class C{static fromMosaic(a,c){return new C(a,c.page,c.sdf)}constructor(a,c,b){this.mosaicType=a;this.page=c;this.sdf=b}}class X{constructor(a,
c,b){this._requestRender=a;this.resourceManager=c;this._allowNonPowerOfTwo=b;this._invalidFontsMap=new Map;this._sdfConverter=new Q(k.sdfTextureSize);this._bindingInfos=[];this._hashToBindingIndex=new Map;this._ongoingRasterizations=new Map;this._imageRequestQueue=new W.QueueProcessor({concurrency:10,process:async(d,e)=>{u.throwIfAborted(e);try{return await F(d,{responseType:"image",signal:e})}catch(h){if(!u.isAbortError(h))throw new m("mapview-invalid-resource",`Could not fetch requested resource at ${d}`,
h);throw h;}}});this._spriteMosaic=new R(2048,2048,500);this._glyphSource=new P(`${E.fontsUrl}/{fontstack}/{range}.pbf`);this._glyphMosaic=new O(1024,1024,this._glyphSource);this._rasterizer=new N(c)}dispose(){this._spriteMosaic.dispose();this._glyphMosaic.dispose();this._rasterizer.dispose();this._sdfConverter.dispose();this._sdfConverter=this._glyphMosaic=this._spriteMosaic=null;this._hashToBindingIndex.clear();this._bindingInfos=this._hashToBindingIndex=null;this._ongoingRasterizations.clear();
this._ongoingRasterizations=null;this._imageRequestQueue.clear();this._imageRequestQueue=null}get sprites(){return this._spriteMosaic}get glyphs(){return this._glyphMosaic}async rasterizeItem(a,c,b,d){if(null==a)return t.error(new m("mapview-null-resource","Unable to rasterize null resource",void 0)),null;switch(a.type){case "text":case "esriTS":return a=await this._rasterizeText(a,b,d),a.forEach(e=>this._setTextureBinding(q.MosaicType.GLYPH,e)),{glyphMosaicItems:a};default:if(g.is3D(a))return t.error(new m("mapview-invalid-type",
`MapView does not support symbol type: ${a.type}`,a)),null;a=await this._rasterizeSpriteSymbol(a,c,d);U.ok(a)&&a&&this._setTextureBinding(q.MosaicType.SPRITE,a);return{spriteMosaicItem:a}}}bindTextures(a,c,b,d=!1){if(0!==b.textureBinding){var e=this._bindingInfos[b.textureBinding-1];b=e.page;d=d?z.TextureSamplingMode.LINEAR_MIPMAP_LINEAR:z.TextureSamplingMode.LINEAR;switch(e.mosaicType){case q.MosaicType.SPRITE:e=this.sprites.getWidth(b);const h=this.sprites.getHeight(b);e=y.set(B,e,h);this._spriteMosaic.bind(a,
d,b,k.textureBindingSpriteAtlas);c.setUniform1i("u_texture",k.textureBindingSpriteAtlas);c.setUniform2fv("u_mosaicSize",e);break;case q.MosaicType.GLYPH:e=y.set(B,this.glyphs.width,this.glyphs.height);this._glyphMosaic.bind(a,d,b,k.textureBindingGlyphAtlas);c.setUniform1i("u_texture",k.textureBindingGlyphAtlas);c.setUniform2fv("u_mosaicSize",e);break;default:t.error("mapview-texture-manager",`Cannot handle unknown type ${e.mosaicType}`)}}}_hashMosaic(a,c){return 1|a<<1|(c.sdf?1:0)<<2|c.page<<3}_setTextureBinding(a,
c){const b=this._hashMosaic(a,c);this._hashToBindingIndex.has(b)||(a=C.fromMosaic(a,c),this._hashToBindingIndex.set(b,this._bindingInfos.length+1),this._bindingInfos.push(a));c.textureBinding=this._hashToBindingIndex.get(b)}async _rasterizeText(a,c,b){let d,e;d="cim"in a?a.fontName:H.getFullyQualifiedFontName(a.font);e=a.text;a=this._invalidFontsMap.has(d);c=c||g.charCodes(G.bidiText(e)[0]);try{return a=a?"arial-unicode-ms-regular":d,I("esri-2d-stabilize-glyphs")&&await this._glyphMosaic.preloadASCIIGlyphCache(a),
await this._glyphMosaic.getGlyphItems(a,c,b)}catch(h){return t.error(new m("mapview-invalid-resource",`Couldn't find font ${d}. Falling back to Arial Unicode MS Regular`,void 0)),this._invalidFontsMap.set(d,!0),this._glyphMosaic.getGlyphItems("arial-unicode-ms-regular",c,b)}}async _rasterizeSpriteSymbol(a,c,b){if(!g.isSimple(a)){c=V.keyFromSymbol(a);if(this._spriteMosaic.has(c))return this._spriteMosaic.getSpriteItem(c);if(g.isSVGResource(a)||g.isImageResource(a)&&!g.isMarkerPlacementInsidePolygon(a))return this._handleAsyncResource(c,
a,b);if(b=this._rasterizer.rasterizeJSONResource(a,k.patternFillRasterizationScale)){const {size:d,image:e,sdf:h,simplePattern:n,rasterizationScale:f}=b;return this._addItemToMosaic(c,d,{type:"static",data:e},g.shouldRepeat(a),h,n,f)}return new m("TextureManager","unrecognized or null rasterized image")}}async _handleAsyncResource(a,c,b){if(this._ongoingRasterizations.has(a))return this._ongoingRasterizations.get(a);c=g.isSVGResource(c)?this._handleSVG(c,a,b):this._handleImage(c,a,b);this._ongoingRasterizations.set(a,
c);try{await c,this._ongoingRasterizations.delete(a)}catch{this._ongoingRasterizations.delete(a)}return c}async _handleSVG(a,c,b){const d=[k.sdfTextureSize,k.sdfTextureSize];a=await this._sdfConverter.draw(a.path,"cim"in a?a.cim.asFill:!0,b);return this._addItemToMosaic(c,d,{type:"static",data:new Uint32Array(a.buffer)},!1,!0,!0)}async _handleGIFOrPNG(a,c,b){var d=g.getUrl(a);await this.resourceManager.fetchResource(d,b);b=this.resourceManager.getResource(d);if(null==b)return new m("mapview-invalid-resource",
`Could not fetch requested resource at ${d}.`);d=b.width;var e=b.height;if(b instanceof HTMLImageElement){if("esriPMS"===a.type){d=Math;e=d.round;var h=g.getPMSResourceSize(a);h=Math.min(b.width,r(h));d=e.call(d,h);e=Math.round(d/b.width*b.height)}const {size:n,sdf:f,image:p}=this._rasterizer.rasterizeImageResource(d,e,b,"cim"in a?a.cim.colorSubstitutions:void 0);return this._addItemToMosaic(c,n,{type:"static",data:p},g.shouldRepeat(a),f,!1)}this._allowNonPowerOfTwo||(d=x.nextPowerOfTwo(b.width+2*
k.spritePadding)-2*k.spritePadding,e=x.nextPowerOfTwo(b.height+2*k.spritePadding)-2*k.spritePadding);if(d!==b.width||e!==b.height)b=T.resize(b,d,e);b=new S.AnimatableTextureResource(b,this._requestRender,a.animatedSymbolProperties||{},a.objectId);return this._addItemToMosaic(c,[b.width,b.height],{type:"animated",data:b},g.shouldRepeat(a),!1,!1)}async _handleImage(a,c,b){if(g.isGIF(a)||g.isPNG(a))return this._handleGIFOrPNG(a,c,b);const d=g.getUrl(a);try{let f;const p=this.resourceManager.getResource(d);
if(null!=p&&p instanceof HTMLImageElement)f=p;else{const {data:l}=await this._imageRequestQueue.push(d,{...b});f=l}if(L.isSVG(d))if("width"in a&&"height"in a){const {width:l,height:v}=A(a.width,a.height);f.width=l;f.height=v}else if("cim"in a){const l=a.cim,{width:v,height:Y}=A(l.width??l.scaleX*l.size,l.size);f.width=v;f.height=Y}if(!f.width||!f.height)return null;let w=f.width,D=f.height;if("esriPMS"===a.type){b=Math;var e=b.round,h=g.getPMSResourceSize(a);var n=Math.min(f.width,r(h));w=e.call(b,
n);D=Math.round(w/f.width*f.height)}const {size:Z,sdf:aa,image:ba}=this._rasterizer.rasterizeImageResource(w,D,f,"cim"in a?a.cim.colorSubstitutions:void 0);return this._addItemToMosaic(c,Z,{type:"static",data:ba},g.shouldRepeat(a),aa,!1)}catch(f){if(!u.isAbortError(f))return new m("mapview-invalid-resource",`Could not fetch requested resource at ${d}. ${f.message}`)}}_addItemToMosaic(a,c,b,d,e,h,n){return this._spriteMosaic.addSpriteItem(a,c,b,d,e,h,n)}}return X});