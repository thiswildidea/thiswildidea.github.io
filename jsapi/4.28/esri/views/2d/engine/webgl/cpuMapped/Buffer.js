// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("exports ../../../../../core/maybe ../BufferPool ./FreeList ../../../../webgl/BufferObject ../../../../webgl/enums".split(" "),function(h,l,m,n,g,k){class p{constructor(a,b,c,d){d=m.TypedBuffer.create(b*c*Uint32Array.BYTES_PER_ELEMENT,d);this.size=b;this.strideInt=c;this.bufferType=a;this.dirty={start:Infinity,end:0};this._gpu=null;this._cpu=d;this.clear()}get elementSize(){return this._cpu.length/this.strideInt}get invalidated(){return 0<this.bufferSize&&!this._gpu}get invalidatedComputeBuffer(){return 0<
this.bufferSize&&!this._gpuComputeTriangles}invalidate(){this._invalidateTriangleBuffer();this._gpu?.dispose();this._gpu=null}_invalidateTriangleBuffer(){this._gpuComputeTriangles?.dispose();this._gpuComputeTriangles=null}destroy(){this._gpu?.dispose();this._gpuComputeTriangles?.dispose();this._cpu?.destroy();this._cpu2?.destroy()}clear(){this.dirty.start=Infinity;this.dirty.end=0;this.freeList=new n.FreeList({start:0,end:this._cpu.length/this.strideInt});this.fillPointer=0}ensure(a){if(!(this.maxAvailableSpace()>=
a)&&a*this.strideInt>this._cpu.length-this.fillPointer){this.invalidate();const b=this._cpu.length/this.strideInt;a=Math.round(1.25*(b+a));this._cpu.expand(a*this.strideInt*Uint32Array.BYTES_PER_ELEMENT);this.freeList.free(b,a-b)}}set(a,b){this._cpu.array[a]!==b&&(this._cpu.array[a]=b,this.dirty.start=Math.min(a,this.dirty.start),this.dirty.end=Math.max(a,this.dirty.end))}getGPUBuffer(a,b=!1){if(!this.bufferSize)return null;if(b){if("index"!==this.bufferType)throw Error("Tired to get triangle buffer, but target is not an index buffer");
null==this._gpuComputeTriangles&&(this._gpuComputeTriangles=this._createComputeBuffer(a));return this._gpuComputeTriangles}null==this._gpu&&(this._gpu=this._createBuffer(a));return this._gpu}getCPUBuffer(){this._cpu2||(this._cpu2=this._cpu.slice());this._cpu2.length!==this._cpu.length&&this._cpu2.expand(this._cpu.length*this._cpu.array.BYTES_PER_ELEMENT);this._cpu2.set(this._cpu);return this._cpu2}get bufferSize(){return this._cpu.length/this.strideInt}maxAvailableSpace(){return this.freeList.maxAvailableSpace()}insert(a,
b,c,d){const e=c*this.strideInt;if(!e)return 0;a=new Uint32Array(a,b*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,e);c=this.freeList.firstFit(c);l.assertIsSome(c,"First fit region must be defined");c*=this.strideInt;b=c/this.strideInt-b;if(0!==d)for(let f=0;f<a.length;f++)a[f]+=d;this._cpu.array.set(a,c);this.dirty.start=Math.min(this.dirty.start,c);this.dirty.end=Math.max(this.dirty.end,c+e);this.fillPointer=Math.max(this.fillPointer,c+e);return b}free(a,b,c){const d=a*this.strideInt,e=(a+b)*this.strideInt;
if(!0===c)for(c=a;c!==a+b;c++)this._cpu.array[c*this.strideInt]=2147450879;this.dirty.start=Math.min(this.dirty.start,d);this.dirty.end=Math.max(this.dirty.end,e);this.freeList.free(a,b)}upload(){this.dirty.end&&(this._invalidateTriangleBuffer(),null!=this._gpu&&this._gpu.setSubData(this._cpu.array,this.dirty.start,this.dirty.start,this.dirty.end),this.dirty.start=Infinity,this.dirty.end=0)}_createBuffer(a){const b=k.Usage.DYNAMIC_DRAW;return"index"===this.bufferType?g.BufferObject.createIndex(a,
b,this._cpu.array):g.BufferObject.createVertex(a,b,this._cpu.array)}_createComputeBuffer(a){const b=k.Usage.DYNAMIC_DRAW,c=new Uint32Array(this.fillPointer/3);for(let d=0;d<this.fillPointer;d+=3)c[d/3]=this._cpu.array[d];return g.BufferObject.createIndex(a,b,c)}}h.Buffer=p;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});