// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("../../../../../../core/Logger ../../../../../../core/screenUtils ../../../../../../symbols/cim/enums ../../color ../../definitions ../../number ../../Utils ../../materialKey/MaterialKey ./util ./WGLBaseLineTemplate ./WGLMeshTemplate".split(" "),function(F,y,C,D,e,x,E,A,r,G,H){class t extends G(H){constructor(a,b,d,c,f,l,g,h,n,p,u,v,k,w,q,m,z,B,I,J){super();a=A.LineMaterialKey.load(a);b&&(a.sdf=b.sdf,a.pattern=!0,a.textureBinding=b.textureBinding);this._capType=c;this._joinType=f;this._miterLimitCosine=
r.getLimitCosine(l);this.tessellationProperties._fillColor=g;this.tessellationProperties._tl=h;this.tessellationProperties._br=n;this._hasPattern=p;this._isDashed=u;this._zOrder=z;this._effects=B||null;this._minMaxZoom=x.i1616to32(Math.round(I*e.minMaxZoomPrecisionFactor),Math.round(J*e.minMaxZoomPrecisionFactor));this._materialKey=a.data;this.tessellationProperties._bitset=(k?e.bitsetGenericLockColor:0)|(w?e.bitsetTypeFillOutline:0)|(v?e.bitsetLineScaleDash:0)|(q?e.bitsetGenericConsiderAlphaOnly:
0);this.tessellationProperties._halfWidth=.5*d;this.tessellationProperties._halfReferenceWidth=.5*m;this.tessellationProperties.offset=0;this._initializeTessellator(!1)}static fromCIMLine(a,b,d){var c=a.color,f=a.scaleFactor||1;const l=!!a.dashTemplate;let g=a.cap;l&&g===C.CapType.ROUND&&(g=C.CapType.SQUARE);const h=a.join;f*=y.pt2px(a.width);const n=y.pt2px(a.referenceWidth),p=y.pt2px(a.miterLimit);c=c&&D.premultiplyAlphaRGBA(c)||0;const [u,v]=r.getMinMaxZoom(a.scaleInfo,d);if(!b)return new t(a.materialKey,
b,f,g,h,p,c,0,0,!1,l,a.scaleDash??!1,a.colorLocked??!1,!1,a.sampleAlphaOnly,n,a.zOrder,a.effects,u,v);const {rect:k,width:w,height:q}=b;var m=k.x+e.spritePadding;const z=k.y+e.spritePadding;d=m+w;const B=z+q;m=x.i1616to32(m,z);d=x.i1616to32(d,B);return new t(a.materialKey,b,f,g,h,p,c,m,d,!0,l,a.scaleDash??!1,a.colorLocked??!1,!1,a.sampleAlphaOnly,n,a.zOrder,a.effects,u,v)}static fromFillOutline(a){const b=A.FillMaterialKey.load(a.materialKey);return A.hasOutlineFillSymbology(b)&&a.outline&&"esriSLSSolid"===
a.outline?.style?t.fromSimpleLine({hash:"",materialKey:a.materialKey,...a.outline},null,!0):null}static fromSimpleLine(a,b,d=!1){var {color:c}=a;const f="esriSLSSolid"!==a.style&&"esriSLSNull"!==a.style,l=E.getCapType(a.cap||"round"),g=E.getJoinType(a.join||"round");c=c&&"esriSLSNull"!==a.style&&D.premultiplyAlphaRGBAArray(c)||0;"esriSLSNull"===a.style&&(c=0);const h=y.pt2px(a.width),n=a.miterLimit;if(!b)return new t(a.materialKey,b,h,l,g,n,c,0,0,!1,f,!0,!1,d,!1,h,0,null,r.defaultMinZoom,r.defaultMaxZoom);
const {rect:p,width:u,height:v}=b;var k=p.x+e.spritePadding;const w=p.y+e.spritePadding;var q=k+u;const m=w+v;k=x.i1616to32(k,w);q=x.i1616to32(q,m);return new t(a.materialKey,b,h,l,g,n,c,k,q,!0,f,!0,!1,d,!1,h,0,null,r.defaultMinZoom,r.defaultMaxZoom)}static fromPictureLineSymbol(a,b,d,c){F.getLogger("esri.views.2d.engine.webgl.WGLLineTemplate").error("PictureLineSymbol support does not exist!");return null}}return t});