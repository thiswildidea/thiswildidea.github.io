// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("../../../../../../core/Error ../../../../../../core/Logger ../../../../../../core/mathUtils ../../../../../../core/screenUtils ../../../../../../chunks/mat2d ../../../../../../chunks/mat2df32 ../../../../../../symbols/cim/enums ../../alignmentUtils ../../color ../../definitions ../../enums ../../number ../../materialKey/MaterialKey ./segmentUtils ./WGLTextTemplate".split(" "),function(D,E,x,y,F,G,z,r,t,n,H,p,w,A,I){const B=E.getLogger("esri.views.2d.engine.webgl.WGLLabelTemplate"),J=(a,c=
"mapview-labeling")=>B.error(new D(c,a)),K=function(a){const c=new Map;return b=>{c.has(b)||c.set(b,a(b));return c.get(b)}}(a=>{let c=0;if(0===a)return Infinity;for(;!(a%2);)c++,a/=2;return c});class C extends I{constructor(a,c,b,d){super(a,b.font?.size,b.haloSize||0,b.font?.size,b.color&&t.premultiplyAlphaRGBAArray(b.color)||0,b.haloColor&&t.premultiplyAlphaRGBAArray(b.haloColor)||0,b.horizontalAlignment,b.verticalAlignment,r.isMapAligned(c.labelPlacement)?z.Alignment.MAP:z.Alignment.SCREEN,b.font?.decoration,
!1,b.angle||0,b.xoffset,b.yoffset,b.lineWidth,b.lineHeight,null,null,!1,null,null,b.backgroundColor&&t.premultiplyAlphaRGBAArray(b.backgroundColor),b.borderLineColor&&t.premultiplyAlphaRGBAArray(b.borderLineColor),b.borderLineSize);this._zoomLevel=this._refOffsetY=this._refOffsetX=this._refPlacementDirY=this._refPlacementDirX=this._refPlacementPadding=this._outLineLabelAngle=0;this.geometryType=H.WGLGeometryType.LABEL;this._allowOverrun=c.allowOverrun??!1;this._repeatLabel=c.repeatLabel??!0;this._labelPosition=
c.labelPosition??"curved";var f=!!c.minScale&&d.scaleToZoom(c.minScale)||0;f=x.clamp(f,0,25.5);d=!!c.maxScale&&d.scaleToZoom(c.maxScale)||255;d=x.clamp(d,0,25.5);const [e,g]=r.getAlignmentFromPlacement(c.labelPlacement);this._xAlignD=e;this._yAlignD=g;this._minZoom=f;this._maxZoom=d;this._minBackgroundZoom=f;this._maxBackgroundZoom=d;this._refPlacementPadding=y.pt2px(b.haloSize)+n.textPlacementPadding;this._repeatLabelDistance=c.repeatLabelDistance?y.pt2px(c.repeatLabelDistance):128;a=w.LabelMaterialKey.load(a);
a.sdf=!0;this._materialKey=a.data}static fromLabelClass(a,c){if("esriServerLinePlacementCenterAlong"===a.labelPlacement){const b=a.symbol;b.xoffset=0;b.yoffset=0;b.angle=0;b.font.decoration="none"}return new C(a.materialKey,a,a.symbol,c)}get _shapedBox(){return this._shapingInfo.bounds}setZoomLevel(a){this._zoomLevel=a}bindReferenceTemplate(a){let c=r.getXDirection(this._xAlignD),b=r.getYDirection(this._yAlignD);this._refOffsetY=this._refOffsetX=0;if(null==a)this._refSymbolAndPlacementOffset=p.i8888to32(0,
0,Math.floor(127*c+127),Math.floor(127*b+127));else{if("circle"===a.boundsType&&(c||b)){var d=Math.sqrt(c*c+b*b);c/=d;b/=d}d=Math.max(a.height,a.width);this._refSymbolAndPlacementOffset=p.i8888to32(4*this._refPlacementPadding,d,Math.floor(127*c+127),Math.floor(127*b+127));this._referenceSize=d;this._refPlacementDirX=c;this._refPlacementDirY=b;this._refOffsetX=a.xOffset;this._refOffsetY=a.yOffset}}_write(a,c){if(null!=this._shapingInfo){var b=this._shapingInfo,d=c.getDisplayId(),f="esriGeometryPolygon"===
c.geometryType?c.readLegacyCentroid():c.readLegacyGeometry();if(f)switch(this._current={out:a,inId:d,inShaping:b,zoomLevel:this._zoomLevel},"esriGeometryPolyline"===c.geometryType&&"curved"===this._labelPosition&&(this._borderLineColor||this._backgroundColor)&&B.warnOnce("TextSymbol properties 'borderLineColor', 'borderLineSize', and 'backgroundColor' are not supported in curved labels"),c.geometryType){case "esriGeometryPolyline":this._placeLineLabels(f);break;case "esriGeometryPoint":case "esriGeometryPolygon":this._placePointLabels(f);
break;default:J(`Geometry of type ${c.geometryType} is not supported`)}}}_isVisible(a,c){const b=Math.floor(this._current.zoomLevel*n.minMaxZoomPrecisionFactor);return Math.floor(a*n.minMaxZoomPrecisionFactor)<=b&&b<=Math.floor(c*n.minMaxZoomPrecisionFactor)}_placePointLabels(a){const {out:c,inId:b,inShaping:d}=this._current;this._writeGlyphs(c,b,a,d)}_placeLineLabels(a){a=A.smoothPaths(a.paths,this._current.inShaping.bounds.width);const c=this._placeSubdivGlyphs.bind(this),b=(this._shapedBox.width+
this._repeatLabelDistance)/2;for(const d of a)A.pathDivide(d,b,c,this._repeatLabel)}_placeSubdivGlyphs(a,c,b,d){var f=K(c),e=this._shapedBox.width/2,g=Math.sqrt(this._repeatLabelDistance)/2;b=Math.min(b,d-b);e=this._current.inShaping.isMultiline?25:Math.log2(b/(g+e/2));f=Math.max(this._minZoom,this._current.zoomLevel+1-(0===c?e:Math.min(f,e)));e=this._current.zoomLevel-f;g=this._shapedBox.width/2*2**e;this._current.inShaping.isMultiline?0===c&&this._placeStraight(a,f):this._allowOverrun&&0>e?this._placeStraightAlong(a,
this._minZoom):"parallel"===this._labelPosition?this._placeStraightAlong(a,f):"curved"===this._labelPosition&&this._placeCurved(a,f,g)}_placeStraight(a,c){const {out:b,inId:d,inShaping:f}=this._current,e=Math.ceil((180/Math.PI*a.angle+180)%360);this._outLineLabelAngle=Math.round(254/360*Math.ceil(180/Math.PI*a.angle%360));this._writeGlyphs(b,d,a,f,c);this._outLineLabelAngle=Math.round(254/360*e);this._writeGlyphs(b,d,a,f,c)}_placeCurved(a,c,b){const {out:d,inId:f}=this._current;d.metricStart(f,c,
a.x,a.y,0,0,0,0);const e=a.clone(),g=(180/Math.PI*a.angle+180)%360;this._outLineLabelAngle=Math.round(180/Math.PI*a.angle%360*(254/360));this._placeFirst(e,c,1);this._placeBack(a,e,c,b,1);this._placeForward(a,e,c,b,1);this._outLineLabelAngle=Math.round(254/360*g);this._placeFirst(e,c,0);this._placeBack(a,e,c,b,0);this._placeForward(a,e,c,b,0);d.metricEnd()}_placeStraightAlong(a,c){const {out:b,inId:d,inShaping:f}=this._current;b.metricStart(d,c,a.x,a.y,0,0,0,0);const e=a.clone(),g=180/Math.PI*a.angle%
360,l=(180/Math.PI*a.angle+180)%360;var k=0<f.glyphs.length&&(this._borderLineColor||this._backgroundColor);this._maxBackgroundZoom=25;this._minBackgroundZoom=Math.max(c,0);if(k){k=w.LabelMaterialKey.load(this._materialKey);k.textureBinding=f.glyphs[0].textureBinding;const h=F.fromRotation(G.create(),-a.angle),[q,u]=f.shapeBackground(h);this._outLineLabelAngle=Math.round(254/360*g);b.recordStart(d,k.data,this.geometryType,!0);this._writeBackgroundGeometry(b,d,a,q,u);b.recordEnd();this._outLineLabelAngle=
Math.round(254/360*l);b.recordStart(d,k.data,this.geometryType,!0);this._writeBackgroundGeometry(b,d,a,q,u);b.recordEnd()}this._outLineLabelAngle=Math.round(254/360*g);this._placeFirst(e,c,1,!0);this._outLineLabelAngle=Math.round(254/360*l);this._placeFirst(e,c,0,!0);b.metricEnd()}_placeBack(a,c,b,d,f){const e=a.clone();for(a=a.backwardLength+0;e.prev()&&!(a>=d);)this._placeOnSegment(e,c,a,b,-1,f),a+=e.length+0}_placeForward(a,c,b,d,f){const e=a.clone();for(a=a.remainingLength+0;e.next()&&!(a>=d);)this._placeOnSegment(e,
c,a,b,1,f),a+=e.length+0}_placeFirst(a,c,b,d=!1){const f=this._current.inShaping;var e=f.glyphs;const g=this._current.zoomLevel,{out:l,inId:k}=this._current;for(const h of e)e=h.x>f.bounds.x?b:1-b,e=Math.max(0,g+Math.log2(Math.abs(h.x+h.width/2-f.bounds.x)/(e*a.remainingLength+(1-e)*a.backwardLength))),e=Math.max(c,d?0:e),h.maxZoom=25,h.angle=a.angle+(1-b)*Math.PI,h.minZoom=e,this._writeGlyph(l,k,a.x,a.y,h),b&&this._isVisible(h.minZoom,h.maxZoom)&&(e=h.bounds,l.metricBoxWrite(e.center[0],e.center[1],
e.width,e.height))}_placeOnSegment(a,c,b,d,f,e){var g=this._current.inShaping.glyphs;const {out:l,inId:k}=this._current,h=this._current.inShaping,q=this._current.zoomLevel;var u=a.x+a.dx/a.length*-f*b,L=a.y+a.dy/a.length*-f*b;for(const m of g)if((g=m.x>h.bounds.x?e:1-e)&&1===f||!g&&-1===f){var v=Math.abs(m.x+m.width/2-h.bounds.x);g=Math.max(0,q+Math.log2(v/b)-.1);v=Math.max(d,q+Math.log2(v/(b+a.length+0)));0!==g&&(m.angle=a.angle+(1-e)*Math.PI,m.minZoom=v,m.maxZoom=g,this._writeGlyph(l,k,u,L,m),e&&
this._isVisible(m.minZoom,m.maxZoom)&&(g=m.bounds,l.metricBoxWrite(g.center[0]+(a.x-c.x),g.center[1]+(a.y-c.y),g.width,g.height)))}}_writeGlyphs(a,c,b,d,f=this._minZoom){if(!(0>b.x||512<=b.x||0>b.y||512<=b.y)){if(0<d.glyphs.length&&(this._borderLineColor||this._backgroundColor)){var e=w.LabelMaterialKey.load(this._materialKey);e.textureBinding=d.glyphs[0].textureBinding;a.recordStart(c,e.data,this.geometryType,!0);this._writeBackgroundGeometry(a,c,b,d.bounds,d.background);a.recordEnd()}e=b.x+this._refOffsetX;
b=b.y-this._refOffsetY;for(const g of d.glyphs)g.minZoom=f,g.maxZoom=this._maxZoom,this._writeGlyph(a,c,e,b,g);d=d.boundsT;a.metricStart(c,f,e,b,this._refPlacementDirX,this._refPlacementDirY,this._referenceSize,this._materialKey);a.metricBoxWrite(d.center[0],d.center[1],d.width,d.height);a.metricEnd()}}_writeVertexCommon(a,c,b,d){const f=this._color,e=this._haloColor,g=p.i8888to32(0,0,this._size,this._haloSize);d=p.i8888to32(Math.floor(Math.max(d.minZoom,this._minZoom)*n.minMaxZoomPrecisionFactor),
Math.floor(Math.min(d.maxZoom,this._maxZoom)*n.minMaxZoomPrecisionFactor),this._outLineLabelAngle,0);a.vertexWrite(b);a.vertexWrite(c);a.vertexWrite(f);a.vertexWrite(e);a.vertexWrite(g);a.vertexWrite(this._refSymbolAndPlacementOffset);a.vertexWrite(d)}_writeBackgroundVertex(a,c,b,d,f,e){const g=p.i8888to32(0,0,this._size,this._haloSize),l=p.i8888to32(0,0,0,0),k=p.i8888to32(Math.floor(this._minBackgroundZoom*n.minMaxZoomPrecisionFactor),Math.floor(this._maxBackgroundZoom*n.minMaxZoomPrecisionFactor),
this._outLineLabelAngle,1);a.vertexWrite(b);a.vertexWrite(c);a.vertexWrite(d);a.vertexWrite(l);a.vertexWrite(g);a.vertexWrite(this._refSymbolAndPlacementOffset);a.vertexWrite(k);a.vertexWrite(f);a.vertexWrite(e);a.vertexEnd()}}return C});