// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define(["exports","./DirtyMap","./DisplayRecordStore","./WGLBuffers","./WGLTile"],function(r,t,u,w,x){class y extends x.WGLTile{constructor(){super(...arguments);this._displayList=this._data=null;this._lastCommitTime=0;this._invalidated=this._hasData=!1;this._wglBuffers=null;this._dirtyMap=new t}destroy(){super.destroy();this.clear()}get hasData(){return!!this._hasData}get displayObjects(){return this._displayObjects??[]}getGeometry(c){return this._wglBuffers&&this._wglBuffers.has(c)?this._wglBuffers.get(c):
null}getDisplayList(){return this._displayList}patch(c){if(!0===c.clear)this.clear(),this._hasData=!1;else{var k=c.addOrUpdate,a=c.remove;!this._data&&k?.tileDisplayData?.displayObjects.length?(k.tileDisplayData.computeDisplayList(),this._dirtyMap=new t,this._dispRecStore=u.fromTileData(k,this._dirtyMap),this._data=k,this._dirtyMap.markAllDirty(),this._hasData=!0,c.end&&this.ready()):this._data?k?.tileDisplayData?.displayObjects.length||a.length?this._doPatchData(c):c.end&&this.ready():c.end&&this.ready();
c.end&&!this._data&&this.clear();this.requestRender();this.emit("change")}}commit(c){if(!c.time||c.time!==this._lastCommitTime)if(this._lastCommitTime=c.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new w(c.context)),this._dirtyMap.hasDirty()||this._invalidated))this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),
this._dirtyMap.markAllClean()}clear(){this._dispRecStore=this._displayList=this._data=null;this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(c){this._invalidated=!0;this._patchData(c)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=u.fromTileData(this._data,this._dirtyMap));this.requestRender()}_patchData(c){let k=!0;var a=c.addOrUpdate?.tileDisplayData?.displayObjects||[],d=(c.remove||[]).slice();for(var g of a)null!=g.insertAfter&&d.push(g.id);
let q;0<d.length&&(q=new Set(d));g=this._data.tileDisplayData;for(var e of d)if(d=g.displayObjectRegistry.get(e)){g.displayList.removeFromList(d.displayRecords);for(var f of d.displayRecords)this._dispRecStore.delete(f);g.displayObjectRegistry.delete(e)}q?.size&&(g.displayObjects=g.displayObjects.filter(h=>!q.has(h.id)));for(const h of a){a=g.displayObjectRegistry.get(h.id);let l;if(a){e=a.displayRecords;a.set(h);a.displayRecords=e;e=a.displayRecords.length;for(f=0;f<e;++f){d=a.displayRecords[f];
var b=h.displayRecords[f];if(f>=h.displayRecords.length||d.geometryType!==b.geometryType||d.symbolLevel!==b.symbolLevel||d.zOrder!==b.zOrder||d.materialKey!==b.materialKey)this._dispRecStore.delete(a.displayRecords[f]),f<h.displayRecords.length&&(a.displayRecords[f]=void 0)}a.displayRecords.length=h.displayRecords.length}else if(a=h.copy(),a.displayRecords=[],g.displayObjectRegistry.set(h.id,a),e=g.displayObjects,null!=a.insertAfter?(l={},0<=a.insertAfter?(f=g.displayObjectRegistry.get(a.insertAfter))?
(b=e.indexOf(f)+1,b<e.length?e.splice(b,0,a):(e.push(a),b=e.length)):(e.push(a),b=e.length):(e.unshift(a),b=0)):(e.push(a),b=e.length),l)for(f=0<h.displayRecords.length?1:0,d=0,--b;0<=b&&d<f;--b)for(var m=e[b].displayRecords.length-1;0<=m&&d<f;--m){var p=e[b].displayRecords[m],n=g.displayList.getDPInfoType();l[n]||(l[n]=p,++d)}e=h.displayRecords.length;for(f=0;f<e;++f){d=h.displayRecords[f];(b=a.displayRecords[f])?(b.meshData=d.meshData,b.materialKey=d.materialKey):(b=d.copy(),b.vertexFrom=void 0,
b.indexFrom=void 0,a.displayRecords[f]=b);p=d.geometryType;m=g.displayList.getDPInfoType();n=c.addOrUpdate.tileBufferData.geometries[p];p=n.vertexBuffer;n=n.indexBuffer;let v=void 0;l&&(v=l[m]?g.displayList.splitAfter(l[m]):-1);k=this._dispRecStore.setMeshData(b,d,p,n,v)&&k;l&&null!=b.indexFrom&&null!=b.indexFrom&&(l[m]=b)}}return k}}r.GraphicTile=y;Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});