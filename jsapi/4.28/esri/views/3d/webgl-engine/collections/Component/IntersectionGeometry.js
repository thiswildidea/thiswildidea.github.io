// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/vec3 ../../../../../chunks/vec3f64 ../../../../../geometry/support/aaBoundingBox ../../../../../geometry/support/FloatArray ../../../../../geometry/support/Indices ./ComponentIntersectionData ../../lib/Attribute ../../lib/ComponentUtils ../../materials/internal/MaterialUtil".split(" "),function(A,B,C,D,x,y,E,F,w){class G{constructor(b,a){this._components=a;this._indices=b.indices?x.compactIndices(b.indices):x.getContinuousIndexArray(b.positions.length/3);this._positions=
b.positions;this._componentIntersectionData=Array(a.count)}destroy(){this._indices=this._positions=null;this._componentIntersectionData.length=0;this._perComponentAabbs=null}getComponentAabb(b,a){this._perComponentAabbs||(this._perComponentAabbs=this._computePerComponentAabbs());for(let k=0;6>k;k++)a[k]=this._perComponentAabbs[6*b+k];return a}getComponentPositions(b,a){a.indices=this._indices;a.data=this._positions;a.stride=3;a.startIndex=this._components.offsets[b];a.endIndex=this._components.offsets[b+
1]}intersect(b,a,k,m,f,g,n){const h=new E.Vertices(this._positions,3),l=this._indices,u=this._components.offsets,p=w.computeInvDir(b,a,H),q=b[2],r=a[2];this._components.visibility.forEachComponent(c=>{if(!F.getVisibility(this._components.pickability,c))return!0;var e=this.getComponentAabb(c,I);if(null!=g){var d=g[c];null!=f?f.componentOffset=d:(b[2]=q-d,a[2]=r-d)}null!=f&&f.applyToAabb(e);if(!w.intersectAabbInvDir(e,b,p,k))return!0;e=u[c]/3;d=u[c+1]/3;const t=(v,z,J)=>n(c,v,A.transformMat3(z,z,m),
J);null==f&&d-e>y.componentMinimalSizeForIntersectionData?(null==this._componentIntersectionData[c]&&(this._componentIntersectionData[c]=new y.ComponentIntersectionData(this._indices,e,d,h)),this._componentIntersectionData[c].intersectRay({r0:b,r1:a},t)):w.intersectTriangles(b,a,e,d,l,h,void 0,f,t);return!0})}_computePerComponentAabbs(){const b=this._components.count,a=D.newFloatArray(6*b),k=this._indices,m=this._positions,f=this._components.offsets;let g=0;for(let l=0;l<b;l++){var n=f[l];const u=
f[l+1];let p=Infinity,q=Infinity,r=Infinity,c=-Infinity,e=-Infinity,d=-Infinity;for(;n<u;n++){var h=3*k[n];const t=m[h],v=m[h+1];h=m[h+2];p=Math.min(p,t);q=Math.min(q,v);r=Math.min(r,h);c=Math.max(c,t);e=Math.max(e,v);d=Math.max(d,h)}a[g++]=p;a[g++]=q;a[g++]=r;a[g++]=c;a[g++]=e;a[g++]=d}return a}get positions(){return this._positions}get indices(){return this._indices}}const H=B.create(),I=C.create();return G});