// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/Logger ../../../../core/mathUtils ../../../../core/screenUtils ../../../../core/accessorSupport/decorators/property ../../../../core/accessorSupport/ensureType ../../../../core/arrayUtils ../../../../core/has ../../../../core/accessorSupport/decorators/subclass ../../../../chunks/mat4 ../../../../chunks/mat4f64 ../../../../chunks/vec2 ../../../../chunks/vec2f64 ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../chunks/vec4 ../../../../chunks/vec4f64 ../../../../geometry/support/frustum ../../../../geometry/support/ray ../../../../geometry/support/vector ../../../ViewingMode ./fov".split(" "),
function(c,g,C,D,r,A,h,J,K,L,E,m,p,B,F,f,q,k,t,w,G,H,I,u){var x;c.Camera=x=class extends C{constructor(a={}){super(a);this._center=q.create();this._up=q.create();this._viewUp=q.create();this._viewForward=q.create();this._viewRight=q.create();this._ray=G.create();this._viewport=t.fromValues(0,0,1,1);this._padding=t.fromValues(0,0,0,0);this._fov=55/180*Math.PI;this._nearFar=F.fromValues(1,1E3);this._viewDirty=!0;this._viewMatrix=p.create();this._viewProjectionDirty=!0;this._viewProjectionMatrix=p.create();
this._viewInverseTransposeMatrixDirty=!0;this._viewInverseTransposeMatrix=p.create();this._frustumDirty=!0;this._frustum=w.create();this._fullViewport=t.create();this._pixelRatio=1;this.relativeElevation=0}get pixelRatio(){return this._pixelRatio}set pixelRatio(a){this._pixelRatio=0<a?a:1}get eye(){return this._ray.origin}set eye(a){this._compareAndSetView(a,this._ray.origin)}get center(){return this._center}set center(a){this._compareAndSetView(a,this._center,"_center")}get ray(){f.subtract(this._ray.direction,
this.center,this.eye);return this._ray}get up(){return this._up}set up(a){this._compareAndSetView(a,this._up,"_up")}get viewMatrix(){this._ensureViewClean();return this._viewMatrix}set viewMatrix(a){m.copy(this._viewMatrix,a);this._viewDirty=!1;this._frustumDirty=this._viewProjectionDirty=this._viewInverseTransposeMatrixDirty=!0}get viewForward(){this._ensureViewClean();return this._viewForward}get viewUp(){this._ensureViewClean();return this._viewUp}get viewRight(){this._ensureViewClean();return this._viewRight}get nearFar(){return this._nearFar}get near(){return this._nearFar[0]}set near(a){this._nearFar[0]!==
a&&(this._nearFar[0]=a,this._frustumDirty=this._viewProjectionDirty=!0,this.notifyChange("_nearFar"))}get far(){return this._nearFar[1]}set far(a){this._nearFar[1]!==a&&(this._nearFar[1]=a,this._frustumDirty=this._viewProjectionDirty=!0,this.notifyChange("_nearFar"))}get viewport(){return this._viewport}set viewport(a){this.x=a[0];this.y=a[1];this.width=a[2];this.height=a[3]}get screenViewport(){if(1===this.pixelRatio)return this._viewport;const a=k.scale(t.create(),this._viewport,1/this.pixelRatio),
b=this._get("screenViewport");return b&&k.equals(a,b)?b:a}get screenPadding(){if(1===this.pixelRatio)return this._padding;const a=k.scale(t.create(),this._padding,1/this.pixelRatio),b=this._get("screenPadding");return b&&k.equals(a,b)?b:a}get x(){return this._viewport[0]}set x(a){a+=this._padding[c.PaddingSide.LEFT];this._viewport[0]!==a&&(this._viewport[0]=a,this._frustumDirty=this._viewProjectionDirty=!0,this.notifyChange("_viewport"))}get y(){return this._viewport[1]}set y(a){a+=this._padding[c.PaddingSide.BOTTOM];
this._viewport[1]!==a&&(this._viewport[1]=a,this._frustumDirty=this._viewProjectionDirty=!0,this.notifyChange("_viewport"))}get width(){return this._viewport[2]}set width(a){this._viewport[2]!==a&&(this._viewport[2]=a,this._frustumDirty=this._viewProjectionDirty=!0,this.notifyChange("_viewport"))}get height(){return this._viewport[3]}set height(a){this._viewport[3]!==a&&(this._viewport[3]=a,this._frustumDirty=this._viewProjectionDirty=!0,this.notifyChange("_viewport"))}get fullWidth(){return this._viewport[2]+
this._padding[c.PaddingSide.RIGHT]+this._padding[c.PaddingSide.LEFT]}set fullWidth(a){this.width=a-(this._padding[c.PaddingSide.RIGHT]+this._padding[c.PaddingSide.LEFT])}get fullHeight(){return this._viewport[3]+this._padding[c.PaddingSide.TOP]+this._padding[c.PaddingSide.BOTTOM]}set fullHeight(a){this.height=a-(this._padding[c.PaddingSide.TOP]+this._padding[c.PaddingSide.BOTTOM])}get fullViewport(){this._fullViewport[0]=this._viewport[0]-this._padding[c.PaddingSide.LEFT];this._fullViewport[1]=this._viewport[1]-
this._padding[c.PaddingSide.BOTTOM];this._fullViewport[2]=this.fullWidth;this._fullViewport[3]=this.fullHeight;return this._fullViewport}get _aspect(){return this.width/this.height}get padding(){return this._padding}set padding(a){k.exactEquals(this._padding,a)||(this._viewport[0]+=a[c.PaddingSide.LEFT]-this._padding[c.PaddingSide.LEFT],this._viewport[1]+=a[c.PaddingSide.BOTTOM]-this._padding[c.PaddingSide.BOTTOM],this._viewport[2]-=a[c.PaddingSide.RIGHT]+a[c.PaddingSide.LEFT]-(this._padding[c.PaddingSide.RIGHT]+
this._padding[c.PaddingSide.LEFT]),this._viewport[3]-=a[c.PaddingSide.TOP]+a[c.PaddingSide.BOTTOM]-(this._padding[c.PaddingSide.TOP]+this._padding[c.PaddingSide.BOTTOM]),k.copy(this._padding,a),this._frustumDirty=this._viewProjectionDirty=!0,this.notifyChange("_padding"),this.notifyChange("_viewport"))}get viewProjectionMatrix(){this._viewProjectionDirty&&(m.multiply(this._viewProjectionMatrix,this.projectionMatrix,this.viewMatrix),this._viewProjectionDirty=!1);return this._viewProjectionMatrix}get projectionMatrix(){var a=
this.width,b=this.height;const e=this.near*Math.tan(this.fovY/2),n=e*this._aspect;a=m.frustum(p.create(),-n*(1+2*this._padding[c.PaddingSide.LEFT]/a),n*(1+2*this._padding[c.PaddingSide.RIGHT]/a),-e*(1+2*this._padding[c.PaddingSide.BOTTOM]/b),e*(1+2*this._padding[c.PaddingSide.TOP]/b),this.near,this.far);return(b=this._get("projectionMatrix"))&&m.equals(b,a)?b:a}get inverseProjectionMatrix(){return m.invert(p.create(),this.projectionMatrix)||this._get("inverseProjectionMatrix")||p.create()}get fov(){return this._fov}set fov(a){this._fov=
a;this._frustumDirty=this._viewProjectionDirty=!0}get fovX(){return u.fovd2fovx(this._fov,this.width,this.height)}set fovX(a){this._fov=u.fovx2fovd(a,this.width,this.height);this._frustumDirty=this._viewProjectionDirty=!0}get fovY(){return u.fovd2fovy(this._fov,this.width,this.height)}set fovY(a){this._fov=u.fovy2fovd(a,this.width,this.height);this._frustumDirty=this._viewProjectionDirty=!0}get distance(){return f.distance(this.center,this.eye)}get frustum(){this._recomputeFrustum();return this._frustum}get viewInverseTransposeMatrix(){if(this._viewInverseTransposeMatrixDirty||
this._viewDirty)m.invert(this._viewInverseTransposeMatrix,this.viewMatrix),m.transpose(this._viewInverseTransposeMatrix,this._viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1;return this._viewInverseTransposeMatrix}depthNDCToWorld(a){return 2*this.near*this.far/(this.far+this.near-(2*a-1)*(this.far-this.near))}get perRenderPixelRatio(){return Math.tan(this.fovX/2)/(this.width/2)}get perScreenPixelRatio(){return this.perRenderPixelRatio*this.pixelRatio}get aboveGround(){return null!=
this.relativeElevation&&0<=this.relativeElevation}copyFrom(a){f.copy(this._ray.origin,a.eye);this.center=a.center;this.up=a.up;k.copy(this._viewport,a.viewport);this.notifyChange("_viewport");k.copy(this._padding,a.padding);this.notifyChange("_padding");B.copy(this._nearFar,a.nearFar);this.notifyChange("_nearFar");this._fov=a.fov;this.relativeElevation=a.relativeElevation;this._viewDirty=a._viewDirty;this._viewDirty||(m.copy(this._viewMatrix,a.viewMatrix),f.copy(this._viewRight,a.viewRight),f.copy(this._viewUp,
a.viewUp),f.copy(this._viewForward,a.viewForward));this._viewProjectionDirty=!0;this._frustumDirty=a._frustumDirty;this._frustumDirty||(w.copy(this._frustum,a.frustum),this._frustumDirty=!1);a._viewInverseTransposeMatrixDirty?this._viewInverseTransposeMatrixDirty=!0:(m.copy(this._viewInverseTransposeMatrix,a.viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1);k.copy(this._fullViewport,a.fullViewport);this.pixelRatio=a.pixelRatio;return this}copyViewFrom(a){this.eye=a.eye;this.center=
a.center;this.up=a.up}clone(){return(new x).copyFrom(this)}equals(a){return f.exactEquals(this.eye,a.eye)&&f.exactEquals(this.center,a.center)&&f.exactEquals(this.up,a.up)&&k.exactEquals(this._viewport,a.viewport)&&k.exactEquals(this._padding,a.padding)&&B.exactEquals(this.nearFar,a.nearFar)&&this._fov===a.fov&&this.pixelRatio===a.pixelRatio&&this.relativeElevation===a.relativeElevation}almostEquals(a){var b=Math.max(1,1/this.pixelRatio,1/a.pixelRatio);if(.001<=Math.abs(a.fov-this._fov)||k.squaredDistance(a.screenPadding,
this.screenPadding)>=b||k.squaredDistance(this.screenViewport,a.screenViewport)>=b)return!1;f.sub(l,a.eye,a.center);f.sub(y,this.eye,this.center);b=f.dot(l,y);const e=f.sqrLen(l),n=f.sqrLen(y);return b*b>=(1-1E-10)*e*n&&f.sqrDist(a.eye,this.eye)<2.5E-7*Math.max(e,n)}computeRenderPixelSizeAt(a){return this.computeRenderPixelSizeAtDist(this._viewDirectionDistance(a))}computeRenderPixelSizeAtDist(a){return a*this.perRenderPixelRatio}computeScreenPixelSizeAt(a){return this.computeScreenPixelSizeAtDist(this._viewDirectionDistance(a))}_viewDirectionDistance(a){return Math.abs(H.projectPointSignedLength(this.viewForward,
f.subtract(l,a,this.eye)))}computeScreenPixelSizeAtDist(a){return a*this.perScreenPixelRatio}computeDistanceFromRadius(a,b){return a/Math.tan(Math.min(this.fovX,this.fovY)/(2*(b||1)))}getScreenCenter(a=A.createScreenPointArray()){a[0]=(this.padding[c.PaddingSide.LEFT]+this.width/2)/this.pixelRatio;a[1]=(this.padding[c.PaddingSide.TOP]+this.height/2)/this.pixelRatio;return a}getRenderCenter(a,b=.5,e=.5){a[0]=this.padding[c.PaddingSide.LEFT]+this.width*b;a[1]=this.padding[c.PaddingSide.BOTTOM]+this.height*
e;a[2]=.5;return a}setGLViewport(a){const b=this.viewport,e=this.padding;a.setViewport(b[0]-e[3],b[1]-e[2],b[2]+e[1]+e[3],b[3]+e[0]+e[2])}applyProjection(a,b){a!==d&&f.copy(d,a);d[3]=1;k.transformMat4(d,d,this.projectionMatrix);a=Math.abs(d[3]);f.scale(d,d,1/a);const e=this.fullViewport;b[0]=r.lerp(0,e[0]+e[2],.5+.5*d[0]);b[1]=r.lerp(0,e[1]+e[3],.5+.5*d[1]);b[2]=.5*(d[2]+1);b[3]=a}unapplyProjection(a,b){const e=this.fullViewport;d[0]=(a[0]/(e[0]+e[2])*2-1)*a[3];d[1]=(a[1]/(e[1]+e[3])*2-1)*a[3];d[2]=
(2*a[2]-1)*a[3];d[3]=a[3];null!=this.inverseProjectionMatrix&&(k.transformMat4(d,d,this.inverseProjectionMatrix),b[0]=d[0],b[1]=d[1],b[2]=d[2])}projectToScreen(a,b){this.projectToRenderScreen(a,z);this.renderToScreen(z,b);return b}projectToRenderScreen(a,b){d[0]=a[0];d[1]=a[1];d[2]=a[2];d[3]=1;k.transformMat4(d,d,this.viewProjectionMatrix);if(0===d[3])return null;f.scale(d,d,1/Math.abs(d[3]));a=this.fullViewport;"x"in b?(b.x=r.lerp(0,a[0]+a[2],.5+.5*d[0]),b.y=r.lerp(0,a[1]+a[3],.5+.5*d[1])):(b[0]=
r.lerp(0,a[0]+a[2],.5+.5*d[0]),b[1]=r.lerp(0,a[1]+a[3],.5+.5*d[1]),2<b.length&&(b[2]=.5*(d[2]+1)));return b}unprojectFromScreen(a,b){return this.unprojectFromRenderScreen(this.screenToRender(a,z),b)}unprojectFromRenderScreen(a,b){m.multiply(v,this.projectionMatrix,this.viewMatrix);if(!m.invert(v,v))return null;const e=this.fullViewport;d[0]=2*(a[0]-e[0])/e[2]-1;d[1]=2*(a[1]-e[1])/e[3]-1;d[2]=2*a[2]-1;d[3]=1;k.transformMat4(d,d,v);if(0===d[3])return null;b[0]=d[0]/d[3];b[1]=d[1]/d[3];b[2]=d[2]/d[3];
return b}constrainWindowSize(a,b,e,n){a*=this.pixelRatio;b*=this.pixelRatio;return[Math.round(Math.max(a-e/2,0)),Math.round(Math.max(this.fullHeight-b-n/2,0)),Math.round(e- -Math.min(a-e/2,0)- -Math.min(this.fullWidth-a-e/2,0)),Math.round(n- -Math.min(this.fullHeight-b-n/2,0)- -Math.min(b-n/2,0))]}computeUp(a){a===I.ViewingMode.Global?this._computeUpGlobal():this._computeUpLocal()}screenToRender(a,b){const e=this.fullHeight-a[1]*this.pixelRatio;b[0]=a[0]*this.pixelRatio;b[1]=e;return b}renderToScreen(a,
b){const e=(this.fullHeight-a[1])/this.pixelRatio;b[0]=a[0]/this.pixelRatio;b[1]=e}_computeUpGlobal(){f.subtract(l,this.center,this.eye);const a=f.length(this.center);1>a?(f.set(this._up,0,0,1),this._markViewDirty(),this.notifyChange("_up")):Math.abs(f.dot(l,this.center))>.9999*f.length(l)*a||(f.cross(this._up,l,this.center),f.cross(this._up,this._up,l),f.normalize(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_computeUpLocal(){f.direction(l,this.eye,this.center);.9999>=Math.abs(l[2])&&
(f.scale(l,l,l[2]),f.set(this._up,-l[0],-l[1],1-l[2]),f.normalize(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_compareAndSetView(a,b,e=""){"number"===typeof a[0]&&isFinite(a[0])&&"number"===typeof a[1]&&isFinite(a[1])&&"number"===typeof a[2]&&isFinite(a[2])?f.exactEquals(a,b)||(f.copy(b,a),this._markViewDirty(),e.length&&this.notifyChange(e)):D.getLogger("esri.views.3d.webgl-engine.lib.Camera").warn("Camera vector contains invalid number, ignoring value")}_markViewDirty(){this._viewProjectionDirty=
this._frustumDirty=this._viewDirty=!0}_recomputeFrustum(){this._frustumDirty&&(w.fromMatrix(this.viewMatrix,this.projectionMatrix,this._frustum),this._frustumDirty=!1)}_ensureViewClean(){this._viewDirty&&(m.lookAt(this._viewMatrix,this.eye,this.center,this.up),f.set(this._viewForward,-this._viewMatrix[2],-this._viewMatrix[6],-this._viewMatrix[10]),f.set(this._viewUp,this._viewMatrix[1],this._viewMatrix[5],this._viewMatrix[9]),f.set(this._viewRight,this._viewMatrix[0],this._viewMatrix[4],this._viewMatrix[8]),
this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0)}};g.__decorate([h.property()],c.Camera.prototype,"_center",void 0);g.__decorate([h.property()],c.Camera.prototype,"_up",void 0);g.__decorate([h.property()],c.Camera.prototype,"_viewport",void 0);g.__decorate([h.property()],c.Camera.prototype,"_padding",void 0);g.__decorate([h.property()],c.Camera.prototype,"_fov",void 0);g.__decorate([h.property()],c.Camera.prototype,"_nearFar",void 0);g.__decorate([h.property()],c.Camera.prototype,"_pixelRatio",
void 0);g.__decorate([h.property()],c.Camera.prototype,"pixelRatio",null);g.__decorate([h.property()],c.Camera.prototype,"eye",null);g.__decorate([h.property()],c.Camera.prototype,"center",null);g.__decorate([h.property()],c.Camera.prototype,"up",null);g.__decorate([h.property({readOnly:!0})],c.Camera.prototype,"nearFar",null);g.__decorate([h.property()],c.Camera.prototype,"near",null);g.__decorate([h.property()],c.Camera.prototype,"far",null);g.__decorate([h.property()],c.Camera.prototype,"viewport",
null);g.__decorate([h.property({readOnly:!0})],c.Camera.prototype,"screenViewport",null);g.__decorate([h.property({readOnly:!0})],c.Camera.prototype,"screenPadding",null);g.__decorate([h.property()],c.Camera.prototype,"x",null);g.__decorate([h.property()],c.Camera.prototype,"y",null);g.__decorate([h.property()],c.Camera.prototype,"width",null);g.__decorate([h.property()],c.Camera.prototype,"height",null);g.__decorate([h.property()],c.Camera.prototype,"fullWidth",null);g.__decorate([h.property()],
c.Camera.prototype,"fullHeight",null);g.__decorate([h.property({readOnly:!0})],c.Camera.prototype,"_aspect",null);g.__decorate([h.property()],c.Camera.prototype,"padding",null);g.__decorate([h.property({readOnly:!0})],c.Camera.prototype,"projectionMatrix",null);g.__decorate([h.property({readOnly:!0})],c.Camera.prototype,"inverseProjectionMatrix",null);g.__decorate([h.property()],c.Camera.prototype,"fov",null);g.__decorate([h.property()],c.Camera.prototype,"fovX",null);g.__decorate([h.property()],
c.Camera.prototype,"fovY",null);c.Camera=x=g.__decorate([E.subclass("esri.views.3d.webgl-engine.lib.Camera")],c.Camera);const d=t.create(),v=p.create(),l=q.create(),y=q.create(),z=A.createRenderScreenPointArray3();c.PaddingSide=void 0;(function(a){a[a.TOP=0]="TOP";a[a.RIGHT=1]="RIGHT";a[a.BOTTOM=2]="BOTTOM";a[a.LEFT=3]="LEFT"})(c.PaddingSide||(c.PaddingSide={}));Object.defineProperty(c,Symbol.toStringTag,{value:"Module"})});