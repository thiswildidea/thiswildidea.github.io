// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/has ../../../../chunks/vec4f64 ../../support/buffer/InterleavedLayout ../core/shaderLibrary/ShaderOutput ../lib/basicInterfaces ../lib/GLMaterial ../lib/OrderIndependentTransparency ../lib/RenderSlot ../lib/VertexAttribute ./DefaultBufferWriter ./TriangleMaterial ./VisualVariablePassParameters ../shaders/ColorMaterialTechnique ../shaders/ColorMaterialTechniqueConfiguration".split(" "),function(f,h,k,l,c,m,n,p,d,e,q,r,t,u,v){class w extends r.TriangleMaterial{constructor(a){super(a,
new g);this.supportsEdges=!0;this._configuration=new v.ColorMaterialTechniqueConfiguration}getConfiguration(a,b){this._configuration.output=a;this._configuration.cullFace=this.parameters.cullFace;this._configuration.hasVertexColors=this.parameters.hasVertexColors&&!this.parameters.vvColor;this._configuration.hasSlicePlane=this.parameters.hasSlicePlane;this._configuration.transparent=this._isTransparent;this._configuration.polygonOffset=this.parameters.polygonOffset;this._configuration.writeDepth=
this.parameters.writeDepth;this._configuration.hasOccludees=this.parameters.hasOccludees;this._configuration.transparencyPassType=b.transparencyPassType;this._configuration.enableOffset=b.camera.relativeElevation<p.OITPolygonOffsetLimit;this._configuration.multipassEnabled=b.multipassEnabled;this._configuration.cullAboveGround=b.multipassTerrain.cullAboveGround;this._configuration.vvColor=!!this.parameters.vvColor;return this._configuration}produces(a,b){return b===c.ShaderOutput.Color||b===c.ShaderOutput.Alpha||
b===c.ShaderOutput.Highlight||b===c.ShaderOutput.Depth&&this.parameters.writeLinearDepth||b===c.ShaderOutput.ObjectAndLayerIdColor?a===d.RenderSlot.DRAPED_MATERIAL?!0:b===c.ShaderOutput.Highlight?a===d.RenderSlot.OPAQUE_MATERIAL:a===(this._isTransparent?this.parameters.writeDepth?d.RenderSlot.TRANSPARENT_MATERIAL:d.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:d.RenderSlot.OPAQUE_MATERIAL):!1}createGLMaterial(a){return new x(a)}createBufferWriter(){const a=l.newLayout().vec3f(e.VertexAttribute.POSITION);
h("enable-feature:objectAndLayerId-rendering")&&a.vec4u8(e.VertexAttribute.OBJECTANDLAYERIDCOLOR);this.parameters.vvColor?a.f32(e.VertexAttribute.COLORFEATUREATTRIBUTE):a.vec4u8(e.VertexAttribute.COLOR);return new q.DefaultBufferWriter(a)}get _isTransparent(){return 1>this.parameters.color[3]||this.parameters.forceTransparentMode}}class x extends n{_updateOccludeeState(a){a.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:a.hasOccludees})}beginSlot(a){this._output!==
c.ShaderOutput.Color&&this._output!==c.ShaderOutput.Alpha||this._updateOccludeeState(a);return this.ensureTechnique(u.ColorMaterialTechnique,a)}}class g extends t.VisualVariablePassParameters{constructor(){super(...arguments);this.color=k.ZEROS;this.forceTransparentMode=!1;this.writeDepth=!0;this.hasSlicePlane=this.polygonOffset=this.hasVertexColors=this.writeLinearDepth=!1;this.cullFace=m.CullFaceOptions.None;this.hasOccludees=!1}}f.ColorMaterial=w;f.Parameters=g;Object.defineProperty(f,Symbol.toStringTag,
{value:"Module"})});