// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/Logger ../../../../core/mathUtils ../../../../core/screenUtils ../../../../chunks/vec2 ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../chunks/vec4f64 ../../../../geometry/support/frustum ../../../../geometry/support/lineSegment ../../../../geometry/support/plane ../core/shaderLibrary/ShaderOutput ../lib/GLMaterial ../lib/Material ../lib/RenderSlot ../lib/Util ../lib/VertexAttribute ./DefaultBufferWriter ./DefaultLayouts ../shaders/NativeLineTechnique ../shaders/NativeLineTechniqueConfiguration".split(" "),
function(G,U,V,A,W,e,p,X,D,v,c,E,Y,M,N,Z,H,aa,O,ba,ca){class da extends M.Material{constructor(a){super(a,new P);this._configuration=new ca.NativeLineTechniqueConfiguration}getConfiguration(a){this._configuration.output=a;this._configuration.hasSlicePlane=this.parameters.hasSlicePlane;this._configuration.hasVertexColors=this.parameters.hasVertexColors;this._configuration.transparent=1>this.parameters.color[3]||1>this.parameters.width;this._configuration.hasOccludees=this.parameters.hasOccludees;return this._configuration}intersect(a,
b,n,l,q,F){if(n.options.selectionMode&&a.visible)if(Z.isTranslationMatrix(b)){q=a.attributes.get(H.VertexAttribute.POSITION).data;var f=n.camera,m=ea;W.copy(m,n.point);e.set(B[0],m[0]-2,m[1]+2,0);e.set(B[1],m[0]+2,m[1]+2,0);e.set(B[2],m[0]+2,m[1]-2,0);e.set(B[3],m[0]-2,m[1]-2,0);for(a=0;4>a;a++)if(!f.unprojectFromRenderScreen(B[a],t[a]))return;c.fromPoints(f.eye,t[0],t[1],I);c.fromPoints(f.eye,t[1],t[2],J);c.fromPoints(f.eye,t[2],t[3],K);c.fromPoints(f.eye,t[3],t[0],L);l=Number.MAX_VALUE;a=0;for(let g=
0;g<q.length-5;g+=3)if(h[0]=q[g]+b[12],h[1]=q[g+1]+b[13],h[2]=q[g+2]+b[14],k[0]=q[g+3]+b[12],k[1]=q[g+4]+b[13],k[2]=q[g+5]+b[14],!(0>c.signedDistance(I,h)&&0>c.signedDistance(I,k)||0>c.signedDistance(J,h)&&0>c.signedDistance(J,k)||0>c.signedDistance(K,h)&&0>c.signedDistance(K,k)||0>c.signedDistance(L,h)&&0>c.signedDistance(L,k))){f.projectToRenderScreen(h,w);f.projectToRenderScreen(k,x);if(0>w[2]&&0<x[2]){e.subtract(r,h,k);var d=f.frustum;d=-c.signedDistance(d[D.PlaneIndex.NEAR],h)/e.dot(r,c.normal(d[D.PlaneIndex.NEAR]));
e.scale(r,r,d);e.add(h,h,r);f.projectToRenderScreen(h,w)}else if(0<w[2]&&0>x[2])e.subtract(r,k,h),d=f.frustum,d=-c.signedDistance(d[D.PlaneIndex.NEAR],k)/e.dot(r,c.normal(d[D.PlaneIndex.NEAR])),e.scale(r,r,d),e.add(k,k,r),f.projectToRenderScreen(k,x);else if(0>w[2]&&0>x[2])continue;w[2]=0;x[2]=0;d=v.distance2(v.fromPoints(w,x,Q),m);d<l&&(l=d,e.copy(R,h),e.copy(S,k),a=g/3)}b=n.rayBegin;n=n.rayEnd;4>l&&(l=Number.MAX_VALUE,v.closestLineSegmentPoint(v.fromPoints(R,S,Q),v.fromPoints(b,n,fa),y)&&(e.subtract(y,
y,b),l=e.length(y),e.scale(y,y,1/l),l/=e.distance(b,n)),F(l,y,a,!1))}else U.getLogger("esri.views.3d.webgl-engine.materials.NativeLineMaterial").error("intersection assumes a translation-only matrix")}intersectDraped(a,b,n,l,q,F){if(n.options.selectionMode){b=a.attributes.get(H.VertexAttribute.POSITION).data;var f=a.attributes.get(H.VertexAttribute.SIZE);n=l[0];l=l[1];a=(((f?f.data[0]:0)+1)/2+4)*a.screenToWorldRatio;f=Number.MAX_VALUE;var m=0;for(let z=0;z<b.length-5;z+=3){var d=b[z],g=b[z+1],C=n-
d,u=l-g;d=b[z+3]-d;g=b[z+4]-g;const T=V.clamp((d*C+g*u)/(d*d+g*g),0,1);C=d*T-C;u=g*T-u;u=C*C+u*u;u<f&&(f=u,m=z/3)}f<a*a&&q(F.dist,F.normal,m,!1)}}produces(a,b){return(b===E.ShaderOutput.Color||b===E.ShaderOutput.Highlight||b===E.ShaderOutput.ObjectAndLayerIdColor)&&(a===N.RenderSlot.OPAQUE_MATERIAL||a===N.RenderSlot.DRAPED_MATERIAL)}createGLMaterial(a){return new ha(a)}createBufferWriter(){return new aa.DefaultBufferWriter(this.parameters.hasVertexColors?O.PositionColorLayout:O.PositionLayout)}}class ha extends Y{_updateOccludeeState(a){a.hasOccludees!==
this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:a.hasOccludees})}beginSlot(a){this._output===E.ShaderOutput.Color&&this._updateOccludeeState(a);return this.ensureTechnique(ba.NativeLineTechnique,a)}}class P extends M.MaterialParameters{constructor(){super(...arguments);this.color=X.ONES;this.hasSlicePlane=this.hasVertexColors=!1;this.width=1;this.hasOccludees=!1}}const h=p.create(),k=p.create(),r=p.create(),y=p.create(),w=A.createRenderScreenPointArray3(),x=A.createRenderScreenPointArray3(),
R=p.create(),S=p.create(),Q=v.create(),fa=v.create(),ea=p.create(),B=[A.createRenderScreenPointArray3(),A.createRenderScreenPointArray3(),A.createRenderScreenPointArray3(),A.createRenderScreenPointArray3()],t=[p.create(),p.create(),p.create(),p.create()],I=c.create(),J=c.create(),K=c.create(),L=c.create();G.NativeLineMaterial=da;G.Parameters=P;Object.defineProperty(G,Symbol.toStringTag,{value:"Module"})});