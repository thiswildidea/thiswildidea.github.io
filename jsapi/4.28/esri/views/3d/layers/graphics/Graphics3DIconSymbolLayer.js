// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("require exports ../../../../Color ../../../../symbols ../../../../core/asyncUtils ../../../../core/Error ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/screenUtils ../../../../core/urlUtils ../../../../chunks/vec2f64 ../../../../chunks/vec3f64 ../../../../chunks/vec4f64 ../../../../geometry/projection/projectPointToVector ../../../../geometry/support/aaBoundingBox ../../../../support/arcadeOnDemand ../../../../symbols/support/IconSymbol3DLayerResource ../../../../symbols/support/utils ../../../2d/arcade/callExpressionWithFeature ./constants ./ElevationAligners ./elevationAlignmentUtils ./Graphics3DDrapedGraphicLayer ./Graphics3DObject3DGraphicLayer ./Graphics3DSymbolLayer ./graphicUtils ./interfaces ./placementUtils ./pointUtils ../support/FastSymbolUpdates ../../support/engineContent/sdfPrimitives ../../terrain/OverlayRenderer ../../webgl-engine/lib/GeometryUtil ../../webgl-engine/lib/RenderGeometry ../../webgl-engine/lib/Texture ../../webgl-engine/materials/HUDMaterial ../../../../symbols/CIMSymbol".split(" "),
function(I,C,J,w,K,D,L,x,p,M,q,r,E,N,O,P,Q,R,S,T,U,l,V,W,X,Y,y,z,A,t,u,Z,F,aa,ba,G,ca){function B(a){return null==a?!1:"cross"===a||"x"===a}const H=r.fromValues(0,0,1);w=u.defaultTexSize;const m=u.defaultSymbolSizeRatio,da=[m/2,m/2,1-m/2,1-m/2];class v extends X.Graphics3DSymbolLayer{getCachedSize(){return{size:this._getIconSize()}}constructor(a,c,b,d){super(a,c,b,d);this._cimLayers=null;this._cimSymbolMaterials=new Map;this._cimSymbolTextures=new Map;this._size=this._cimScaleFactorOrFunction=this._cimRequiredFields=
this._cimMaterialParametersInfo=null;this._symbolTextureRatio=1;this._outlineSize=0;this._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!0}}async doLoad(a){this._validateOrThrow();const c=this._prepareMaterialParameters();var b=this._getPrimitive();if(null!=b)this._prepareResourcesPrimitive(c,b);else{b=R.getIconHref(this.symbolLayer);const d=M.dataComponents(b);d&&"application/json"===d.mediaType?await this._prepareResourcesCIM(c,JSON.parse(d.data),a):await this._prepareResourcesHref(c,
b,a)}}_validateOrThrow(){if(!this._drivenProperties.size){var a=Y.validateSymbolLayerSize(this._getIconSize());if(a)throw new D("graphics3diconsymbollayer:invalid-size",a);}}_getIconSize(){var a=this.symbolLayer;a=Math.round(null!=a.size?p.pt2px(a.size):16);return this._drivenProperties.size?Math.max(a,64):a}_generateTextureCIM(a){const c=this._getGraphicHash(a);let b=""===c?null:this._cimSymbolTextures.get(c);b||(a=this._context.sharedResources.cimSymbolRasterizer.rasterizeCIMSymbol3D(this._cimLayers,
a,"esriGeometryPoint",{scaleFactor:this._cimScaleFactorOrFunction},void 0,void 0),this._cimMaterialParametersInfo.anchorPosition=this._getAnchorPos("relative",a.anchorPosition),b=new ba.Texture(a.imageData,{width:a.imageData.width,height:a.imageData.height}),this._cimSymbolTextures.set(c,b),this._context.stage.add(b));return b}_prepareMaterialParameters(){const a={anchorPosition:this._getAnchorPos(this.symbolLayer.anchor,this.symbolLayer.anchorPosition)},c=this.symbol;if(c&&"point-3d"===c.type&&c.hasVisibleVerticalOffset()){const {screenLength:b,
minWorldLength:d,maxWorldLength:e}=c.verticalOffset;a.verticalOffset={screenLength:p.pt2px(b),minWorldLength:d||0,maxWorldLength:null!=e?e:Infinity}}this._context.screenSizePerspectiveEnabled&&(a.screenSizePerspective=this._context.sharedResources.screenSizePerspectiveSettings);a.occlusionTest=!0;a.hasSlicePlane=this._context.slicePlaneEnabled;return a}_prepareResourcesPrimitive(a,c){var b=this._getOutlineSize();if(B(c)&&0===b)throw Error("Nothing to render");this._outlineSize=b;a.color=this._getFillColor();
a.outlineColor=this._getOutlineColor();a.outlineSize=this._outlineSize;null!=this._context.sharedResources.textures&&(this._textureHandle=b=this._context.sharedResources.textures.fromData(`${c}-icon`,()=>u.createTexture(c)),a.textureId=b.texture.id);a.textureIsSignedDistanceField=!0;a.sampleSignedDistanceFieldTexelCenter=u.requiresHalfTexelOffset(c);a.distanceFieldBoundingBox=da;b=this._getIconSize();this._size=[b,b];this._symbolTextureRatio=1/m;this._createMaterialAndAddToStage(a,this._context.stage)}async _prepareResourcesHref(a,
c,b){this._outlineSize=this._getOutlineSize();a.color=this._getFillColor();a.outlineColor=this._getOutlineColor();a.outlineSize=this._outlineSize;a.textureIsSignedDistanceField=!1;const d=this._getIconSize(),e=d*this._context.graphicsCoreOwner.view.state.rasterPixelRatio;if(null!=this._context.sharedResources.textures){b=await K.result(this._context.sharedResources.textures.fromUrl(c,e,{signal:b}));if(!1===b.ok)throw x.throwIfAbortError(b.error),new D("graphics3diconsymbollayer:request-failed",`Failed to load (Request for icon resource failed: ${c})`);
this._textureHandle=b.value;c=b.value.texture;b=c.parameters.width/c.parameters.height;this._size=1<b?[d,Math.round(d/b)]:[Math.round(d*b),d];a.textureId=c.id}this._createMaterialAndAddToStage(a,this._context.stage)}async _prepareResourcesCIM(a,c,b){c=new ca({data:c});if(!this._context.sharedResources.cimSymbolRasterizer){var d=(await new Promise((h,g)=>I(["../../../../symbols/cim/CIMSymbolRasterizer"],h,g))).CIMSymbolRasterizer;x.throwIfAborted(b);this._context.sharedResources.cimSymbolRasterizer||
(this._context.sharedResources.cimSymbolRasterizer=new d(this._context.renderCoordsHelper.spatialReference,!0))}d=this._context.layer.fields?this._context.layer.fields.map(h=>h.toJSON()):null;this._cimLayers=await this._context.sharedResources.cimSymbolRasterizer.analyzeCIMSymbol3D(c,d,this._context.renderer&&"dictionary"===this._context.renderer.type?this._context.renderer.fieldMap:null,"esriGeometryPoint",{signal:b});let e;if(this._context.renderer&&"dictionary"===this._context.renderer.type&&this._context.renderer.scaleExpression)if(c=
this._context.renderer,isNaN(c.scaleExpression)){const h=await P.createRendererExpression(c.scaleExpression,this._context.layer.spatialReference,d);e=(g,n,ea)=>{g=S(h,g,{$view:ea},"esriGeometryPoint",n);return null!==g?g:1}}else var f=Number(c.scaleExpression);this._cimScaleFactorOrFunction=f||e||1;f=this._context.renderer?await this._context.renderer.getRequiredFields(this._context.layer.fieldsIndex):[];x.throwIfAborted(b);const k=this._context.layer.fieldsIndex;this._cimRequiredFields=f.map(h=>
k.get(h).name);this._cimMaterialParametersInfo=a;this._cimMaterialParametersInfo.color=this._getFillColor();this._cimMaterialParametersInfo.outlineColor=[0,0,0,0];this._cimMaterialParametersInfo.outlineSize=0;this._cimMaterialParametersInfo.textureIsSignedDistanceField=!1}_getPrimitive(){return this.symbolLayer.resource&&this.symbolLayer.resource.href?null:this.symbolLayer.resource&&this.symbolLayer.resource.primitive||Q.defaultPrimitive}_getOutlineSize(){var a=0;a=this.symbolLayer;if(null!=a.outline?.size)return Math.max(p.pt2px(a.outline.size),
0);a=this._getPrimitive();a=B(a)?1.5:0;return Math.max(a,0)}_getOutlineColor(){const a=this._getLayerOpacity(),c=this.symbolLayer?.outline?.color;if(null!=c){const b=J.toUnitRGB(c);return[b[0],b[1],b[2],c.a*a]}return[0,0,0,0]}_getFillColor(){if(B(this._getPrimitive()))return T.transparentUnit;const a=null==this._getPrimitive();return this._getCombinedOpacityAndColor(this.symbolLayer?.material?.color,{hasIntrinsicColor:a})}_getAnchorPos(a,c){return"relative"===a?q.fromValues((c.x||0)+.5,-(c.y||0)+
.5):a in z.namedAnchorToHUDMaterialAnchorPos?z.namedAnchorToHUDMaterialAnchorPos[a]:z.namedAnchorToHUDMaterialAnchorPos.center}_createMaterialAndAddToStage(a,c){if(this._cimLayers){this._fastUpdates=null;let b=a.textureId?this._cimSymbolMaterials.get(a.textureId):null;b||(b=new G.HUDMaterial(a),this._cimSymbolMaterials.set(a.textureId??0,b),c.add(b));return b}(this._fastUpdates=t.initFastSymbolUpdatesState(this._context.renderer,this._fastVisualVariableConvertOptions()))&&(a={...a,...this._fastUpdates.materialParameters});
this._materials[0]=new G.HUDMaterial(a);c.add(this._materials[0]);return this._materials[0]}_setDrapingDependentMaterialParameters(){this.draped&&(this._forEachMaterial(a=>{a.setParameters({verticalOffset:null,screenSizePerspective:null,occlusionTest:!1,hasSlicePlane:!1,shaderPolygonOffset:0,isDraped:this.draped})}),this.layerOpacityChanged())}destroy(){super.destroy();this._forEachMaterial(a=>this._context.stage.remove(a));this._materials.length=0;this._cimSymbolMaterials.clear();this._cimSymbolTextures.forEach(a=>
this._context.stage.remove(a));this._cimSymbolTextures.clear();this._textureHandle=L.releaseMaybe(this._textureHandle)}_getScaleFactor(a,c){if(this._drivenProperties.size&&a.size){for(let b=0;3>b;b++){const d=a.size[b];d&&"symbol-value"!==d&&"proportional"!==d&&(a.size[b]=p.pt2px(d))}if("symbol-value"===a.size[0])return 1;if(isFinite(+a.size[0]))return+a.size[0]/c;if(isFinite(+a.size[2]))return+a.size[2]/c}return 1}createGraphics3DGraphic(a){const c=a.graphic;if(!this._validateGeometry(c.geometry))return null;
var b=[0,0];let d;if(this._cimLayers){if(!this._cimLayers.length)return null;var e=this._generateTextureCIM(c);d=this._createMaterialAndAddToStage({textureId:e.id,...this._cimMaterialParametersInfo},this._context.stage);b=[e.parameters.width,e.parameters.height]}else b=this._size,d=this._materials[0];e=A.placePointOnGeometry(c.geometry);if(null==e)return this.logger.warn(`unsupported geometry type for icon symbol: ${c.geometry.type}`),null;var f=a.renderingInfo;const k=this._getVertexOpacityAndColor(f);
let h=1;this._fastUpdates?.visualVariables.size||(h=this._getScaleFactor(f,b[0]>b[1]?b[0]:b[1]));h*=this._symbolTextureRatio;b=q.fromValues(b[0]*h,b[1]*h);f=this.setGraphicElevationContext(c);this.ensureDrapedStatus("on-the-ground"===f.mode)&&this._setDrapingDependentMaterialParameters();return this.draped?this._createAsOverlay(c,e,d,k,b,a.layer.uid):this._createAs3DShape(c,e,d,k,b,f,c.uid)}layerOpacityChanged(){const a=this._getFillColor(),c=this._getOutlineColor();this._forEachMaterial(b=>{b.setParameters({color:a});
b.setParameters({outlineColor:c})})}layerElevationInfoChanged(a,c,b){const d=this._elevationContext.mode;b=l.elevationModeChangeUpdateType(v.elevationModeChangeTypes,b,d);if(b!==l.SymbolUpdateType.UPDATE)return b;const e=l.needsElevationUpdates2D(d)||"absolute-height"===d;return this.updateGraphics3DGraphicElevationInfo(a,c,()=>e)}slicePlaneEnabledChanged(){this.draped||this._forEachMaterial(a=>{a.setParameters({hasSlicePlane:this._context.slicePlaneEnabled})});return!0}physicalBasedRenderingChanged(){return!0}get pixelRatioChanged(){return null!=
this._getPrimitive()}applyRendererDiff(a,c){for(const b in a.diff)switch(b){case "visualVariables":if(t.updateFastSymbolUpdatesState(this._fastUpdates,c,this._fastVisualVariableConvertOptions()))this._materials[0]?.setParameters(this._fastUpdates.materialParameters);else return y.ApplyRendererDiffResult.RecreateSymbol;break;default:return y.ApplyRendererDiffResult.RecreateSymbol}return y.ApplyRendererDiffResult.FastUpdate}_defaultElevationInfoNoZ(){return fa}_createAs3DShape(a,c,b,d,e,f,k){a=this.getFastUpdateAttrValues(a);
const h=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:k,layerUid:this._context.layer.uid});d=F.createPointGeometry(b,H,null,d,e,ha,null,a,h);k=A.createStageObject(this._context,c,d,f,k);if(null==k)return null;const g=new W.Graphics3DObject3DGraphicLayer(this,k.object,[d],null,null,U.perObjectElevationAligner,f);g.alignedSampledElevation=k.sampledElevation;g.needsElevationUpdates=l.needsElevationUpdates2D(f.mode)||"absolute-height"===f.mode;g.getScreenSize=this._createScreenSizeGetter(e,
a);g.calculateRelativeScreenBounds=n=>b.calculateRelativeScreenBounds(g.getScreenSize(),1,n);A.extendPointGraphicElevationContext(g,c,this._context.elevationProvider);return g}_createAsOverlay(a,c,b,d,e,f){b.renderPriority=this._renderPriority;const k=E.create();N.projectPointToVector(c,k,this._context.overlaySR);k[2]=Z.drapedZ;c=this._context.clippingExtent;if(null!=c&&!O.containsPoint(c,k))return null;c=this.getFastUpdateAttrValues(a);const h=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:a.uid,
layerUid:this._context.layer.uid});d=F.createPointGeometry(b,H,k,d,e,null,null,c,h);a=new aa.RenderGeometry(d,{layerUid:f,graphicUid:a.uid});const g=new V.Graphics3DDrapedGraphicLayer(this,[a],null,this._context.drapeSourceRenderer);g.getScreenSize=this._createScreenSizeGetter(e,c);g.calculateRelativeScreenBounds=n=>b.calculateRelativeScreenBounds(g.getScreenSize(),1,n);return g}_createScreenSizeGetter(a,c){const b=this._outlineSize+2;if(this._fastUpdates&&c){const f=a[0]/this._symbolTextureRatio,
k=a[1]/this._symbolTextureRatio;return(h=q.create())=>{const [g,n]=t.evaluateModelTransformScale(ia,this._fastUpdates.materialParameters,c);h[0]=g*f+b;h[1]=n*k+b;return h}}const d=a[0]/this._symbolTextureRatio+b,e=a[1]/this._symbolTextureRatio+b;return(f=q.create())=>{f[0]=d;f[1]=e;return f}}_fastVisualVariableConvertOptions(){var a=Math.max(this._size[0],this._size[1]);const c=r.fromValues(a,a,a),b=p.px2pt(1);a*=b;a=r.fromValues(a,a,a);return new t.ConvertOptions({size:!0,color:!0,rotation:!0,opacity:!1},
c,a,b)}_getGraphicHash(a){let c="";for(const b of this._cimRequiredFields)c+=b+a.attributes[b];return c}_forEachMaterial(a){this._materials.forEach(a);this._cimSymbolMaterials.forEach(a)}test(){return{...super.test(),material:this._materials[0]}}}v.PRIMITIVE_SIZE=[w*m,w*m];v.elevationModeChangeTypes={definedChanged:l.SymbolUpdateType.UPDATE,staysOnTheGround:l.SymbolUpdateType.NONE,onTheGroundChanged:l.SymbolUpdateType.RECREATE};const fa={mode:"relative-to-ground",offset:0},ha=E.fromValues(0,0,0,1),
ia=r.create();C.Graphics3DIconSymbolLayer=v;Object.defineProperty(C,Symbol.toStringTag,{value:"Module"})});