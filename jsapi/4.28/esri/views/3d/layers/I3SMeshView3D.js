// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("require exports ../../../chunks/tslib.es6 ../../../Color ../../../Graphic ../../../core/arrayUtils ../../../core/ByteSizeUnit ../../../core/Collection ../../../core/handleUtils ../../../core/has ../../../core/Logger ../../../core/MapUtils ../../../core/maybe ../../../core/PooledArray ../../../core/promiseUtils ../../../core/reactiveUtils ../../../core/scheduling ../../../core/typedArrayUtil ../../../core/unitUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/accessorSupport/decorators/subclass ../../../chunks/mat3 ../../../chunks/mat3f64 ../../../chunks/mat4 ../../../chunks/mat4f64 ../../../chunks/quatf64 ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../chunks/vec4 ../../../chunks/vec4f64 ../../../core/support/UpdatingHandles ../../../geometry/ellipsoidUtils ../../../geometry/projection/localLinearScaleFactors ../../../geometry/projection/projectBoundingSphere ../../../geometry/projection/projectBuffer ../../../geometry/projection/projectors ../../../geometry/projection/projectVectorToVector ../../../geometry/support/aaBoundingBox ../../../geometry/support/aaBoundingRect ../../../geometry/support/DoubleArray ../../../geometry/support/FloatArray ../../../geometry/support/Indices ../../../chunks/sphere ../../../geometry/support/UByteArray ../../../layers/LayerConstants ../../../layers/graphics/controllers/I3SOnDemandController ../../../layers/support/fieldUtils ../../../layers/support/SceneModification ../../../renderers/visualVariables/support/visualVariableUtils ../../../support/arcadeOnDemand ../../../support/basemapUtils ../../../symbols/Symbol3D ../../../symbols/support/unitConversionUtils ./I3SMeshViewLabeler ./I3SMeshWorkerHandle ./II3SMeshView3D ./SceneLayerWorker ./graphics/graphicUtils ./graphics/Labeler ./i3s/enums ./i3s/Highlights ./i3s/I3SAsyncElevationUpdater ./i3s/I3SCrossfadeHelper ./i3s/I3SElevationProvider ./i3s/I3SGeometryUtil ./i3s/I3SIntersectionHandler ./i3s/I3SMaterialUtil ./i3s/I3SNode ./i3s/I3SOverrides ./i3s/I3SProjectionUtil ./i3s/I3SUtil ./i3s/IDBCache ./i3s/IDBMockCache ./support/attributeUtils ./support/symbolColorUtils ../support/debugFlags ../support/extentUtils ../support/orientedBoundingBox ../support/updatingProperties ../support/buffer/glUtil ../webgl-engine/collections/Component/ComponentObject ../webgl-engine/collections/Component/SourceGeometry ../webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl ../webgl-engine/lib/BasisUtil ../webgl-engine/lib/edgeRendering/interfaces".split(" "),
function(Sa,w,q,Ta,aa,ra,Ua,Va,Wa,ia,Xa,sa,D,Ya,S,E,Za,ta,ua,r,Vb,$a,ab,bb,va,wa,cb,F,T,db,eb,fb,gb,hb,ib,jb,xa,ja,U,V,ya,kb,lb,mb,nb,ob,pb,qb,rb,za,sb,tb,ub,Aa,vb,Ba,y,ba,Ca,wb,L,xb,yb,Da,zb,Ab,Bb,W,ka,Cb,la,t,Db,Eb,ma,ca,X,Ea,da,Fb,Gb,na,Hb,ea,Fa,fa){function M(g,a){S.isAbortError(g)||I.warn("Error while processing edges. Edges on this layer might not display correctly",a,g)}function Ga(g){if(null==g)return!1;const a=g.metallicRoughness;return a&&0<=a.baseColorTextureId||a&&0<=a.metallicRoughnessTextureId||
0<=g.normalTextureId||0<=g.emissiveTextureId||0<=g.occlusionTextureId}function Ha(g){return null!=g&&ta.isArrayBuffer(g.data)}function Ia(g,a){g=1024+g.interleavedVertexData.byteLength+(g.indices?g.indices.byteLength:0)+g.positionData.data.byteLength+g.positionData.indices.byteLength;if(null!=a)for(const b of a)null!=b&&ta.isArrayBuffer(b.data)&&(g+=b.data.byteLength);return g}function Ja(g,a){return a.byteSize>Ib?(I.warn(`Node is too big to store in IndexedDB cache: ${g.id} (${a.byteSize} bytes)`),
!1):0<a.byteSize}function Jb(g){if(0===g.length)return null;const a=new Float64Array(10*g.length);g.forAll((b,c)=>{let d=b.serviceObb;null==d&&(d=Kb,F.copy(d.center,b.mbs),d.halfSize[0]=d.halfSize[1]=d.halfSize[2]=b.mbs[3]);b=10*c;a[b]=d.center[0];a[b+1]=d.center[1];a[b+2]=d.center[2];a[b+3]=d.halfSize[0];a[b+4]=d.halfSize[1];a[b+5]=d.halfSize[2];a[b+6]=d.quaternion[0];a[b+7]=d.quaternion[1];a[b+8]=d.quaternion[2];a[b+9]=d.quaternion[3]});return a}function Y(g,a){g.forEach(b=>b.opacity=a)}function Ka(g){return a=>
{if(g.immediate)return g.immediate.schedule(a);console.error("Error no immediate schudler");throw Error("cant find immediate scheduler");}}const I=Xa.getLogger("esri.views.3d.layers.I3SMeshView3D"),La=[1,1,1,1];class Lb extends Da.NodeCrossfadeMetaData{constructor(g,a,b,c,d,e,f,h,l){super();this.node=g;this.featureIds=a;this.objectHandle=b;this.cachedRendererVersion=c;this.attributeInfo=d;this.material=e;this.textures=f;this.anchorIds=h;this.anchors=l;this.cachedElevationAnchors=null;this.cachedEdgeMaterials=
[];this.edgeMemoryUsage=0}}var P;(function(g){g[g.CastShadows=4]="CastShadows";g[g.Pickable=5]="Pickable"})(P||(P={}));const Ib=100*Ua.ByteSizeUnit.MEGABYTES;var G;(function(g){g[g.ADD=0]="ADD";g[g.REMOVE=1]="REMOVE";g[g.UPDATE=2]="UPDATE"})(G||(G={}));const Ma=U.create(),Na=V.create(),Mb=V.create(),Kb=da.create(),Z=[0,0,0,0],Nb=new Ta([0,0,0,0]),Oa=mb.fromValues(0,0,0,0);w.ElevationMode=void 0;(function(g){g[g.Absolute=0]="Absolute";g[g.RelativeToGround=1]="RelativeToGround";g[g.OnTheGround=2]="OnTheGround"})(w.ElevationMode||
(w.ElevationMode={}));const z=T.create(),Q=U.create();w.I3SMeshView3D=g=>{g=class extends g{constructor(...a){super(a);this._updatingHandles=new fb.UpdatingHandles;this._nodeId2Meta=new Map;this._nodeId2MetaReloading=new Map;this._i3sWasmLoaded=!1;this._snappingSourcesTrackers=[];this._hasLoadedPBRTextures=!1;this._asyncModuleLoading=0;this._addTasks=new Map;this._currentRenderer=null;this._rendererVersion=0;this._symbologyOverrideFields=this._symbologyOverride=this._symbologyFields=this._rendererFields=
this._opacityVariable=this._colorVariable=null;this._symbolInfos=new Map;this._visibleGeometryChangedSchedulerHandle=null;this._hasVertexColors=this._hasComponentData=!1;this._nodeColorOverride=null;this.updating=!0;this.holeFilling="auto";this.slicePlaneEnabled=this._hasData=this._hasTextures=this._hasColors=!1;this._modifications=[];this.ignoresMemoryFactor=!1;this._layerUrl="";this._elevationTask=this._cacheKeySuffix=null;this._filters=[];this._arcade=null;this._tmpAttributeOnlyGraphic=new aa(null,
null,{});this._crossfadeHelper=new Da.I3SCrossfadeHelper(this)}get lodCrossfadeoutDuration(){return 0}get lodCrossfadeinDuration(){return 0}get lodCrossfadeUncoveredDuration(){return 0}get layerUid(){return this.i3slayer&&this.i3slayer.uid}get sublayerUid(){return null}get layerId(){return this.i3slayer&&this.i3slayer.id}get sublayerId(){return null}get contentVisible(){return!this.suspended&&this._controller?.rootNodeVisible}get legendEnabled(){return this.contentVisible&&!0===this.i3slayer?.legendEnabled}get updatingProgressValue(){return this._controller?.updatingProgress??
0}get hasTexturesOrVertexColors(){return this._hasData?this._hasTextures||this._hasColors?"yes":"probably-not":"unknown"}get rendererTextureUsage(){return t.rendererNeedsTextures(this._currentRenderer)?this._usePBR||this._hasLoadedPBRTextures?L.TextureUsage.AllTexturesPBR:L.TextureUsage.AllTextures:this._usePBR||this._hasLoadedPBRTextures?L.TextureUsage.GeometryTexturesPBR:L.TextureUsage.GeometryTextures}get elevationOffset(){const a=null!=this.i3slayer?this.i3slayer.elevationInfo:null;if(null!=a&&
"absolute-height"===a.mode){const b=ua.getMetersPerVerticalUnitForSR(this.i3slayer.spatialReference),c=Aa.getMetersPerUnit(a.unit);return(a.offset??0)*c/b}return 0}get elevationInfo(){const a=null!=this.i3slayer?this.i3slayer.elevationInfo:null;if(null==a)return{mode:w.ElevationMode.Absolute,offset:0};var b=ua.getMetersPerVerticalUnitForSR(this.i3slayer.spatialReference);const c=Aa.getMetersPerUnit(a.unit);b=(a.offset??0)*c/b;switch(a.mode){case "absolute-height":return{mode:w.ElevationMode.Absolute,
offset:b};case "relative-to-ground":return{mode:w.ElevationMode.RelativeToGround,offset:b};case "on-the-ground":return{mode:w.ElevationMode.OnTheGround,offset:0};default:return{mode:w.ElevationMode.Absolute,offset:0}}}get supportedTextureEncodings(){return W.getSupportedEncodings(this.view._stage.renderView.capabilities)}get uncompressedTextureDownsamplingEnabled(){const a=0===(this.supportedTextureEncodings&L.TextureEncoding.DDS_S3TC);return this.view?.qualitySettings.sceneService.uncompressedTextureDownsamplingEnabled&&
a}get clientGeometry(){return this.i3sOverrides.geometryOverrides}get elevationRange(){var a=this._nodeId2Meta;let b=Infinity,c=-Infinity;for(const d of a.values()){if(null==d)continue;({node:{mbs:a}}=d);const [,e,f]=a;b=Math.min(b,e-f);c=Math.max(c,e+f)}return Number.isFinite(b)&&Number.isFinite(c)?{min:b,max:c}:null}initialize(){var a=ia("enable-feature:idb-mock-cache");this._idbCache=a?new Eb.IDBMockCache(this.view,a):new Db.IDBCache("esri-scenelayer-cache","geometries");this._preLoadBasis();this.addResolvingPromise(this.i3slayer.indexInfo);
a=this.view.resourceController;this.i3sOverrides=new Cb.I3SOverrides({view:this.view,layer:this.i3slayer,memoryController:a.memoryController});this._worker=new Ba.I3SMeshWorkerHandle(Ka(a));this.addResolvingPromise(this._worker.promise);a=this.i3slayer.store;this._worker.setLegacySchema(this.uid,a.defaultGeometrySchema);t.checkSceneLayerValid(this.i3slayer);t.checkSceneLayerCompatibleWithView(this.i3slayer,this.view);this._layerUrl=this.i3slayer.parsedUrl.path;this._controller=new pb({layerView:this,
worker:this._worker});this._geoMemoryEstimate=this._texMemoryEstimate=this._gpuMemoryEstimate=0;this._stage=this.view._stage;this._collection=this._stage.renderView.componentObjectCollection;this.resetHighlights();a=a.defaultGeometrySchema;if(this._isIntegratedMesh||!a)this._hasComponentData=!1;else{const b=a.featureAttributes;this._hasComponentData=!!(b&&b.faceRange&&b.id)}this._hasVertexColors=null!=(a?.vertexAttributes.color??null)&&!this.i3slayer.cachedDrawingInfo?.color;this._isIntegratedMesh||
(this._edgeView=this._stage.renderer.ensureEdgeView());this._memCache=this.view.resourceController.memoryController.newCache(`sl-${this.uid}`,b=>this._deleteComponentObject(b));this._intersectionHandler=new Bb.I3SIntersectionHandler({layerUid:this.layerUid,sublayerUid:this.sublayerUid,collection:this._collection,slicePlaneEnabled:this.slicePlaneEnabled,isGround:this._isIntegratedMesh,traverseNodeHierarchy:b=>null!=this._controller.index?.rootNode?this._controller.index.traverse(this._controller.index.rootNode,
c=>{var d=c.index;d=this._nodeId2Meta.get(d)||this._nodeId2MetaReloading.get(d);return b(c,null!=d?d.objectHandle:null)}):()=>{}});this._updatingHandles.add(()=>this.layerUid,b=>this._intersectionHandler.layerUid=b);this._updatingHandles.add(()=>this.sublayerUid,b=>this._intersectionHandler.sublayerUid=b);this._elevationProvider=new zb({layerView:this,intersectionHandler:this._intersectionHandler});this._hasLoadedPBRTextures=this._usePBR;this._updatingHandles.add(()=>this.view.clippingArea,()=>this._clippingAreaChanged(),
E.initial);this._updatingHandles.add(()=>this.fullOpacity,b=>this._opacityChange(b));this._updatingHandles.add(()=>this.slicePlaneEnabled,b=>this._slicePlaneEnabledChange(b));this._updatingHandles.add(()=>this.elevationOffset,(b,c)=>{this._reloadAll(c);this._controller.invalidateVisibilityObbs()});this._updatingHandles.add(()=>this.elevationInfo,(b,c)=>this._elevationInfoChanged(b,c),E.initial);this._updatingHandles.add(()=>!this.suspended&&this.elevationInfo.mode!==w.ElevationMode.Absolute,(b,c)=>
{b?this.addHandles(this.view.basemapTerrain.on("elevation-change",({extent:d})=>this._ensureElevationTask().addExtent(d)),"elevation-change"):c&&this.removeHandles("elevation-change")},E.initial);this._updatingHandles.add(()=>this._usePBR,b=>this._updatePBR(b));a=()=>{this._reloadAll();this.clearMemCache()};this._updatingHandles.add(()=>this.rendererTextureUsage,a);this._updatingHandles.add(()=>this.uncompressedTextureDownsamplingEnabled,a);this._updatingHandles.add(()=>this.contentVisible,b=>this._contentVisibleChanged(b),
E.initial);this._updatingHandles.add(()=>this.i3slayer.labelsVisible,()=>this._labelingChanged(),E.initial);this._updatingHandles.add(()=>this.i3slayer.labelingInfo,()=>this._labelingChanged(),E.initial);this._updatingHandles.add(()=>this._modifications,()=>this._modificationsChanged(),E.initial);this.addHandles([E.watch(()=>X.debugFlags.I3S_TREE_SHOW_TILES,b=>{if(b&&!this._treeDebugger){const c=this._controller.crsIndex;(new Promise((d,e)=>Sa(["./support/I3STreeDebugger"],d,e))).then(({I3STreeDebugger:d})=>
{!this._treeDebugger&&X.debugFlags.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new d({lv:this,view:this.view,nodeSR:c}))})}else b||X.debugFlags.I3S_TREE_SHOW_TILES||(this._treeDebugger=D.destroyMaybe(this._treeDebugger))},E.initial),E.watch(()=>X.debugFlags.I3S_SHOW_MODIFICATIONS,()=>this._showModifications(),E.initial)]);this._cacheKeySuffix=t.getCacheKeySuffix(this.i3slayer.spatialReference,this.view.renderSpatialReference);this._idbCache.init().catch(b=>I.warn(`Failed to initialize IndexedDB cache: ${b}`))}destroy(){this._clearAddTasks();
this._elevationTask=D.destroyMaybe(this._elevationTask);this.i3sOverrides=D.destroyMaybe(this.i3sOverrides);this._elevationProvider&&(this._elevationProvider.layerChanged(),this.view.elevationProvider.unregister(this._elevationProvider),this._elevationProvider=null);this._intersectionHandler&&(this._stage.view.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler),this._intersectionHandler=null);const a=this._worker;a&&(a.destroyContext(this.uid).then(()=>a.destroy()),this._worker=
null);this._removeAllNodeDataFromStage();this._memCache=D.destroyMaybe(this._memCache);this._edgeView=this._stage=this._collection=null;this._labeler=D.destroyMaybe(this._labeler);this._treeDebugger=D.destroyMaybe(this._treeDebugger);this._controller=D.destroyMaybe(this._controller);this._highlights.destroy();this._nodeId2Meta.clear();this._nodeId2MetaReloading.clear();this._crossfadeHelper=D.destroyMaybe(this._crossfadeHelper);this.emit("visible-geometry-changed");this._visibleGeometryChangedSchedulerHandle&&
(this._visibleGeometryChangedSchedulerHandle.remove(),this._visibleGeometryChangedSchedulerHandle=null);this._updatingHandles=D.destroyMaybe(this._updatingHandles)}_memEstimateTextureAdded(a){a=a.memoryEstimate;this._gpuMemoryEstimate+=a;this._texMemoryEstimate+=a;return a}_memEstimateTextureRemoved(a){null!=a&&(a=a.memoryEstimate,this._gpuMemoryEstimate-=a,this._texMemoryEstimate-=a)}_memEstimateGeometryAdded(a){a=this._collection.getObjectGPUMemoryUsage(a);this._gpuMemoryEstimate+=a;this._geoMemoryEstimate+=
a;return a}_memEstimateGeometryRemoved(a){a=this._collection.getObjectGPUMemoryUsage(a);this._gpuMemoryEstimate-=a;this._geoMemoryEstimate-=a}isNodeLoaded(a){return this._nodeId2Meta.has(a)}isNodeReloading(a){return this._nodeId2MetaReloading.has(a)}get usedMemory(){let a=null!=this._labeler?this._labeler.usedMemory:0;this._nodeId2Meta.forEach(b=>a+=null!=b?b.node.memory:0);this._nodeId2MetaReloading.forEach(b=>a+=null!=b?b.node.memory:0);return a}get unloadedMemory(){return(null!=this._controller?
this._controller.unloadedMemoryEstimate:0)+(null!=this._labeler?this._labeler.unloadedMemoryEstimate:0)}_labelingChanged(){if(!wb.areLabelsVisible(this.i3slayer)||!this._supportsLabeling)null!=this._labeler&&(this._labeler.destroy(),this._labeler=null);else if(null==this._labeler){var a=new vb({view:this.view,layer:this.i3slayer,collection:this._collection,overrides:this.i3sOverrides});this._nodeId2Meta.forEach(b=>null!=b&&this._addMetaToLabeler(a,b));this._labeler=a}}_loadAsyncModule(a){++this._asyncModuleLoading;
return a.then(b=>{--this._asyncModuleLoading;return b},b=>{--this._asyncModuleLoading;throw b;})}_modificationsChanged(){if(!this._i3sWasmLoaded&&this.hasModifications)this._i3sWasmLoaded=ba.initialize().then(()=>{this._i3sWasmLoaded=!0;this._modificationsChanged();this.notifyUpdate()}),this.notifyUpdate();else if(!0===this._i3sWasmLoaded){var a=this.uid,b=this.i3slayer.spatialReference;this._worker.setModifications(a,this._layerClippingArea,this._modifications,b);var c=Ba.toWasmModification(this._layerClippingArea,
this._modifications,b);ba.setModificationsSync({context:a,modifications:c,isGeodetic:b.isGeographic});this._controller.modificationsChanged();var d=this.hasModifications?new Ya:null;this._nodeId2Meta.forEach((e,f)=>{null==e?(this._nodeId2Meta.delete(f),this._controller.updateLoadStatus(f,!1)):e.node.hasModifications?(this._nodeId2Meta.delete(f),this._nodeId2MetaReloading.set(f,e)):null!=d&&d.push(e.node)});this.notifyChange("elevationRange");null!=d&&this._nodeId2MetaReloading.forEach(e=>d.push(e.node));
null!=d&&0<d.length&&(this.updateNodeModificationStatus(d),d.forAll(e=>{if(e.imModificationImpact!==ka.NodeIMModificationImpact.Culled){const f=this._nodeId2Meta.get(e.index);this._controller.invalidateGeometryVisibility(e.index);null!=f?(this._nodeId2Meta.delete(e.index),this._nodeId2MetaReloading.set(e.index,f),this.notifyChange("elevationRange")):this._nodeId2Meta.has(e.index)&&(this._nodeId2Meta.delete(e.index),this._controller.updateLoadStatus(e.index,!1))}}));this.clearMemCache();this._controller.restartNodeLoading();
this._showModifications()}}_showModifications(){null!=this._modificationGraphics&&(this.view.graphics.removeMany(this._modificationGraphics),this._modificationGraphics=null);if(X.debugFlags.I3S_SHOW_MODIFICATIONS&&0!==this._modifications.length){var a={clip:[227,227,79,.8],mask:[227,139,79,.8],replace:[139,227,79,.8]},b={type:"simple-fill",outline:{color:[255,255,255],width:1}};this._modificationGraphics=[];for(const c of this._modifications){const d=c.geometry;d.spatialReference=this.i3slayer.spatialReference;
this._modificationGraphics.push(new aa({geometry:d,symbol:{...b,color:a[c.type]}}))}this.view.graphics.addMany(this._modificationGraphics)}}_addMetaToLabeler(a,b){a.addNodeMeta(b,(c,d)=>this._createAttributes(c,d))}_contentVisibleChanged(a){a?(this.view.elevationProvider.register(this._elevationContext,this._elevationProvider),this._stage.view.sceneIntersectionHelper.addIntersectionHandler(this._intersectionHandler)):(this._removeAllNodeDataFromStage(),this.view.elevationProvider&&this.view.elevationProvider.unregister(this._elevationProvider),
this._stage.view.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler))}getLoadedAttributes(a){a=this._nodeId2Meta.get(a);if(null!=a?.attributeInfo)return a.attributeInfo.loadedAttributes}getAttributeData(a){a=this._nodeId2Meta.get(a);if(null!=a?.attributeInfo)return a.attributeInfo.attributeData}setAttributeData(a,b){a=this._nodeId2Meta.get(a);null!=a?.attributeInfo&&(a.attributeInfo.attributeData=b,this._attributeValuesChanged(a))}async updateAttributes(a,b,c){const d=this._nodeId2Meta.get(a);
null!=d&&(await this.i3sOverrides.applyAttributeOverrides(d.featureIds,b,c,this._controller.requiredAttributes),d.attributeInfo=b,this._controller.reschedule(()=>this._attributeValuesChanged(d),c).catch(e=>{S.isAbortError(e)||I.warn("Error while updating attribute values. Layer might not display correctly.",e)}))}_attributeValuesChanged(a){a.cachedRendererVersion=this._getInvalidRendererVersion();a.filteredIds=null;null!=this._labeler&&this._labeler.setNodeMetaAttributes(a,(b,c)=>this._createAttributes(b,
c));this._updateEngineObject(a)}clearMemCache(){null!=this._memCache&&this._memCache.clear()}getVisibleNodes(){const a=[];this._nodeId2Meta.forEach(b=>null!=b&&a.push(b.node));return a}getNodeComponentObb(a){a=this._nodeId2Meta.get(a.index)??this._nodeId2MetaReloading.get(a.index);return null!=a?this._collection.getComponentObb(a.objectHandle):null}getLoadedNodeIndices(a){this._nodeId2Meta.forEach((b,c)=>a.push(c));this._nodeId2MetaReloading.forEach((b,c)=>a.push(c))}_preLoadBasis(){!ia("disable-feature:i3s-basis")&&
0!==(this.supportedTextureEncodings&L.TextureEncoding.Basis)&&this.i3slayer.textureSetDefinitions?.some(a=>a.formats.some(b=>"basis"===b.format||"ktx2"===b.format))&&Fa.loadBasis()}_getVertexBufferLayout(a,b){a={hasTexture:Ga(a.params.material),hasNormals:b.normal,hasRegions:b.uvRegion};return Gb.glLayout(Hb.createVertexBufferLayout(this._getGeometryParameters(a)))}_getObjectIdField(){return this.i3slayer.objectIdField||ob.fallbackObjectIDAttribute}_getGlobalIdField(){return this.i3slayer.associatedLayer?.globalIdField}_findGraphicNodeAndIndex(a){const b=
ma.attributeLookup(this.i3slayer.fieldsIndex,a.attributes,this._getObjectIdField());let c=null;sa.someMap(this._nodeId2Meta,d=>{if(null==d)return!1;const e=d.featureIds.indexOf(b);if(-1===e)return!1;c={node:d.node,index:e};return!0});return c}_getGraphicIndices(a,b){a=this._nodeId2Meta.get(a.index);if(null==a)return[];const c=[],d=this._getObjectIdField(),e=this.i3slayer.fieldsIndex;for(const f of b)b=ma.attributeLookup(e,f.attributes,d),b=a.featureIds.indexOf(b),-1!==b&&c.push(b);return c}whenGraphicBounds(a){a=
this._findGraphicNodeAndIndex(a);if(!a)return Promise.reject();a=this._getAABB(a.node.index,a.index);return null==a?Promise.reject():Promise.resolve({boundingBox:a,screenSpaceObjects:[]})}getAABBFromIntersectorTarget(a){return null==a.nodeIndex||null==a.componentIndex?null:this._getAABB(a.nodeIndex,a.componentIndex)}_getAABB(a,b){a=this._nodeId2Meta.get(a);if(null==a?.featureIds||b>=a.featureIds.length)return null;b=Ab.boundingBoxCornerPoints(b,this._collection,a.objectHandle,ya.newDoubleArray(24),
0);if(!jb.projectBuffer(b,this.view.renderSpatialReference,0,b,this.view.spatialReference,0,8))return null;a=U.empty();U.expandWithBuffer(a,b,0,8);return a}whenGraphicAttributes(a,b){return t.whenGraphicAttributes(this.i3slayer,a,this._getObjectIdField(),b,()=>[...this._nodeId2Meta.values()].filter(ra.isSome))}getGraphicFromIntersectorTarget(a){if(null==a.nodeIndex||null==a.componentIndex)return null;const b=this._nodeId2Meta.get(a.nodeIndex);return null==b?.featureIds||a.componentIndex>=b.featureIds.length?
null:this._createGraphic(a.componentIndex,b)}_getCacheKey(a){return`${this._layerUrl}/v${23}/${a}${this._cacheKeySuffix}`}_getMemCacheKey(a,b=this.elevationOffset){return a+"#"+b}get _idbCacheEnabled(){return!this._controller.disableIDBCache&&!this.hasModifications&&0===this.elevationOffset&&null!=this._cacheKeySuffix}loadCachedGPUData(a){return null!=this._memCache?this._memCache.pop(this._getMemCacheKey(a)):null}deleteCachedGPUData(a){null!=a&&this._deleteComponentObject(a)}_cacheGPUData(a,b=this.elevationOffset){if(null==
this._memCache)this._deleteComponentObject(a);else{var c=this._controller.indexDepth-a.node.level;this._memCache.put(this._getMemCacheKey(a.node.index,b),a,a.node.memory,c)}}loadMissingTextures(a,b,c,d){const e=a?.filter((f,h)=>{if(0===(f.usage&this.rendererTextureUsage))return!1;if(null==b)return!0;f=W.selectEncoding(f.encodings,this.supportedTextureEncodings);h=b[h];return null==h?.data||f&&h.encoding!==f.encoding?!0:!1})??[];return 0===e.length?Promise.resolve(!1):c(e,d).then(f=>{let h=0;for(let l=
0;l<a.length;l++)h<f.length&&f[h].id===a[l].id&&(b[l]=f[h],h++);return!0})}loadCachedNodeData(a,b,c){return this._idbCacheEnabled?this._idbCache.get(this._getCacheKey(a.id),b).then(d=>{if(null==d)return null;if(d.nodeVersion!==a.version)return this._idbCache.remove(this._getCacheKey(a.id)),null;this.elevationInfo.mode===w.ElevationMode.Absolute&&(a.geometryObb=d.geometryObb);return this.loadMissingTextures(d.requiredTextures,d.textureData,c,b).then(e=>{e&&this._idbCache.initialized&&null!=d.textureData&&
(d.byteSize=Ia(d.transformedGeometry,d.textureData),d.textureData.every(Ha)&&Ja(a,d)&&this._idbCache.put(this._getCacheKey(a.id),d).catch(f=>I.warn(`Failed to update node with textures in IndexedDB cache: ${a.id}: ${f}`)));S.throwIfAborted(b);return d})}):Promise.resolve(null)}addNode(a,b,c){return"geometryData"in b?null==b.geometryBuffer?(this._addNodeMeta(a.index,null),Promise.resolve()):this._addData(a,b.attributeDataInfo,()=>this._transformNode(a,b,c).then(d=>this._safeReschedule(()=>{if(null==
d)return a.hasModifications=!1,this._addCachedNodeData(a,null,c);a.hasModifications=d.transformedGeometry.hasModifications;const {obb:e,componentOffsets:f,featureIds:h,anchorIds:l,anchors:m,transformedGeometry:n}=d;var p=la.computeGlobalTransformation(a.mbs,this.elevationOffset,this._controller.crsIndex,this.view.renderSpatialReference),x=da.create([e.center.x,e.center.y,e.center.z],[e.extents.x,e.extents.y,e.extents.z],cb.fromValues(e.orientation.x,e.orientation.y,e.orientation.z,e.orientation.w));
F.transformMat4(x.center,x.center,p);this.elevationInfo.mode===w.ElevationMode.Absolute&&(a.geometryObb=x);b.geometryData.componentOffsets=f;h&&(b.geometryData.featureIds=Array.from(h));b.geometryData.anchorIds=l;b.geometryData.anchors=m;p={nodeVersion:a.version,geometryData:b.geometryData,requiredTextures:b.requiredTextures,textureData:b.textureData,transformedGeometry:n,globalTrafo:p,geometryObb:x,byteSize:Ia(n,b.textureData)};this._idbCacheEnabled&&this._idbCache.initialized&&Ja(a,p)&&(x=null!=
p.textureData?p.textureData.map(H=>Ha(H)?H:null):null,this._idbCache.put(this._getCacheKey(a.id),{...p,textureData:x}).catch(H=>I.warn(`Failed to store node in IndexedDB cache: ${a.id}: ${H}`)));return this._addCachedNodeData(a,p,c)},c))):Promise.reject()}getElevationRange(a){let b=Infinity,c=-Infinity;const d=gb.getReferenceEllipsoid(this.view.renderCoordsHelper.spatialReference);this._nodeId2Meta.forEach(e=>{if(null!=e?.node.geometryObb&&da.intersectSphere(e.node.geometryObb,a)){var f=this._collection.getObjectTransform(e.objectHandle);
f=this.view.renderCoordsHelper.getAltitude(f.position);for(let l=0;l<e.featureIds.length;l++){var h=this._collection.getComponentAabb(e.objectHandle,l,Q);if("local"===this.view.viewingMode)b=Math.min(b,f+h[2]),c=Math.max(c,f+h[5]);else{b=Math.min(b,f+h[2]);const m=Math.max(Math.abs(h[3]),Math.abs(h[0])),n=Math.max(Math.abs(h[4]),Math.abs(h[1]));h=f+h[5]+d.radius;c=Math.max(c,Math.sqrt(m*m+n*n+h*h)-d.radius)}}}});return{min:b,max:c}}computeVisibilityObb(a){return t.computeVisibilityObb(a,this.view.renderSpatialReference,
this._controller.crsIndex,this.i3slayer.spatialReference,this.elevationOffset,this._modifications)}_transformNode(a,b,c){var d=b.geometryData.geometries??[];const e=Array(d.length);for(var f=0;f<d.length;++f)e[f]=this._getVertexBufferLayout(d[f],b.geometryDescriptor);d=a.mbs;f=this.elevationOffset;var h=this._controller.crsIndex,l=this._controller.crsVertex,m=this.view.renderSpatialReference;const n=la.getLocalOrigin(d,f,h),p=la.computeGlobalTransformation(d,f,h,m);h=xa.getProjectorName(h,l);l=xa.getProjectorName(l,
m);if(null==h||null==l)return Promise.resolve(null);m=this.i3slayer.normalReferenceFrame;return this._worker.invoke({context:this.uid,geometryBuffer:b.geometryBuffer,geometryData:b.geometryData,geometryDescriptor:b.geometryDescriptor,layouts:e,localOrigin:n,globalTrafo:p,mbs:d,obb:a.serviceObb,elevationOffset:f,needNormals:!this._isIntegratedMesh&&this._controller.isMeshPyramid,normalReferenceFrame:b.normalReferenceFrame??m??"none",indexToVertexProjector:h,vertexToRenderProjector:l},c)}get _supportsNodeCrossFading(){return!this.view?._stage?.renderer.shadowsEnabled}get nodeCrossfadingEnabled(){return this._supportsNodeCrossFading&&
(0<this.lodCrossfadeinDuration||0<this.lodCrossfadeoutDuration||0<this.lodCrossfadeUncoveredDuration)}get nodeFadeoutEnabled(){return this._supportsNodeCrossFading&&0<this.lodCrossfadeoutDuration}_setNewNodeOpacity(a){this._setNodeOpacity(a,this.nodeCrossfadingEnabled?0:this.fullOpacity)}addCachedGPUData(a,b,c){this.elevationInfo.mode===w.ElevationMode.Absolute&&(a.geometryObb=da.clone(this._collection.getComponentObb(b.objectHandle)));this._controller.isGeometryVisible(a)?(null!=this._labeler&&this._addMetaToLabeler(this._labeler,
b),a=a.index,this._addNodeMeta(a,b),this.updateNodeState(a,c),this._collection.setObjectVisibility(b.objectHandle,na.State.Visible),this._updateMaterial(b),this._setNewNodeOpacity(b),this.elevationInfo.mode!==w.ElevationMode.Absolute&&this._ensureElevationTask().schedule(a),this._updateEngineObject(b),this._highlights.objectCreated(b),null!=this._treeDebugger&&this._treeDebugger.update()):this._cacheGPUData(b)}addCachedNodeData(a,b,c,d){return this._addData(a,c,()=>this._addCachedNodeData(a,b,d))}async deleteCachedNodeData(a){if(this._idbCacheEnabled)return this._idbCache.remove(this._getCacheKey(a))}async _addCachedNodeData(a,
b,c){if(this.contentVisible&&this._controller.isGeometryVisible(a))if(null==b)this._addNodeMeta(a.index,null);else{var d=this._addTasks.get(a.index),{geometryData:e,transformedGeometry:f,globalTrafo:h}=b;await this.i3sOverrides.applyAttributeOverrides(e.featureIds,d.attributeInfo,c,this._controller.requiredAttributes);var l=null!=b.textureData?b.textureData.filter(A=>null!=A&&0!==(A.usage&this.rendererTextureUsage)):[];!ia("disable-feature:i3s-basis")&&l.some(A=>null!=A&&(A.encoding===L.TextureEncoding.Basis||
A.encoding===L.TextureEncoding.KTX2))&&await Fa.loadBasis();a.memory=0;var {componentOffsets:m,geometries:n,featureIds:p,anchorIds:x,anchors:H}=e,J=this._collection,k=n[0],{layout:u,indices:v,interleavedVertexData:C,positionData:N,hasColors:Ob}=f,O=this._materialParameters(k,u),oa=m||new Uint32Array([0,v?v.length:C.byteLength/u[0].stride]);oa={vertices:{data:C,count:C.byteLength/u[0].stride,layoutParameters:O.geometryParams},positionData:{positions:kb.compactFloatArray(N.data),indices:lb.compactIndices(N.indices)},
indices:v,componentOffsets:oa};var R=k.transformation?wa.clone(k.transformation):wa.create();va.multiply(R,h,R);k=va.getTranslation(T.create(),R);R=ab.fromMat4(bb.create(),R);var Pa=this.view.renderSpatialReference,Qa=this.view.basemapTerrain.spatialReference,pa=T.create(),qa=[1,1,1];hb.localLinearScaleFactors(k,Pa,qa,Qa)||I.errorOnce("Unsupported coordinate system for IM overlay");ja.projectVectorToVector(k,Pa,pa,Qa);var ha=J.createObject({toMapSpace:eb.fromValues(pa[0],pa[1],qa[0],qa[1]),geometry:oa,
obb:b.geometryObb,transform:{position:k,rotationScale:R}}),{textures:Ra,texturePromise:Pb}=this._initMaterialAndTextures(ha,O.material,l,O.geometryParams.textureCoordinates===ea.TextureCoordinateAttributeType.Atlas);a.memory+=this._memEstimateGeometryAdded(ha);a.memory+=Ra.reduce((A,K)=>A+(null!=K?this._memEstimateTextureAdded(K):0),0);l=!!O.material.hasParametersFromSource;O="blend"!==O.material.alphaMode&&1<=O.material.metallicRoughness.baseColorFactor[3];var B=new Lb(a,p,ha,this._getInvalidRendererVersion(),
d.attributeInfo,{hasParametersFromSource:l,isOpaque:O},Ra,x,H);d.meta=B;!this._hasTextures&&b.requiredTextures?.some(({usage:A})=>0!==(A&L.TextureUsage.ColorTextures))&&(this._hasTextures=!0);this._hasData=!0;this._hasColors=this._hasColors||Ob;this._hasTextures=this._hasTextures||!!a.resources.texture;this.notifyChange("hasTexturesOrVertexColors");var Qb=this.slicePlaneEnabled;return Promise.all([this._addOrUpdateEdgeRendering(B),Pb]).then(([A])=>{null!=A&&A.updateObjectVisibility(B.objectHandle,
!1).catch(K=>M(K,this.i3slayer.title));return this._safeReschedule(()=>{var K=this._addTasks.get(a.index);if(K)if(this._addNodeMeta(a.index,B),K.meta=null,this.contentVisible){J.setObjectVisibility(ha,na.State.Visible);null!=A&&A.updateObjectVisibility(B.objectHandle,!0).catch(Rb=>M(Rb,this.i3slayer.title));B.attributeInfo=K.attributeInfo;K=B.cachedRendererVersion!==this._rendererVersion;var Sb=Qb!==this.slicePlaneEnabled;this._updateElevationOffsets(B);var Tb=B.elevationOffsets;this._updateComponentData(B);
var Ub=this._applyFiltersToNode(B);(K||null!=A&&(Sb||Ub||Tb))&&this._addOrUpdateEdgeRendering(B);null!=this._labeler&&this._addMetaToLabeler(this._labeler,B);this._visibleGeometryChanged(B,G.ADD);this._highlights.objectCreated(B);this._updateMaterial(B);this._setNewNodeOpacity(B);null!=this._treeDebugger&&this._treeDebugger.update()}else this._removeNodeStageData(a.index,this.elevationOffset)},c)}).catch(A=>{null!=d.meta&&(this._cacheGPUData(d.meta),d.meta=null);throw A;})}else this._removeNodeStageData(a.index,
this.elevationOffset,this._nodeId2MetaReloading)}_addNodeMeta(a,b){this._removeNodeStageData(a,this.elevationOffset,this._nodeId2MetaReloading);if(this._nodeId2Meta.has(a)){I.error("Removing duplicated node");const c=this._nodeId2Meta.get(a);null!=c&&this._deleteComponentObject(c)}else this._controller.updateLoadStatus(a,!0);null!=b&&(b.lodCrossfadeProgress=null,this.nodeCrossfadingEnabled&&Y(b.cachedEdgeMaterials,0));this._nodeId2Meta.set(a,b);this.notifyChange("elevationRange")}_updateElevationOffsets(a){const b=
this.view.renderSpatialReference,c=this._controller.crsIndex,d=this.elevationInfo,e=this.view.basemapTerrain,f=e.spatialReference,h=d.mode;if(null==b||null==f||h===w.ElevationMode.Absolute)a.elevationOffsets=null;else{var l=this._collection.getObjectTransform(a.objectHandle);a.elevationOffsets=a.elevationOffsets??[];var m=h===w.ElevationMode.OnTheGround,n=this.view.renderCoordsHelper,p=a.featureIds.length,x=(()=>{if(a.cachedElevationAnchors)return a.cachedElevationAnchors;const k=ya.newDoubleArray(3*
p);a.cachedElevationAnchors=k;for(let u=0;u<p;u++){const v=3*u,C=a.anchorIds?.indexOf(u)??-1;a.anchors&&0<=C?(F.set(z,a.anchors[3*C],a.anchors[3*C+1],a.anchors[3*C+2]),F.add(z,z,a.node.mbs),ja.projectVectorToVector(z,c,z,f),k[v]=z[0],k[v+1]=z[1],k[v+2]=n.getAltitude(z)):(this._collection.getComponentAabb(a.objectHandle,u,Q,!0),F.set(z,(Q[0]+Q[3])/2,(Q[1]+Q[4])/2,Q[2]),F.transformMat3(z,z,l.rotationScale),F.add(z,z,l.position),k[v+2]=n.getAltitude(z),ja.projectVectorToVector(z,b,z,f),k[v]=z[0],k[v+
1]=z[1])}return k})(),H=d.offset,J=a.elevationOffsets;e.getElevations(x,p,(k,u)=>{const v=m?x[3*k+2]:0;J[k]=H+(null!=u?u-v:0)})}}_ensureElevationTask(){return null!=this._elevationTask?this._elevationTask:this._elevationTask=new yb.I3SAsyncElevationUpdater(this.view.resourceController.scheduler,a=>{a=this._controller.updateElevationChanged(a,this.view.basemapTerrain.spatialReference);return null!=a?a.filterInPlace(b=>null!=this._nodeId2Meta.get(b)):null},a=>{a=this._nodeId2Meta.get(a);this._nodeElevationAlignmentChanged(a)})}_elevationInfoChanged(a,
b){const c=a.mode!==w.ElevationMode.Absolute;a=!!b&&b!==a&&b.mode!==w.ElevationMode.Absolute;this._intersectionHandler.updateElevationAlignState(c,this.view.state.viewingMode);c&&!a&&this._controller.removeAllGeometryObbs();this._nodeId2Meta.forEach(d=>this._nodeElevationAlignmentChanged(d))}_nodeElevationAlignmentChanged(a){null!=a&&(this._updateElevationOffsets(a),this._updateComponentData(a),this._updateEdgeRendering(a),null!=this._labeler&&this._labeler.updateLabelPositions(a),this._updateSnappingSources(a,
G.UPDATE))}_safeReschedule(a,b){S.throwIfAborted(b);return this._controller.reschedule(a,b)}_materialParameters(a,b){a=null!=a.params.material?a.params.material:W.defaultMaterial();const c=b.some(e=>"uvRegion"===e.name);b=b.some(e=>"normalCompressed"===e.name);const d=Ga(a);return{geometryParams:this._getGeometryParameters({hasTexture:d,hasNormals:b,hasRegions:c}),material:a}}_initMaterialAndTextures(a,b,c,d){const e=this._stage.renderView,f=c.map(l=>W.createTexture(l,b,d,e));this._stage.addMany(f);
let h=null;this._collection.updateMaterial(a,l=>{h=W.configureMaterial(l,b,f,c,this.view._stage.renderView.textureRepository,{rendererTextureUsage:this.rendererTextureUsage,usePBR:this._usePBR,isIntegratedMesh:this._isIntegratedMesh,slicePlaneEnabled:this.slicePlaneEnabled,viewSpatialReference:this.view.spatialReference});this._updateMaterialOverlay(l)});return{textures:f,texturePromise:h}}_getGeometryParameters(a){return{textureCoordinates:a.hasTexture?a.hasRegions?ea.TextureCoordinateAttributeType.Atlas:
ea.TextureCoordinateAttributeType.Default:ea.TextureCoordinateAttributeType.None,colors:this._hasVertexColors,normals:a.hasNormals&&!this._isIntegratedMesh}}_addData(a,b,c){let d=this._addTasks.get(a.index);d?d.attributeInfo=b:(d={...S.createResolver(),attributeInfo:b,meta:null},this._addTasks.set(a.index,d),c().then(d.resolve,d.reject).then(()=>this._addTasks.delete(a.index)).catch(e=>{this._addTasks.delete(a.index);throw e;}));return d.promise}_clearAddTasks(){this._addTasks.forEach(a=>{null!=a.meta&&
(this._cacheGPUData(a.meta),a.meta=null)});this._addTasks.clear()}_clippingAreaChanged(){var a=this.view.renderSpatialReference;const b=this.i3slayer.spatialReference,c=V.create();this._renderClippingArea=Ea.toBoundingRect(this.view.clippingArea,c,a)?c:null;a=V.create();this._layerClippingArea=Ea.toBoundingRect(this.view.clippingArea,a,b)?a:null;this._filterChange();this._controller&&this._controller.updateClippingArea(this.view.clippingArea);this._isIntegratedMesh&&this._modificationsChanged()}get hasGeometryFilter(){return!1}_geometryFilterChange(){const a=
this.hasGeometryFilter;this._controller.geometryFilterChanged(a);this._applyFilters(a)}_filterChange(){this._applyFilters(this.hasGeometryFilter)}_applyFilters(a){this._filters=this.getFilters();a?this._controller&&this._controller.requestUpdate():this._nodeId2Meta.forEach(b=>{null!=b&&this._applyFiltersToNode(b)&&(this._addOrUpdateEdgeRendering(b),this._visibleGeometryChanged(b,G.UPDATE))})}getFilters(){const a=[],b=this._renderClippingArea;null!=b&&a.push((c,d)=>this._boundingRectFilter(c,d,b));
return a}addSqlFilter(a,b,c){if(null!=b){const d=b.fieldNames;a.push((e,f)=>this._sqlFilter(e,f,b,d,c))}}_sqlFilter(a,b,c,d,e){const f={},h=this._createLayerGraphic(f),l=this.i3slayer.objectIdField,m=b.featureIds,n=b.attributeInfo?.attributeData;d.every(p=>p===l||null!=n?.[p])&&t.filterInPlace(a,m,p=>{f[l]=m[p];for(const x of d)x!==l&&(f[x]=n?t.getCachedAttributeValue(n[x],p):null);try{return c.testFeature(h)}catch(x){return e(x),!1}})}_boundingRectNodeTest(a,b){ib.projectBoundingSphere(a.node.mbs,
this._controller.crsIndex,Oa,this.view.renderSpatialReference);return t.intersectBoundingRectWithMbs(b,Oa)}_boundingRectFeatureTest(a,b,c){this._collection.getComponentAabb(a.objectHandle,b,Ma);U.toRect(Ma,Na);return V.intersects(c,Na)}_boundingRectFilter(a,b,c){var d=this._collection;const e=this._boundingRectNodeTest(b,c);if(e!==t.MbsIntersectResult.INSIDE)if(e===t.MbsIntersectResult.OUTSIDE)a.length=0;else if(d=d.getComponentCount(b.objectHandle),d.invisible+d.visible===b.featureIds.length){var f=
this._transformClippingArea(Mb,c,b.objectHandle);t.filterInPlace(a,b.featureIds,h=>this._boundingRectFeatureTest(b,h,f))}}_transformClippingArea(a,b,c){var d=this._collection.getObjectTransform(c);c=d.position;d=d.rotationScale;a[0]=(b[0]-c[0])/d[0];a[1]=(b[1]-c[1])/d[4];a[2]=(b[2]-c[0])/d[0];a[3]=(b[3]-c[1])/d[4];return a}_addOrUpdateEdgeRendering(a,b=!0){const c=this._edgeView;if(null==c)return Promise.resolve(null);const d=a.objectHandle;var e=c.hasObject(d);const {hasEdges:f,perFeatureEdgeMaterials:h}=
this._getFilteredEdgeMaterials(a),l={hasSlicePlane:this.slicePlaneEnabled};if(f&&e)return this.nodeCrossfadingEnabled&&(e=this.getNodeOpacity(a),Y(h,e)),c.updateAllComponentMaterials(d,h,l,b).catch(m=>M(m,this.i3slayer.title)),c.updateObjectVisibility(d,!0).catch(m=>M(m,this.i3slayer.title)),c.updateAllVerticalOffsets(d,a.elevationOffsets).catch(m=>M(m,this.i3slayer.title)),Promise.resolve(c);if(f&&!e)return this._collection.addEdges(d,c,h,l).then(m=>{a.edgeMemoryUsage=m;a.node.memory+=m;c.updateAllVerticalOffsets(d,
a.elevationOffsets).catch(n=>M(n,this.i3slayer.title));return c});!f&&e&&(a.node.memory-=a.edgeMemoryUsage,a.edgeMemoryUsage=0,c.removeObject(d));return Promise.resolve(null)}_applyFiltersToNode(a){return this._applyFiltersToNodeComponents(a)?(null!=this._labeler&&this._labeler.applyFilterChange(a),!0):!1}_applyFiltersToNodeComponents(a){const b=this._collection;var c=b.getComponentCount(a.objectHandle),d=null!=a.filteredIds;c=0===c.invisible;b.setAllComponentVisibilities(a.objectHandle,"all");if(0===
this._filters.length)return a.filteredIds=null,!c;this._updateCachedFilteredIds(a);if(d&&a.filteredIds===a.featureIds)return!c;d=this._computeFilteredComponentIndices(a);b.setAllComponentVisibilities(a.objectHandle,d);return!0}_updateCachedFilteredIds(a){if(null==a.filteredIds||a.appliedFilters!==this._filters)a.filteredIds=this._computeFilteredIds(a),a.appliedFilters=this._filters}_computeFilteredIds(a){const b=a.featureIds.slice();for(const c of this._filters)if(c(b,a),0===b.length)break;return b.length===
a.featureIds.length?a.featureIds:b}_computeFilteredComponentIndices(a){const b=[],c=a.filteredIds;null!=c&&a.featureIds.forEach((d,e)=>{c[b.length]===d&&b.push(e)});return b}_removeAllNodeDataFromStage(a=this.elevationOffset){this._nodeId2Meta.forEach((b,c)=>this._removeNodeStageData(c,a));this._nodeId2MetaReloading.forEach((b,c)=>this._removeNodeStageData(c,a,this._nodeId2MetaReloading));this._elevationTask=D.destroyMaybe(this._elevationTask)}removeNode(a){const b=this.elevationOffset;this._removeNodeStageData(a,
b);this._removeNodeStageData(a,b,this._nodeId2MetaReloading);null!=this._elevationTask&&this._elevationTask.remove(a)}_removeNodeStageData(a,b,c=this._nodeId2Meta){c.has(a)&&this._controller.updateLoadStatus(a,!1);const d=c.get(a);null==d?c.delete(a):(this._collection.setObjectVisibility(d.objectHandle,na.State.Hidden),null!=this._edgeView&&this._edgeView.hasObject(d.objectHandle)&&this._edgeView.updateObjectVisibility(d.objectHandle,!1).catch(e=>M(e,this.i3slayer.title)),this._visibleGeometryChanged(d,
G.REMOVE),null!=this._labeler&&this._labeler.removeNodeMeta(d),c.delete(a),this._highlights.objectDeleted(d),c===this._nodeId2Meta?(this._cacheGPUData(d,b),this.nodeCrossfadingEnabled&&this._crossfadeHelper.stopNodeFading(d)):this._deleteComponentObject(d),null!=this._treeDebugger&&this._treeDebugger.update())}_deleteComponentObject(a){null!=this._edgeView&&this._edgeView.removeObject(a.objectHandle);this._memEstimateGeometryRemoved(a.objectHandle);this._collection.destroyObject(a.objectHandle);if(a.textures)for(const b of a.textures)this._memEstimateTextureRemoved(b),
this._stage.remove(b)}updateNodeState(a,b){a=this._nodeId2Meta.get(a);null!=a&&this._collection.updateMaterial(a.objectHandle,c=>c.polygonOffsetEnabled=b===ka.NodeState.Hole)}updateNodeIndex(a,b){if(this._nodeId2Meta.has(a)){var c=this._nodeId2Meta.get(a);this._nodeId2Meta.delete(a);this._nodeId2Meta.set(b,c);this.notifyChange("elevationRange")}if(c=this._nodeId2MetaReloading.get(a))this._nodeId2MetaReloading.delete(a),this._nodeId2MetaReloading.set(b,c)}_invalidateAllSymbols(){this._rendererVersion=
t.addWraparound(this._rendererVersion,1);this._controller&&this._controller.requestUpdate()}_getInvalidRendererVersion(){return t.addWraparound(this._rendererVersion,-1)}async _rendererChange(a){this._currentRenderer=a;this.notifyChange("rendererTextureUsage");this._rendererVersion=t.addWraparound(this._rendererVersion,1);this._opacityVariable=this._colorVariable=this._rendererFields=null;this._invalidateAllSymbols();a&&(this._rendererFields=await a.getRequiredFields(this.i3slayer.fieldsIndex));this._updateSymbologyFields();
!this._arcade&&a&&"arcadeRequired"in a&&a.arcadeRequired&&(this._arcade=await sb.loadArcade());if(a&&"visualVariables"in a&&a.visualVariables)for(const b of a.visualVariables)"color"===b.type?this._colorVariable=b:"opacity"===b.type?this._opacityVariable=b:I.warn(`Unsupported visual variable type for 3D Object Scene Services: ${b.type}`);if(a)for(const b of a.getSymbols())"mesh-3d"!==b.type&&I.error(`Symbols of type '${b.type}' are not supported for 3D Object Scene Services.`);this._controller&&this._controller.requestUpdate()}_getCachedEdgeMaterials(a){this._hasComponentData&&
a.cachedRendererVersion!==this._rendererVersion&&this._updateCachedRendererData(a);return a.cachedEdgeMaterials}_getComponentParameters(a){this._hasComponentData&&a.cachedRendererVersion!==this._rendererVersion&&this._updateCachedRendererData(a);const b=a.cachedSymbology;return(c,d)=>{const e=5*c;db.set(d.externalColor,b[e]/255,b[e+1]/255,b[e+2]/255,b[e+3]/255);if(null!=this._stage.renderView.objectAndLayerIdRenderHelper){const f=a.featureIds[c],h=tb.isBasemapLayer(this.view.map,this.layerUid);this._stage.renderView.objectAndLayerIdRenderHelper.setUidToObjectAndLayerId(f,
f,this.layerId,this.layerUid+"_"+this.sublayerId,this.layerPopupEnabledAndHasTemplate&&!h,a.node.resources.attributes,c,this.sublayerId);d.objectAndLayerIdColor=this._stage.renderView.getObjectAndLayerIdColor({graphicUid:f,layerUid:this.layerUid+"_"+this.sublayerId})}d.externalColorMixMode=b[e+4]&(1<<P.CastShadows)-1;d.castShadows=0!==(b[e+4]&1<<P.CastShadows);d.pickable=0!==(b[e+4]&1<<P.Pickable);d.elevationOffset=a.elevationOffsets?.[c]??0}}_getSymbolInfo(a,b){b=a?.getSymbol(b,{arcade:this._arcade});
if(!(b instanceof ub))return null;a=b.id;if(this._symbolInfos.has(a))return this._symbolInfos.get(a);b=t.getSymbolInfo(b);this._symbolInfos.set(a,b);return b}_setSymbologyOverride(a,b){this._symbologyOverride!==a&&(this._symbologyOverride=a,this._symbologyOverrideFields=b,this._invalidateAllSymbols(),this._updateSymbologyFields())}_updateSymbologyFields(){this._symbologyFields=null!=this._symbologyOverrideFields&&0<this._symbologyOverrideFields.length?null!=this._rendererFields&&0<this._rendererFields.length?
qb.fixFields(this.i3slayer.fieldsIndex,[...this._rendererFields,...this._symbologyOverrideFields]):this._symbologyOverrideFields:this._rendererFields}_updateCachedRendererData(a){a.cachedRendererVersion=this._rendererVersion;if(this._hasComponentData){var b=this._tmpAttributeOnlyGraphic,c={};b.attributes=c;var d=this._currentRenderer,e=a.attributeInfo?.attributeData,f=null!=a.featureIds?this.i3slayer.objectIdField:null,h=null!=e&&null!=this._symbologyFields&&0<this._symbologyFields.length,l=null,
m=null;if(h&&null!=this._symbologyFields){l=[];m=[];for(var n of this._symbologyFields){var p=e[n];p&&(l.push(n),m.push(p))}}a.cachedSymbology||(a.cachedSymbology=nb.newUByteArray(5*a.featureIds.length));e={color:Z,castShadows:!0,pickable:!0,colorMixMode:ca.ColorMixModeEnum.Multiply,edgeMaterial:null};n=this.fullOpacity;n=this.nodeCrossfadingEnabled?this.getNodeOpacity(a):n;p=null;var x=fa.Transparency.OPAQUE,H=t.transparentEdgeMaterial,J=0;for(let C=0;C<a.featureIds.length;C++){null!=f&&(c[f]=a.featureIds[C]);
if(h&&l)for(var k=0;k<l.length;k++)c[l[k]]=t.getCachedAttributeValue(m[k],C);var u=d?this._getSymbolInfo(d,b):null;let N=k=null;if(d&&"visualVariables"in d){if(this._colorVariable){var v=za.getColor(this._colorVariable,b,{color:Nb,arcade:this._arcade});v&&(k=Z,k[0]=v.r/255,k[1]=v.g/255,k[2]=v.b/255,this._opacityVariable||null===v.a||(N=v.a))}this._opacityVariable&&(N=za.getOpacity(this._opacityVariable,b,{arcade:this._arcade}))}u?.material&&(v=u.material,k=null==k||null==N?Ca.overrideColor(k,N,v.color,
v.alpha,La,Z):Ca.overrideColor(k,N,null,null,La,Z));null==k&&(k=Z,k[0]=1,k[1]=1,k[2]=1,k[3]=1);e.pickable=!0;e.castShadows=u?u.castShadows:!0;e.colorMixMode=u?.material?u.material.colorMixMode:ca.ColorMixModeEnum.Multiply;e.edgeMaterial=u?u.edgeMaterial:null;null!=this._symbologyOverride&&(e.color=k,this._symbologyOverride(b,e),k=e.color);null!=this._nodeColorOverride&&(this._nodeColorOverride(a.node,k),e.colorMixMode=ca.ColorMixModeEnum.Replace);if(null!=e.edgeMaterial){u=0>=k[3]?fa.Transparency.INVISIBLE:
1<=k[3]&&(a.material.isOpaque||e.colorMixMode===ca.ColorMixModeEnum.Replace)?fa.Transparency.OPAQUE:fa.Transparency.TRANSPARENT;if(e.edgeMaterial!==p||u!==x)H={...e.edgeMaterial,opacity:n,objectTransparency:u},p=e.edgeMaterial,x=u;a.cachedEdgeMaterials[C]=H}else a.cachedEdgeMaterials[C]=t.transparentEdgeMaterial;a.cachedSymbology[J++]=Math.round(255*k[0]);a.cachedSymbology[J++]=Math.round(255*k[1]);a.cachedSymbology[J++]=Math.round(255*k[2]);a.cachedSymbology[J++]=Math.round(255*k[3]);a.cachedSymbology[J++]=
e.colorMixMode|+e.castShadows<<P.CastShadows|+e.pickable<<P.Pickable}}}_getFilteredEdgeMaterials(a){var b=this._getCachedEdgeMaterials(a);this.nodeCrossfadingEnabled||Y(b,this.fullOpacity);const c=a.filteredIds;if(null==c)return{hasEdges:b.some(f=>f!==t.transparentEdgeMaterial),perFeatureEdgeMaterials:b};let d=0,e=!1;b=b.map((f,h)=>{if(a.featureIds[h]!==c[d])return t.transparentEdgeMaterial;e=e||f!==t.transparentEdgeMaterial;d++;return f});return{hasEdges:e,perFeatureEdgeMaterials:b}}_updateComponentData(a){if(this._hasComponentData){var b=
a.objectHandle;a=this._getComponentParameters(a);this._collection.setComponentData(b,a);this._stage.renderView.requestRender()}}_reloadAll(a=this.elevationOffset){this._removeAllNodeDataFromStage(a);null!=this._controller&&this._controller.restartNodeLoading()}_opacityChange(a){this.nodeCrossfadingEnabled&&this._crossfadeHelper.stopAllNodeFading();this._nodeId2Meta.forEach(b=>{null!=b&&(this._collection.updateMaterial(b.objectHandle,c=>c.objectOpacity=a),Y(b.cachedEdgeMaterials,a),this._updateEdgeRendering(b))})}_updateMaterial(a){this._collection.updateMaterial(a.objectHandle,
b=>{b.commonMaterialParameters.hasSlicePlane=this.slicePlaneEnabled;b.usePBR=this._usePBR;this._updateMaterialOverlay(b)})}_updateMaterialOverlay(a){}_updateEngineObject(a){this._updateComponentData(a);this._applyFiltersToNode(a);this._addOrUpdateEdgeRendering(a);this._visibleGeometryChanged(a,G.UPDATE)}_slicePlaneEnabledChange(a){this._intersectionHandler&&(this._intersectionHandler.slicePlaneEnabled=a);null!=this._labeler&&(this._labeler.slicePlaneEnabled=a);this._nodeId2Meta.forEach(b=>{null!=
b&&(this._collection.updateMaterial(b.objectHandle,c=>c.commonMaterialParameters.hasSlicePlane=a),this._updateEdgeRendering(b,!1))})}_updatePBR(a){this._nodeId2Meta.forEach(b=>{null!=b&&this._collection.updateMaterial(b.objectHandle,c=>c.usePBR=a)});this._hasLoadedPBRTextures=!0}get _usePBR(){return!this._isIntegratedMesh&&this.view.qualitySettings.physicallyBasedRenderingEnabled}_updateEdgeRendering(a,b=!0){null!=this._edgeView&&this._edgeView.hasObject(a.objectHandle)&&this._addOrUpdateEdgeRendering(a,
b)}_forAllNodes(a){this._nodeId2Meta.forEach(a)}_ignoreClientNodeOverriddenFeatures(a){return this.i3sOverrides.hasGeometryChanges?(b,c,d)=>0<=d.node.index&&this.i3sOverrides.featureHasGeometryChanges(b)?y.ForAllFeaturesReturnType.CONTINUE:a(b,c,d):a}_forAllFeatures(a,b,c){sa.someMap(this._nodeId2Meta,d=>{if(null==d)return!1;if(null!=b)switch(b(d)){case y.ForAllFeaturesReturnType.EXIT:return!0;case y.ForAllFeaturesReturnType.SKIP:return!1}let e=y.ForAllFeaturesReturnType.CONTINUE;switch(c){case y.ForAllFeaturesMode.ALL:e=
this._forAllFeaturesOfNode(d,a);break;case y.ForAllFeaturesMode.VISIBLE_ONLY:e=this._forAllVisibleFeaturesOfNode(d,a);break;case y.ForAllFeaturesMode.QUERYABLE:e=this._forAllQueryableFeaturesOfNode(d,a)}return e===y.ForAllFeaturesReturnType.EXIT})}_forAllFeaturesOfNode(a,b){let c=y.ForAllFeaturesReturnType.CONTINUE;const d=a.featureIds;for(let e=0;e<d.length&&(c=b(d[e],e,a),c!==y.ForAllFeaturesReturnType.EXIT);e++);return c}_forAllVisibleFeaturesOfNode(a,b){let c=y.ForAllFeaturesReturnType.CONTINUE;
const d=a.featureIds;this._collection.forEachVisibleComponent(a.objectHandle,e=>{c=b(d[e],e,a);return c===y.ForAllFeaturesReturnType.CONTINUE});return c}_forAllQueryableFeaturesOfNode(a,b){b=this._ignoreClientNodeOverriddenFeatures(b);if(null==this._renderClippingArea)return this._forAllFeaturesOfNode(a,b);var c=this._boundingRectNodeTest(a,this._renderClippingArea);if(c===t.MbsIntersectResult.OUTSIDE)return y.ForAllFeaturesReturnType.CONTINUE;if(c===t.MbsIntersectResult.INSIDE)return this._forAllFeaturesOfNode(a,
b);c=y.ForAllFeaturesReturnType.CONTINUE;const d=a.featureIds,e=t.getClipRect(this._renderClippingArea,this._collection.getObjectTransform(a.objectHandle));for(let f=0;f<d.length;f++){if(!this._boundingRectFeatureTest(a,f,e))continue;const h=b(d[f],f,a);if(h===y.ForAllFeaturesReturnType.EXIT)return h}return c}_createAttributes(a,b){const c={};null!=b.featureIds&&(c[this._getObjectIdField()]=b.featureIds[a]);b=b.attributeInfo?.attributeData;if(null!=b)for(const d of Object.keys(b))c[d]=t.getCachedAttributeValue(b[d],
a);return c}_createGraphic(a,b){return this._createLayerGraphic(this._createAttributes(a,b))}highlight(a){"number"===typeof a?a=[a]:a instanceof aa?a=[a]:a instanceof Va&&(a=a.toArray());if(Array.isArray(a)&&0<a.length){if(a[0]instanceof aa){const b=this.i3slayer.fieldsIndex,c=this._getObjectIdField();a=a.map(f=>ma.attributeLookup(b,f.attributes,c));const {set:d,handle:e}=this._highlights.acquireSet();this._highlights.setFeatureIds(d,a);return e}if("number"===typeof a[0]){const {set:b,handle:c}=this._highlights.acquireSet();
this._highlights.setFeatureIds(b,a);return c}}return Wa.makeHandle()}resetHighlights(){D.destroyMaybe(this._highlights);this._highlights=new xb({collection:this._collection,forAllFeatures:a=>this._forAllFeatures(a,null,y.ForAllFeaturesMode.ALL),forAllFeaturesOfNode:(a,b)=>this._forAllFeaturesOfNode(a,b)})}_visibleGeometryChanged(a,b){this._elevationProvider&&(this._elevationProvider.objectChanged(a.node),null==this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle=
Za.schedule(()=>{this.emit("visible-geometry-changed");this._visibleGeometryChangedSchedulerHandle=null})),this._updateSnappingSources(a,b))}get performanceInfo(){const a={displayedNumberOfFeatures:0,maximumNumberOfFeatures:0,totalNumberOfFeatures:0,core:null,index:0,nodes:this._nodeId2Meta.size,"Total GPU Memory Estimate":(this._gpuMemoryEstimate/1048576).toFixed(1)+"MB","Geometry Memory Estimate":(this._geoMemoryEstimate/1048576).toFixed(1)+"MB","Texture Memory Estimate":(this._texMemoryEstimate/
1048576).toFixed(1)+"MB","Unloaded Memory Estimate":(this.unloadedMemory/1048576).toFixed(1)+"MB"};null!=this._memCache&&(a.MemCache=Math.round(100*this._memCache.hitRate)+"% hit");this._controller&&(this._idbCacheEnabled&&(a.IDBCache=Math.round(100*this._idbCache.getHitRate())+"% hit"),this._controller.updateStats(a));return a}get test(){const a=this,b=c=>{this._nodeColorOverride=c;this._invalidateAllSymbols()};return{controller:this._controller,labeler:this._labeler,get visibleObjectIds(){const c=
[];a._forAllFeatures(d=>{c.push(d);return y.ForAllFeaturesReturnType.CONTINUE},null,y.ForAllFeaturesMode.VISIBLE_ONLY);c.sort((d,e)=>d-e);return c},get numNodes(){return a._nodeId2Meta.size},get loadedNodes(){return Array.from(a._nodeId2Meta.keys()).sort((c,d)=>c-d)},setNodeColorOverride:b,setNodeColoring:c=>{switch(c){case "client-nodes":b((d,e)=>{0>d.index?(e[0]=1,e[1]=0,e[2]=0):(e[0]=1,e[1]=1,e[2]=1)});break;default:b(null)}}}}getNodeOpacityByIndex(a){a=this._nodeId2Meta.get(a);return this.getNodeOpacity(a)}getNodeOpacity(a){return null!=
a?this._collection.getMaterial(a.objectHandle).objectOpacity:0}isNodeFullyFadedIn(a){return this._crossfadeHelper.isNodeFullyFadedIn(a)}getNodeCrossfadeMetaData(a){return this._nodeId2Meta.get(a)}markNodeToRemove(a){this._controller&&this._controller.markNodeToRemove(a)}removeMarkedNodes(){this._controller&&this._controller.removeMarkedNodes()}foreachCrossfadeNode(a){this._nodeId2Meta.forEach((b,c)=>a(c,b))}fadeNode(a,b,c){if(this.nodeCrossfadingEnabled){var d=this._nodeId2Meta.get(a);null!=d&&this._crossfadeHelper.fadeNode(a,
d,b,c)}}setNodeOpacityByIndex(a,b){a=this._nodeId2Meta.get(a);null!=a&&this._setNodeOpacity(a,b)}_setNodeOpacity(a,b){this._collection.updateMaterial(a.objectHandle,c=>c.objectOpacity=b);this._setNodeEdgeOpacity(a,b)}_setNodeEdgeOpacity(a,b){null!=this._edgeView&&a.cachedEdgeMaterials&&(Y(a.cachedEdgeMaterials,b),a=a.objectHandle,this._edgeView.hasObject(a)&&this._edgeView.updateAllComponentOpacities(a,b).catch(c=>M(c,this.i3slayer.title)))}get hasModifications(){return this._isIntegratedMesh&&null!=
this._layerClippingArea||this._modifications&&0<this._modifications.length}updateNodeModificationStatus(a){var b=a.length;if(this.hasModifications&&!(0>=b)&&!0===this._i3sWasmLoaded){b=this.uid;var c=Jb(a);if(null!=c){ba.filterObbsForModificationsSync({context:b,buffer:c.buffer});const d=new Float64Array(c.buffer);a.forAll((e,f)=>{f=ba.interpretObbModificationResults(d[f]);e.imModificationImpact=f;f!==ka.NodeIMModificationImpact.Unmodified&&this._controller.invalidateGeometryVisibility(e.index)})}}}notifyUpdate(){this.notifyChange("updating")}notifyLODUpdate(){this._controller.notifyLODUpdate()}isUpdating(){return!(!this._controller||
!this._controller.updating)||!!this._visibleGeometryChangedSchedulerHandle||null!=this._labeler&&this._labeler.updating||this._crossfadeHelper?.updating||this._i3sWasmLoaded instanceof Promise||0<this._asyncModuleLoading||null!=this._elevationTask&&this._elevationTask.running}trackSnappingSources(a){const b={events:a,fetchEdgeLocations:async(c,d,e)=>{c=this._nodeId2Meta.get(c);if(null==c)throw Error("invalid-node");const {origin:f,buffer:h}=await this._collection.extractEdgeInformation(c.objectHandle,
d,e);this._snappingLocationsApplyElevation(c,h,f);return{type:"components",objectIds:c.featureIds,locations:h,origin:f}},remove:()=>{ra.removeUnordered(this._snappingSourcesTrackers,b)}};this._snappingSourcesTrackers.push(b);this._nodeId2Meta.forEach((c,d)=>{null!=c&&(c=this._controller.getRenderMbs(c.node),null!=c&&a.add(d,c))});return b}_snappingLocationsApplyElevation(a,b,c){if(a.elevationOffsets&&this.elevationInfo.mode!==w.ElevationMode.Absolute){var d=b.position0,e=b.position1;b=b.componentIndex;
var f=T.create(),h=T.create(),l=(m,n)=>{F.add(m,m,c);this.view.renderCoordsHelper.worldUpAtPosition(m,h);F.add(m,m,F.scale(h,h,n));F.subtract(m,m,c)};for(let m=0;m<d.count;m++){const n=a.elevationOffsets[b.get(m)];d.getVec(m,f);l(f,n);d.setVec(m,f);e.getVec(m,f);l(f,n);e.setVec(m,f)}}}_updateSnappingSources(a,b){const {index:c}=a.node;a=this._controller.getRenderMbs(a.node);if(null!=a)for(const d of this._snappingSourcesTrackers)b!==G.REMOVE&&b!==G.UPDATE||d.events.remove(c),b!==G.ADD&&b!==G.UPDATE||
d.events.add(c,a)}};q.__decorate([r.property()],g.prototype,"_hasLoadedPBRTextures",void 0);q.__decorate([r.property()],g.prototype,"_asyncModuleLoading",void 0);q.__decorate([r.property()],g.prototype,"_visibleGeometryChangedSchedulerHandle",void 0);q.__decorate([r.property()],g.prototype,"view",void 0);q.__decorate([r.property()],g.prototype,"i3slayer",void 0);q.__decorate([r.property()],g.prototype,"_controller",void 0);q.__decorate([r.property()],g.prototype,"_labeler",void 0);q.__decorate([r.property()],
g.prototype,"updating",void 0);q.__decorate([r.property()],g.prototype,"suspended",void 0);q.__decorate([r.property()],g.prototype,"contentVisible",null);q.__decorate([r.property({readOnly:!0})],g.prototype,"legendEnabled",null);q.__decorate([r.property()],g.prototype,"holeFilling",void 0);q.__decorate([r.property(Fb.updatingProgress)],g.prototype,"updatingProgress",void 0);q.__decorate([r.property()],g.prototype,"updatingProgressValue",null);q.__decorate([r.property()],g.prototype,"hasTexturesOrVertexColors",
null);q.__decorate([r.property()],g.prototype,"rendererTextureUsage",null);q.__decorate([r.property()],g.prototype,"elevationOffset",null);q.__decorate([r.property()],g.prototype,"elevationInfo",null);q.__decorate([r.property({type:Boolean})],g.prototype,"slicePlaneEnabled",void 0);q.__decorate([r.property()],g.prototype,"supportedTextureEncodings",null);q.__decorate([r.property()],g.prototype,"uncompressedTextureDownsamplingEnabled",null);q.__decorate([r.property({type:[rb]})],g.prototype,"_modifications",
void 0);q.__decorate([r.property({readOnly:!0})],g.prototype,"clientGeometry",null);q.__decorate([r.property()],g.prototype,"elevationRange",null);q.__decorate([r.property()],g.prototype,"_elevationTask",void 0);q.__decorate([r.property({readOnly:!0})],g.prototype,"_usePBR",null);return g=q.__decorate([$a.subclass("esri.views.3d.layers.I3SMeshView3D")],g)};w.makeScheduleFunction=Ka;Object.defineProperty(w,Symbol.toStringTag,{value:"Module"})});