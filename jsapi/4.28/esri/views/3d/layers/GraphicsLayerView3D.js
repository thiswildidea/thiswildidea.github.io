// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../core/Error ../../../core/maybe ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ./LayerView3D ./graphics/elevationAlignPointsInFeatures ./graphics/GraphicsProcessor ./graphics/queryForSymbologySnapping ./support/projectExtentUtils ../webgl-engine/lib/UpdatePolicy ../../layers/LayerView".split(" "),
function(d,h,k,l,e,c,x,y,m,n,p,q,r,t,u,v){c=class extends n.LayerView3D(v){constructor(){super(...arguments);this.type="graphics-3d";this.symbologySnappingSupported=!0;this._slicePlaneEnabled=!1;this.fullExtentInLocalViewSpatialReference=null;this.ignoresMemoryFactor=!0}initialize(){this._set("processor",new q.GraphicsProcessor({owner:this,scaleVisibilityEnabled:!0,frustumVisibilityEnabled:!0}));this.addResolvingPromise(this.processor.initializePromise);this.addHandles(this.layer.on("graphic-update",
a=>this.processor.graphicsCore.graphicUpdateHandler(a)));this.addResolvingPromise(t.toViewIfLocal(this).then(a=>this.fullExtentInLocalViewSpatialReference=a));this.layer.internal?this.notifyChange("updating"):this.addHandles(l.when(()=>this.view?.basemapTerrain?.ready,()=>()=>this.notifyChange("updating"),{once:!0}))}destroy(){this._updatingHandles.removeAll();this._set("processor",k.destroyMaybe(this.processor))}get loadedGraphics(){return this.layer.graphics}get legendEnabled(){return this.canResume()&&
!this.processor?.frustumVisibilitySuspended}get slicePlaneEnabled(){const a=this.layer.internal;return this._slicePlaneEnabled&&!a}set slicePlaneEnabled(a){this._slicePlaneEnabled=a}getSuspendInfo(){const a=super.getSuspendInfo();a.outsideScaleRange=this.processor?.scaleVisibilitySuspended??!1;a.outsideOfView=this.processor?.frustumVisibilitySuspended??!1;return a}async fetchPopupFeatures(a,b){return b?.clientGraphics??[]}getHit(a){return this.processor.getHit(a)}whenGraphicBounds(a,b){return this.processor.whenGraphicBounds(a,
b)}computeAttachmentOrigin(a,b){return this.processor?.computeAttachmentOrigin(a,b)}getSymbolLayerSize(a,b){return this.processor.getSymbolLayerSize(a,b)}queryGraphics(){return Promise.resolve(this.loadedGraphics)}maskOccludee(a){return this.processor.maskOccludee(a)}highlight(a){return this.processor.highlight(a)}async elevationAlignPointsInFeatures(a,b){const {processor:f}=this;if(null==f?.graphics3DGraphics)throw new h("graphicslayerview3d:missing-processor","A Graphics3D processor is needed to resolve graphics elevation.");
const {graphics3DGraphics:w}=f;return p.elevationAlignPointsInFeatures(this.view,this.layer,g=>"number"===typeof g?w.get(g):void 0,a,b)}async queryForSymbologySnapping(a,b){return r.queryForSymbologySnapping(this.processor,a,b)}get updatePolicy(){return this.processor?.graphicsCore.effectiveUpdatePolicy||u.UpdatePolicy.SYNC}canResume(){return super.canResume()&&!this.processor?.scaleVisibilitySuspended}isUpdating(){return this.view&&this.layer&&!(!this.processor?.updating&&(this.layer.internal||this.view.basemapTerrain?.ready))}get performanceInfo(){return{displayedNumberOfFeatures:this.loadedGraphics.length,
maximumNumberOfFeatures:-1,totalNumberOfFeatures:-1,nodes:0,core:null,updating:this.updating,elevationUpdating:this.processor?.elevationAlignment.updating??!1,visibilityFrustum:!this.processor?.frustumVisibilitySuspended}}get usedMemory(){return this.processor?.graphicsCore?.usedMemory??0}get unloadedMemory(){return this.processor?.graphicsCore?.unprocessedMemoryEstimate}};d.__decorate([e.property()],c.prototype,"loadedGraphics",null);d.__decorate([e.property({readOnly:!0})],c.prototype,"legendEnabled",
null);d.__decorate([e.property()],c.prototype,"layer",void 0);d.__decorate([e.property({readOnly:!0})],c.prototype,"processor",void 0);d.__decorate([e.property()],c.prototype,"_slicePlaneEnabled",void 0);d.__decorate([e.property({type:Boolean})],c.prototype,"slicePlaneEnabled",null);return c=d.__decorate([m.subclass("esri.views.3d.layers.GraphicsLayerView3D")],c)});