// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../chunks/vec4 ../../../../geometry/ellipsoidUtils ../../../../geometry/spatialReferenceEllipsoidUtils ../../../../geometry/projection/projectBoundingSphere ../../../../geometry/support/frustum ../../../../geometry/support/spatialReferenceUtils ../../../../chunks/sphere ../../../../layers/graphics/dehydratedPoint ../graphics/elevationAlignmentUtils ../graphics/ElevationContext ../graphics/featureExpressionInfoUtils ./ElevationRange ./I3SNode ./I3SUtil ../../support/orientedBoundingBox".split(" "),
function(d,m,v,w,x,y,p,z,A,B,t,C,u,q,k,h,n){class D{constructor(a,b,c,e,f,g,l,E,r={}){this._indexSR=a;this._renderCoordsHelper=b;this._clippingArea=f;this._elevationProvider=g;this._viewingMode=l;this._options=r;this._frustum=p.create();this._useFrustumCulling=!1;this._poi=m.create();this._elevationContext=null;this.minDistance=Infinity;this.maxDistance=0;this.maxLodLevel=2;this._tmpObb=n.create();this._tmp1=m.create();this._tmp2=m.create();this._tmp3=m.create();this._tmp0=m.create();this._screenspaceErrorBias=
r.screenspaceErrorBias||1;this._progressiveLoadFactor=r.progressiveLoadFactor||1;this.updateCamera(c,e);this.engineSR=this._renderCoordsHelper.spatialReference;this.updateElevationInfo(E);this._tmpPoint=B.makeDehydratedPoint(0,0,0,a);this._isECEFOBBInLocalMode=this._indexSR.isWGS84&&(this.engineSR.isWebMercator||z.isPlateCarree(this.engineSR));this._indexSREllipsoidRadius=w.getReferenceEllipsoid(this._indexSR).radius}updateElevationInfo(a){null==a?this._elevationContext=null:(this._elevationContext=
C.ElevationContext.fromElevationInfo(a),this._elevationContext.updateFeatureExpressionInfoContext(u.createContextWithoutExpressionSupport(u.extractExpressionInfo(a,!1))))}updateCamera(a,b){(this._useFrustumCulling=b)&&p.fromMatrix(a.viewMatrix,a.projectionMatrix,this._frustum);this._screenSizeFactor=1/(a.perScreenPixelRatio/2);this._camPos=a.eye;this.minDistance=Infinity;this.maxDistance=0}setPointOfInterest(a){this._poi=a}updateScreenSpaceErrorBias(a){const b=this._screenspaceErrorBias;this._screenspaceErrorBias=
a;return b}updateClippingArea(a){this._clippingArea=a}expandElevationRange(a,b,c){null!=this._elevationContext&&(a=a.mbs)&&(this._elevationProvider.getSphereElevationBounds?(b=this._elevationProvider.getSphereElevationBounds(a,this._indexSR))&&q.expandElevationRange(c,b.min,b.max):((a=this._elevationProvider.getElevation(a[0],a[1],a[2],this._indexSR,"relative-to-scene"===this._elevationContext.mode?"scene":"ground"))&&q.expandElevationRange(c,a,a),(b=b?null:this._elevationProvider.getRootElevationBounds?.())&&
q.expandElevationRange(c,b.min,b.max)))}getRenderMbs(a){const b=a.renderMbs;if(h.isValidMbs(b))return b;a.mbs&&v.copy(b,a.mbs);const c=a.elevationRangeMin;if(this._elevationContext&&Number.isFinite(c)){let e=0,f=0;a=a.elevationRangeMax;switch(this._elevationContext.mode){case "relative-to-ground":e=this._elevationContext.geometryZWithOffset(b[2],this._renderCoordsHelper)+c-b[2];f=a-c;break;case "on-the-ground":e=c-b[2],f=a-c}b[2]+=e+.5*f;b[3]+=.5*f}else this._elevationContext&&1E5>b[3]&&(this._tmpPoint.x=
b[0],this._tmpPoint.y=b[1],this._tmpPoint.z=b[2],b[2]=t.evaluateElevationAlignmentAtPoint(this._tmpPoint,this._elevationProvider,this._elevationContext,this._renderCoordsHelper));y.projectBoundingSphere(b,this._indexSR,b,this.engineSR);return b}_getVisibilityObb(a){if(null!=a.visibilityObb)return a.visibilityObb;const b=a.serviceObb,c=.01*this._indexSREllipsoidRadius;if(null==b||!a.mbs||!h.isValidObb(b)||this._isECEFOBBInLocalMode&&b.halfSize.some(e=>e>c))return null;a.serviceObbInRenderSR=this._computeRenderObb(b,
a.serviceObbInRenderSR,a.mbs[3],a.elevationRangeMin,a.elevationRangeMax);return a.serviceObbInRenderSR}_computeRenderObb(a,b,c,e,f){if(null==b)b=n.create();else if(h.isValidObb(b))return b;let g=0,l=0;if(this._elevationContext&&!Number.isNaN(e)&&Number.isFinite(e))switch(this._elevationContext.mode){case "relative-to-ground":g=this._elevationContext.geometryZWithOffset(a.center[2],this._renderCoordsHelper)+e-a.center[2];l=f-e;break;case "on-the-ground":g=e-a.center[2],l=f-e}else this._elevationContext&&
1E5>c&&(this._tmpPoint.x=a.center[0],this._tmpPoint.y=a.center[1],this._tmpPoint.z=a.center[2],g=t.evaluateElevationAlignmentAtPoint(this._tmpPoint,this._elevationProvider,this._elevationContext,this._renderCoordsHelper)-a.center[2]);0<l?(h.transformObb(a,this._indexSR,this._tmpObb,this.engineSR,g),n.computeOffsetObb(this._tmpObb,0,l,this._viewingMode,b)):h.transformObb(a,this._indexSR,b,this.engineSR,g);return b}isNodeVisible(a){const b=this.getRenderMbs(a);return this._isMBSinClippingArea(b)?this._useFrustumCulling?
(a=this._getVisibilityObb(a))?n.isVisible(a,this._frustum):p.intersectsSphere(this._frustum,A.wrap(b)):!0:!1}isGeometryVisible(a){if(!this._useFrustumCulling)return!0;const b=a.geometryObb;return null!=b?n.isVisible(b,this._frustum):this.isNodeVisible(a)}_isMBSinClippingArea(a){return null==this._clippingArea?!0:h.intersectBoundingRectWithMbs(this._clippingArea,a)!==h.MbsIntersectResult.OUTSIDE}_screenSpaceDiameterMbs(a,b){var c=this.getRenderMbs(a);a=Math.sqrt(d.squaredDistance(c,this._camPos));
c=a-c[3];this._updateMinMaxDistance(a);return 0>c?.5*Number.MAX_VALUE:b/c*this._screenSizeFactor}calcCameraDistance(a){return this.calcCameraDistanceToCenter(a)-this.getRenderMbs(a)[3]}calcCameraDistanceToCenter(a){a=this.getRenderMbs(a);a=d.distance(a,this._camPos);this._updateMinMaxDistance(a);return a}calcAngleDependentLoD(a){a=this.getRenderMbs(a);const b=a[3];a=(Math.abs(a[0]*(a[0]-this._camPos[0])+a[1]*(a[1]-this._camPos[1])+a[2]*(a[2]-this._camPos[2]))/d.length(a)+b)/d.distance(a,this._camPos);
return Math.min(1,a)}hasLOD(a){return a.lodMetric!==k.LodMetric.None}_getDistancePlanarMode(a,b){var c=a[0]-b[0];const e=a[1]-b[1];a=a[2]-b[2];c=c*c+e*e;b=b[3];if(c<=b*b)return Math.abs(a);b=Math.sqrt(c)-b;return Math.sqrt(a*a+b*b)}_getDistanceGlobeMode(a,b){var c=d.length(b);const e=d.length(a)-c;d.scale(this._tmp0,a,d.dot(a,b)/d.squaredLength(a));var f=d.squaredDistance(b,this._tmp0),g=b[3];if(f<=g*g)return Math.abs(e);b=d.scale(this._tmp0,b,1/c);c=d.scale(this._tmp1,b,c-g*g/2/c);f=d.subtract(this._tmp2,
a,c);f=d.subtract(this._tmp2,f,d.scale(this._tmp3,b,d.dot(b,f)));c=d.add(this._tmp2,c,d.scale(this._tmp2,f,g/d.length(f)));g=d.distance(a,c);2E5<=e&&(a=d.subtract(this._tmp1,a,c),a=d.dot(a,b)/d.length(a),.08>a&&(a=1E-4),g/=a);return g}_getDistance(a,b){return this.engineSR===x.getSphericalPCPF(this.engineSR)?this._getDistanceGlobeMode(a,b):this._getDistancePlanarMode(a,b)}_updateMinMaxDistance(a){0<a?(this.minDistance=Math.min(this.minDistance,a),this.maxDistance=Math.max(this.maxDistance,a)):(this.minDistance=
0,this.maxDistance=Math.max(this.maxDistance,-a))}getLodLevel(a){if(a.lodMetric===k.LodMetric.None)return 0;if(0===a.childCount)return this.maxLodLevel;if(this._useFrustumCulling&&1>this._progressiveLoadFactor){const b=this._screenspaceErrorBias;return this.evaluateLODmetric(a,this._progressiveLoadFactor*this._screenspaceErrorBias)?this.evaluateLODmetric(a,b)?2:1:0}return this.evaluateLODmetric(a,this._screenspaceErrorBias)?this.maxLodLevel:0}evaluateLODmetric(a,b){switch(a.lodMetric){case k.LodMetric.ScreenSpaceRelative:const c=
this.getRenderMbs(a),e=this._getDistance(this._camPos,c),f=2*e/this._screenSizeFactor;this._updateMinMaxDistance(e+c[3]);return a.maxError*b<=f;case k.LodMetric.MaxScreenThreshold:return b=this._screenSpaceDiameterMbs(a,a.mbs[3]*b),this._options.angleDependentLoD&&(b*=this.calcAngleDependentLoD(a)),b<a.maxError;case k.LodMetric.RemovedFeatureDiameter:return 10>this._screenSpaceDiameterMbs(a,a.maxError)*b;case k.LodMetric.DistanceRangeFromDefaultCamera:return this.calcCameraDistance(a)>a.maxError*
b}return!1}distToPOI(a){a=this.getRenderMbs(a);return d.distance(a,this._poi)-a[3]}distCameraToPOI(){return d.distance(this._camPos,this._poi)}}return D});