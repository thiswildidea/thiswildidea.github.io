// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/Evented ../../../../core/Logger ../../../../core/accessorSupport/decorators/property ../../../../core/accessorSupport/ensureType ../../../../core/arrayUtils ../../../../core/has ../../../../core/accessorSupport/decorators/subclass ../../../../chunks/mat4 ../../../../chunks/mat4f64 ../../../../chunks/vec3 ../../../../chunks/vec3f64 ../../../../geometry/projection/projectBoundingSphere ../../../../geometry/support/aaBoundingRect ../../../../chunks/sphere ../../webgl-engine/lib/Intersector ../../webgl-engine/lib/IntersectorInterfaces".split(" "),
function(h,e,v,w,l,G,H,I,x,y,z,A,n,B,m,C,D,E){const f=m.empty(),k=z.create(),u=C.fromValues(0,0,0,0),c=n.create(),p=n.create(),q=n.create();e=class extends v.EventedMixin(e){get spatialReference(){return this.view?.elevationProvider?.spatialReference}constructor(a){super(a);this._tmpEvent={spatialReference:null,extent:f,context:"scene"}}initialize(){this.view=this.layerView.view;this._renderCoordsHelper=this.view.renderCoordsHelper;this._intersector=D.newIntersector(this.view.state.viewingMode);this._intersector.options.store=
E.StoreResults.MIN;this._tmpEvent.context=this.intersectionHandler.isGround?"ground":"scene"}getElevation(a,d,g,b){c[0]=a;c[1]=d;c[2]=g;a=this._renderCoordsHelper;if(!a.toRenderCoords(c,b,c))return w.getLogger(this).error("could not project point to compute elevation"),null;const {layerView:r,_intersector:t,intersectionHandler:F}=this;b=r.i3slayer.fullExtent;b=null!=b&&Number.isFinite(b.xmin)&&Number.isFinite(b.xmax)&&Number.isFinite(b.ymin)&&Number.isFinite(b.ymax)&&Number.isFinite(b.zmin)&&Number.isFinite(b.zmax)?
{min:b.zmin,max:b.zmax}:r.elevationRange;if(null==b)return null;d=r.elevationOffset;g=b.min+d;a.setAltitude(p,b.max+d,c);a.setAltitude(q,g,c);t.reset(p,q,null);F.intersect(t,null,p,q);return t.results.min.getIntersectionPoint(c)?a.getAltitude(c):null}getSphereElevationBounds(a,d){B.projectBoundingSphere(a,d,u,this._renderCoordsHelper.spatialReference);return this.layerView.getElevationRange(u)}getRootElevationBounds(){const a=this.layerView.i3slayer.fullExtent;return a?.hasZ?{min:a.zmin,max:a.zmax}:
null}layerChanged(){this.spatialReference&&(this._tmpEvent.extent=this._computeLayerExtent(),this._tmpEvent.spatialReference=this.spatialReference,this.emit("elevation-change",this._tmpEvent))}objectChanged(a){this.spatialReference&&(this._tmpEvent.extent=this._computeObjectExtent(a),this._tmpEvent.spatialReference=this.spatialReference,this.emit("elevation-change",this._tmpEvent))}_computeObjectExtent(a){m.empty(f);this._expandExtent(a,f);return f}_computeLayerExtent(){m.empty(f);for(const a of this.layerView.getVisibleNodes())this._expandExtent(a,
f);return f}_expandExtent(a,d){const g=this.spatialReference;if(null!=g&&(a=this.layerView.getNodeComponentObb(a),null!=a)){y.fromQuat(k,a.quaternion);k[12]=a.center[0];k[13]=a.center[1];k[14]=a.center[2];for(let b=0;8>b;++b)c[0]=b&1?a.halfSize[0]:-a.halfSize[0],c[1]=b&2?a.halfSize[1]:-a.halfSize[1],c[2]=b&4?a.halfSize[2]:-a.halfSize[2],A.transformMat4(c,c,k),this._renderCoordsHelper.fromRenderCoords(c,c,g),m.expand(d,c,d)}}};h.__decorate([l.property({constructOnly:!0})],e.prototype,"layerView",void 0);
h.__decorate([l.property({constructOnly:!0})],e.prototype,"intersectionHandler",void 0);h.__decorate([l.property()],e.prototype,"view",void 0);h.__decorate([l.property()],e.prototype,"spatialReference",null);return e=h.__decorate([x.subclass("esri.views.3d.layers.i3s.I3SElevationProvider")],e)});