// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../core/Error ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../../layers/support/rasterFunctions/rasterProjectionHelper ./LayerView3D ./TiledLayerView3D ../terrain/RasterTile ../../layers/ImageryTileLayerView ../../layers/LayerView ../../layers/RefreshableLayerView ../../support/drapedUtils ../../webgl/capabilities".split(" "),
function(f,m,n,g,e,A,B,p,q,r,t,u,v,w,x,y,z){e=class extends v(x(t.TiledLayerView3D(r.LayerView3D(w)))){constructor(){super(...arguments);this.type="imagery-tile-3d";this.isAlignedMapTile=!0}initialize(){this.layer.increaseRasterJobHandlerUsage();null==this.fullExtent&&this.addResolvingPromise(Promise.reject(new m("layerview:spatial-reference-incompatible","The layer extent cannot be projected to the view's spatial reference",{layer:this.layer})));const a=n.whenOnce(()=>this.view?.basemapTerrain?.tilingSchemeLocked).then(()=>
{const b=this.view.basemapTerrain.tilingScheme,c=this.layer.tileInfo,d=["png","png24","png32","jpg","mixed"].includes(c.format)&&b.compatibleWith(c);this.tileInfo=(this.isAlignedMapTile=d)?c:b.toTileInfo();this._updatingHandles.add(()=>[this.layer.renderer,this.layer.interpolation,this.layer.bandIds,this.layer.multidimensionalDefinition,this.layer.multidimensionalSubset,this.layer.rasterFunction,this.timeExtent],()=>this.refresh())});this.addResolvingPromise(a)}destroy(){this.layer.decreaseRasterJobHandlerUsage();
this.view=null}get _blankTile(){const a=document.createElement("canvas"),b=a.getContext("2d"),[c,d]=this.tileInfo.size;a.width=c;a.height=d;b.clearRect(0,0,c,d);return b.getImageData(0,0,c,d)}get imageFormatIsOpaque(){return"jpg"===this.layer.tileInfo.format}get hasMixedImageFormats(){return"mixed"===this.layer.tileInfo.format}get dataLevelRange(){var a=this.layer.tileInfo;const b=this.tileInfo.lodAt(0)?.scale;a=this.layer.tileInfo.lodAt(a.lods.length-1)?.scale;return this.levelRangeFromScaleRange(b,
a)}_getfullExtent(){return q.projectDatasetExtent(this.layer.rasterInfo,null!=this.view.basemapTerrain?.spatialReference?this.view.basemapTerrain.spatialReference:this.view.spatialReference)}async fetchTile(a,b,c,d){const k=this.tileInfo,l=this._canSymbolizeInWebGL();d=await this.layer.fetchTile(a,b,c,{tileInfo:k,requestRawData:l,signal:d.signal,timeExtent:this.timeExtent,requestAsImageElement:this.isAlignedMapTile});if(d instanceof HTMLImageElement)return d;let h=d?.pixelBlock;if(null==h||!l&&(h=
await this.layer.applyRenderer(d),null==h))return this._blankTile;b=new u.RasterTile([a,b,c],h,k.size[0],k.size[1]);l?(b.symbolizerRenderer=this.layer.symbolizer.rendererJSON,b.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(a)),b.transformGrid=d.transformGrid):b.isRendereredSource=!0;b.interpolation=this.layer.interpolation;b.bandIds=this.layer.bandIds;return b}_getSymbolizerOptions(a){a=this.tileInfo.lodAt(a).resolution;return{pixelBlock:null,isGCS:null!=
this.view.basemapTerrain?.spatialReference?this.view.basemapTerrain.spatialReference.isGeographic:this.view.spatialReference.isGeographic,resolution:{x:a,y:a},bandIds:this.layer.bandIds}}ensureSymbolizerParameters(a){this._canSymbolizeInWebGL()&&JSON.stringify(a.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(a.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(a.lij[0])))}createFetchPopupFeaturesQueryGeometry(a,b){return y.createQueryGeometry(a,
b,this.view)}refresh(){this.emit("data-changed")}async doRefresh(){this.suspended||this.emit("data-changed")}_canSymbolizeInWebGL(){const a=z.getWebGLCapabilities("3d"),{symbolizer:b}=this.layer;var c=b.lookup?.colormapLut?.indexedColormap;c=c&&c.length>4*(a.maxTextureSize||4906);return a.supportsTextureFloat&&b.canRenderInWebGL&&!c}};f.__decorate([g.property({readOnly:!0})],e.prototype,"_blankTile",null);f.__decorate([g.property({readOnly:!0})],e.prototype,"imageFormatIsOpaque",null);f.__decorate([g.property({readOnly:!0})],
e.prototype,"hasMixedImageFormats",null);f.__decorate([g.property({readOnly:!0})],e.prototype,"dataLevelRange",null);return e=f.__decorate([p.subclass("esri.views.3d.layers.ImageryTileLayerView3D")],e)});