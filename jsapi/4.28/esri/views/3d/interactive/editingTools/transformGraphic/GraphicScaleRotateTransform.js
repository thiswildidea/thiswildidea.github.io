// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/tslib.es6 ../../../../../core/Accessor ../../../../../core/colorUtils ../../../../../core/Cyclical ../../../../../core/Evented ../../../../../core/mathUtils ../../../../../core/maybe ../../../../../core/quantityUtils ../../../../../core/reactiveUtils ../../../../../core/scheduling ../../../../../core/screenUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/accessorSupport/ensureType ../../../../../core/arrayUtils ../../../../../core/has ../../../../../core/accessorSupport/decorators/subclass ../../../../../chunks/mat4 ../../../../../chunks/mat4f64 ../../../../../chunks/vec3 ../../../../../chunks/vec3f64 ../../../../../geometry/support/plane ../../../../../geometry/support/ray ../../../../../geometry/support/vectorStacks ../../../../../support/elevationInfoUtils ../../Manipulator3D ../../manipulatorUtils ../../RenderObject ../dragEventPipeline3D ../ManipulatorType ../manipulations/config ../../../webgl-engine/lib/basicInterfaces ../../../webgl-engine/lib/GeometryUtil ../../../webgl-engine/lib/Material ../../../webgl-engine/materials/ColorMaterial ../../../../interactive/dragEventPipeline ../../../../interactive/interfaces ../../../../interactive/tooltip/Tooltip ../../../../interactive/tooltip/TransformTooltipInfos".split(" "),
function(x,B,Z,aa,ba,ca,J,U,I,C,da,ea,F,va,wa,xa,fa,G,ha,w,K,L,M,r,ia,ja,ka,y,la,ma,e,na,Q,oa,pa,qa,A,ra,R){function sa(a,c){var d=w.subtract(r.sv3d.get(),c.renderStart,a.origin);a=w.subtract(r.sv3d.get(),c.renderEnd,a.origin);d=w.length(d);a=w.length(a);return 0===d?0:a/d}function ta(a,c,d,b){const {renderStart:f,renderEnd:q}=a;var m=N(f,b,r.sv3d.get());a=N(q,b,r.sv3d.get());if(w.squaredDistance(m,a)<e.dragThresholdPx*e.dragThresholdPx)return null;const h=w.subtract(r.sv3d.get(),f,d);c=w.cross(r.sv3d.get(),
h,L.normal(c));c=w.add(r.sv3d.get(),f,c);d=N(d,b,r.sv3d.get());b=N(c,b,r.sv3d.get());c=w.subtract(r.sv3d.get(),b,m);b=w.subtract(r.sv3d.get(),m,d);m=M.wrap(m,c);b=M.wrap(d,b);return M.distance2(m,a)<M.distance2(b,a)?"rotate":"scale"}function N(a,c,d){c.projectToScreen(a,S);return w.set(d,S[0],S[1],0)}function V(a,c){let d=null,b=1;const f=()=>b;return{start:()=>{b=a.getScale();d=a.getScale;a.getScale=f;c()},update:q=>{b+=((b+1)/2-b)*Math.min(q*e.ringResetAnimationSpeedFactor,1);c();return.01>Math.abs(b-
1)?H.STOP:H.CONTINUE},destroy:()=>{d&&(a.getScale=d);c()}}}function ua(a,c,d){let b=0,f=null;const q=()=>!1;return{start:()=>{f=a.getFocused;a.getFocused=q;b=0;c()},update:m=>{b+=m;return!f?.()||b>=d.delayMs?H.STOP:H.CONTINUE},destroy:()=>{f&&(a.getFocused=f);c()}}}function O(a){switch(a){case "integer":case "long":return 0;default:return null}}var g;(function(a){a.ScaleIn=A.ManipulatorStateCustomFlags.Custom2;a.ScaleOut=A.ManipulatorStateCustomFlags.Custom3;a.RotateLeft=A.ManipulatorStateCustomFlags.Custom4;
a.RotateRight=A.ManipulatorStateCustomFlags.Custom5;a.Unlocked=A.ManipulatorStateCustomFlags.Custom7;a.DelayedFocused=A.ManipulatorStateCustomFlags.Custom8;a.TouchInput=A.ManipulatorStateCustomFlags.Custom12})(g||(g={}));x.GraphicScaleRotateTransform=class extends Z{get angle(){return this.adapter.angle}get scale(){return this.adapter.scale}set location(a){this._ringManipulator.location=a}set elevationAlignedLocation(a){this._ringManipulator.elevationAlignedLocation=a}get grabbing(){return this._ringManipulator.grabbing}set interactive(a){this._ringManipulator.interactive=
a}get updating(){return!!this._activeAnimation}constructor(a){super(a);this._activeAnimation=this._scaleRotateDragData=this.mode=null;this._ringIndicatorDelayMs=e.ringIndicatorDelayMs;this._rotateTooltipInfo=this._scaleTooltipInfo=this._absoluteTooltipInfo=null;this.events=new ca;this.getFocused=()=>this._ringManipulator.focused;this.getScale=()=>"scale"===this._scaleRotateDragData?.mode?this.adapter.scale:1}initialize(){this._tooltip=new ra.Tooltip({view:this.tool.view});this._createManipulator();
this._updateDragState();this._updateManipulatorTransform();this.addHandles([C.when(()=>!this.tooltipOptions.enabled,()=>this._tooltip.clear(),C.initial),C.watch(()=>{const {adapter:a}=this,{info:c}=this._tooltip;return c===this._absoluteTooltipInfo&&this.getFocused()?[c,a.size,a.orientationClockwise]:[null]},([a])=>{a&&this._updateFocusTooltip()})])}destroy(){this._activeAnimation?.frameTask.remove();this._activeAnimation=null;this.tool.manipulators.remove(this._ringManipulator);this._ringManipulator=
null;this._tooltip=U.destroyMaybe(this._tooltip)}startAnimation(a){this.cancelActiveAnimation();a.start();const c=da.addFrameTask({update:({deltaTime:d})=>{a.update(d)&&this.cancelActiveAnimation()}});this._activeAnimation={...a,frameTask:c}}cancelActiveAnimation(){this._activeAnimation?.frameTask.remove();this._activeAnimation=U.destroyMaybe(this._activeAnimation)}forEachManipulator(a){a(this._ringManipulator,ma.ManipulatorType.SCALE_ROTATE)}_createManipulator(){const a=this._createRingManipulator();
this._ringManipulator=a;this.tool.manipulators.add(a);const c=this.tool.graphicState.graphic,d=qa.createManipulatorDragEventPipeline(a,(b,f,q)=>{this._scaleRotateDragData=null;const m=this.adapter.startInteraction(),h={mode:"none",origin:K.clone(b.renderLocation),initialAngle:this.adapter.angle,angle:0,angleDir:0,scaleDir:0};this._scaleRotateDragData=h;this._updateDragState();const n=r.sv3d.get();this.tool.view.renderCoordsHelper.worldUpAtPosition(b.renderLocation,n);f.next(la.screenToRenderPlane(this.tool.view,
L.fromPositionAndNormal(b.renderLocation,n,L.create()))).next(k=>{var l=L.normal(k.plane);l=ka.calculateInputRotationTransform(k.renderStart,k.renderEnd,h.origin,l);var p=ba.cyclicalPI.shortestSignedDiff(h.angle,l);h.angleDir=J.clamp(h.angleDir+p,-e.rotateIndicatorDirectionBuffer,e.rotateIndicatorDirectionBuffer);h.angle=l;p=sa(h,k);h.scaleDir=J.clamp(h.scaleDir+(p-this.adapter.scale),-e.scaleIndicatorDirectionBuffer,e.scaleIndicatorDirectionBuffer);this._onScaleChanged();if("none"===h.mode){const u=
this.mode||ta(k,k.plane,h.origin,this.tool.view.state.camera);if(null!=u){switch(u){case "rotate":this.tool.emit("graphic-rotate-start",{graphic:c,angle:0});this.tool.emit("record-undo",{record:this.adapter.createUndoRecord()});break;case "scale":this.tool.emit("graphic-scale-start",{graphic:c,xScale:1,yScale:1}),this.tool.emit("record-undo",{record:this.adapter.createUndoRecord()})}h.mode=u}}switch(h.mode){case "rotate":m.state.angle=h.initialAngle+l;break;case "scale":m.state.scale=p,this._onScaleChanged()}this._updateDragState();
this._updateManipulatorTransform();switch(k.action){case "start":case "update":switch(h.mode){case "rotate":this.tool.emit("graphic-rotate",{graphic:c,angle:J.rad2deg(h.angle)});break;case "scale":this.tool.emit("graphic-scale",{graphic:c,xScale:p,yScale:p})}break;case "end":switch(h.mode){case "rotate":this.tool.emit("graphic-rotate-stop",{graphic:c,angle:J.rad2deg(h.angle)});break;case "scale":this.tool.emit("graphic-scale-stop",{graphic:c,xScale:p,yScale:p})}}"end"===k.action&&(this.startAnimation(V(this,
()=>this._onScaleChanged())),this._scaleRotateDragData=null,this._updateDragState(),m.done());return k}).next(this._updateTooltipPipelineStep(h));q.next(()=>{m.cancel();if(null!=this._scaleRotateDragData){switch(this._scaleRotateDragData.mode){case "rotate":this.tool.emit("graphic-rotate-stop",{graphic:c,angle:0});break;case "scale":this.tool.emit("graphic-scale-stop",{graphic:c,xScale:1,yScale:1})}this.startAnimation(V(this,()=>this._onScaleChanged()));this._scaleRotateDragData=null;this._updateDragState()}this._updateFocusTooltip()})});
this.addHandles([d,a.events.on("focus-changed",b=>{"focus"===b.action?this.startAnimation(ua(this,()=>this._updateDelayedFocusedState(),{delayMs:this._ringIndicatorDelayMs})):this._updateDelayedFocusedState()}),a.events.on("immediate-click",b=>{b.stopPropagation()}),C.watch(()=>this.tool.graphicState?.displaying,b=>this._ringManipulator.available=b,C.initial)])}_updateTooltipPipelineStep(a){return c=>{const d=this.tooltipOptions;if(!d.enabled)return c;if("end"===c.action)return this._updateFocusTooltip(),
c;var b=this._tooltip,f=this.tooltipOptions.visualVariables;switch(a.mode){case "scale":b.info=this._scaleTooltipInfo??(this._scaleTooltipInfo=new R.TransformScaleTooltipInfo({tooltipOptions:d}));const {size:q,scale:m}=this.adapter;f=f?.size;b=b.info;b.tooltipOptions=d;b.scale={value:m};b.size=null!=q?I.createLength(q,"meters"):void 0;b.sizePrecision=O(f?.valueType);b.sizeUnit=f?.unit;break;case "rotate":b.info=this._rotateTooltipInfo??(this._rotateTooltipInfo=new R.TransformRotateTooltipInfo({tooltipOptions:d}));
const {orientationClockwise:h,relativeAngleClockwise:n}=this.adapter;f=f?.rotation;const k=O(f?.valueType);b=b.info;b.tooltipOptions=d;b.rotation=null!=n?I.createAngle(n,"radians","geographic"):void 0;b.rotationPrecision=k;b.rotationType=f?.rotationType??"geographic";b.orientation=null!=h?I.createAngle(h,"radians","geographic"):void 0;b.orientationPrecision=k}return c}}_updateFocusTooltip(){const {tooltipOptions:a,_tooltip:c}=this;if(a.enabled)if(this.getFocused()){var d=a.visualVariables;const f=
d?.rotation;d=d?.size;var b=this.mode;const {size:q,orientationClockwise:m}=this.adapter,h=null!=m&&(null==b||"rotate"===b);b=null!=q&&(null==b||"scale"===b);c.info=this._absoluteTooltipInfo??(this._absoluteTooltipInfo=new R.TransformAbsoluteTooltipInfo({tooltipOptions:a}));const n=c.info;n.tooltipOptions=a;n.orientation=h?I.createAngle(m,"radians","geographic"):void 0;n.orientationPrecision=O(f?.valueType);n.rotationType=f?.rotationType??"geographic";n.size=b?I.createLength(q,"meters"):void 0;n.sizeUnit=
d?.unit;n.sizePrecision=O(d?.valueType)}else c.clear()}_onScaleChanged(){this.events.emit("scale-changed");this._updateManipulatorTransform()}_updateDelayedFocusedState(){this._ringManipulator.updateStateEnabled(g.DelayedFocused,this.getFocused());this._updateFocusTooltip()}_updateDragState(){this._ringManipulator.updateStateEnabled(g.Unlocked,!(null!=this._scaleRotateDragData&&"none"!==this._scaleRotateDragData?.mode));if(null!=this._scaleRotateDragData)switch(this._scaleRotateDragData.mode){case "rotate":this._ringManipulator.updateStateEnabled(g.ScaleIn|
g.ScaleOut,!1);this._ringManipulator.updateStateEnabled(g.RotateLeft,0>this._scaleRotateDragData.angleDir);this._ringManipulator.updateStateEnabled(g.RotateRight,0<=this._scaleRotateDragData.angleDir);break;case "scale":this._ringManipulator.updateStateEnabled(g.RotateLeft|g.RotateRight,!1),this._ringManipulator.updateStateEnabled(g.ScaleIn,0>this._scaleRotateDragData.scaleDir),this._ringManipulator.updateStateEnabled(g.ScaleOut,0<=this._scaleRotateDragData.scaleDir)}else this._ringManipulator.updateStateEnabled(g.ScaleIn|
g.ScaleOut|g.RotateLeft|g.RotateRight,!1)}_updateManipulatorTransform(){const a=G.fromRotation(r.sm4d.get(),this.adapter.angle,K.fromValues(0,0,1));if(null!=a){var c=this.getScale();c=G.fromScaling(r.sm4d.get(),w.set(r.sv3d.get(),c,c,c));this._ringManipulator.modelTransform=G.multiply(r.sm4d.get(),c,a)}}_createRingManipulator(){var a=(v,D,P)=>{const W=[],X=Math.ceil(e.geometrySegments*(D-v)/(2*Math.PI));for(let T=0;T<X+1;T++){const Y=v+T*(D-v)/X;W.push(K.fromValues(P*Math.cos(Y),P*Math.sin(Y),0))}return W};
const c=this._createMaterial(1);var d=(v,D,P=c)=>Q.createPathExtrusionGeometry(P,[[-D/2,0],[D/2,0],[D/2,e.ringHeight/2],[-D/2,e.ringHeight/2]],v,[],[],!1),b=a(0,2*Math.PI,e.ringRadius),f=d(b,e.ringThickness),q=[],m=[];const h=[];for(var n=0;2>n;n++){var k=n*Math.PI-Math.PI/4,l=Math.PI/2-e.rotateIndicatorArcLength,p=k+l;k=k+Math.PI/2-l;l=a(p,k,e.innerIndicatorRadius);var u=d(l,e.indicatorThickness);h.push(l);h.push(a(p,k,e.outerIndicatorRadius-e.ringThickness/2));q.push(u);m.push(u.instantiate());
for(u=0;2>u;u++){var E=0===u,t=ha.create();if(E){G.scale(t,t,[1,-1,1]);G.rotate(t,t,-p,[0,0,1]);var z=Math.round(e.rotateIndicatorArrowPlacementPercentage*(l.length-1));t[12]=l[z][0];t[13]=l[z][1];t[14]=l[z][2]}else G.rotate(t,t,k,[0,0,1]),z=Math.round((1-e.rotateIndicatorArrowPlacementPercentage)*(l.length-1)),t[12]=l[z][0],t[13]=l[z][1],t[14]=l[z][2];z=Q.createExtrudedTriangle(c,e.rotateIndicatorArrowTipLength,0,e.rotateIndicatorArrowTipRadius,e.ringHeight);Q.transformInPlace(z,t);(E?q:m).push(z)}}n=
[];for(p=0;2>p;p++)k=p*Math.PI-Math.PI/4,l=Math.PI/2-e.scaleIndicatorArcLength,k=a(k+l,k+Math.PI/2-l,e.outerIndicatorRadius),n.push(d(k,e.indicatorThickness));E=this._createMaterial(.66);p=this._createMaterial(.5);l=this._createMaterial(.33);k=a(0,2*Math.PI,e.ringRadius+e.scaleIndicatorOffset1);u=a(0,2*Math.PI,e.ringRadius+e.scaleIndicatorOffset2);k=d(k,e.indicatorThickness,E);u=d(u,e.indicatorThickness,l);t=a(0,2*Math.PI,e.ringRadius-e.scaleIndicatorOffset1);a=a(0,2*Math.PI,e.ringRadius-e.scaleIndicatorOffset2);
E=d(t,e.indicatorThickness,E);d=d(a,e.indicatorThickness,l);f=[new y.RenderObject(f,g.DelayedFocused),new y.RenderObject(f.instantiate({material:p}),A.ManipulatorStateFlags.None)];this.mode&&"scale"!==this.mode||(f=f.concat([...n.map(v=>new y.RenderObject(v,g.DelayedFocused|g.Unlocked)),new y.RenderObject(k,g.DelayedFocused|g.ScaleIn),new y.RenderObject(u,g.DelayedFocused|g.ScaleIn),new y.RenderObject(E,g.DelayedFocused|g.ScaleOut),new y.RenderObject(d,g.DelayedFocused|g.ScaleOut)]));this.mode&&"rotate"!==
this.mode||(f=f.concat([...m.map(v=>new y.RenderObject(v.instantiate(),g.DelayedFocused|g.Unlocked)),...q.map(v=>new y.RenderObject(v,g.DelayedFocused|g.RotateLeft)),...m.map(v=>new y.RenderObject(v,g.DelayedFocused|g.RotateRight))]));b=[b,...h];return new ja.Manipulator3D({view:this.tool.view,renderObjects:f,autoScaleRenderObjects:!1,worldOriented:!0,radius:e.ringThickness,focusMultiplier:1,touchMultiplier:1.5,elevationInfo:ia.getGraphicEffectiveElevationInfo(this.tool.graphicState.graphic),collisionType:{type:"ribbon",
paths:b,direction:K.fromValues(0,0,1)}})}_createMaterial(a){const c=new pa.ColorMaterial({cullFace:na.CullFaceOptions.Back,renderOccluded:oa.RenderOccludedFlag.Transparent,isDecoration:!0});this.addHandles(C.watch(()=>({color:aa.multiplyOpacityToUnitRGBA(this.tool.view.effectiveTheme.accentColor,a)}),d=>c.setParameters(d),C.initial));return c}get test(){return{ringManipulator:this._ringManipulator,setRingIndicatorDelayMs:a=>this._ringIndicatorDelayMs=a,tooltip:this._tooltip}}};B.__decorate([F.property({constructOnly:!0})],
x.GraphicScaleRotateTransform.prototype,"tool",void 0);B.__decorate([F.property({constructOnly:!0})],x.GraphicScaleRotateTransform.prototype,"adapter",void 0);B.__decorate([F.property({constructOnly:!0})],x.GraphicScaleRotateTransform.prototype,"tooltipOptions",void 0);B.__decorate([F.property()],x.GraphicScaleRotateTransform.prototype,"mode",void 0);B.__decorate([F.property()],x.GraphicScaleRotateTransform.prototype,"_activeAnimation",void 0);B.__decorate([F.property()],x.GraphicScaleRotateTransform.prototype,
"updating",null);x.GraphicScaleRotateTransform=B.__decorate([fa.subclass("esri.views.3d.interactive.editingTools.transformGraphic.GraphicScaleRotateTransform")],x.GraphicScaleRotateTransform);var H;(function(a){a[a.CONTINUE=0]="CONTINUE";a[a.STOP=1]="STOP"})(H||(H={}));const S=ea.createScreenPointArray();Object.defineProperty(x,Symbol.toStringTag,{value:"Module"})});