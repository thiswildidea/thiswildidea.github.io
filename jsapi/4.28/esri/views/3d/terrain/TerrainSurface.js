// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("require ../../../chunks/tslib.es6 ../../../Color ../../../core/Accessor ../../../core/arrayUtils ../../../core/CollectionFlattener ../../../core/Evented ../../../core/Logger ../../../core/mathUtils ../../../core/maybe ../../../core/MemCachePool ../../../core/ObjectPool ../../../core/PooledArray ../../../core/promiseUtils ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../../chunks/mat4 ../../../chunks/mat4f64 ../../../chunks/vec3 ../../../chunks/vec3f64 ../../../chunks/vec4f64 ../../../core/support/UpdatingHandles ../../../geometry/ellipsoidUtils ../../../geometry/SpatialReference ../../../geometry/projection/projectPointToVector ../../../geometry/projection/projectVectorToVector ../../../geometry/support/aaBoundingRect ../../../geometry/support/frustum ../../../geometry/support/spatialReferenceUtils ../../../layers/mixins/RefreshableLayer ../../../layers/support/ElevationQueryTileCache ../../../layers/support/ElevationTileData ../../../layers/support/layerUtils ../../../layers/support/LercDecoder ../../2d/engine/vectorTiles/VectorTile ../support/cameraUtils ../support/debugFlags ../support/extentUtils ../support/index ../support/updatingProperties ./ElevationBounds ./ElevationData ./ExtentHelper ./interfaces ./LayerClass ./OverlayManager ./PlanarPatch ./RenderOrder ./ScaleRangeQueries ./SphericalPatch ./SplitLimits ./TerrainConst ./TerrainRenderer ./TerrainSurfacePerformanceInfo ./terrainUtils ./Tile ./TilePerLayerInfo ./TileUpdate ./tileUtils ./TilingSchemeLogic ./UpsampleInfo ../webgl-engine/core/shaderLibrary/output/BlendOptions ../webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl ../webgl-engine/lib/basicInterfaces ../../support/RenderState ../../support/Scheduler".split(" "),
function(da,k,ea,h,fa,ha,ia,z,ja,y,ka,P,Q,B,p,m,Qa,Ra,la,ma,na,oa,R,pa,qa,ra,S,T,L,x,H,sa,ta,ua,va,wa,xa,ya,za,U,Aa,V,Ba,I,W,Ca,A,t,Da,Ea,Fa,Ga,Ha,Ia,C,F,Ja,n,Ka,La,r,D,Ma,Na,X,Y,Z,Oa,M){function aa(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]}function ba(a){a=a.children;if(!a[0])return!1;for(const b of a)if(b.shouldLoad)return!0;for(const b of a)if(ba(b))return!0;return!1}function ca(a,b,c){for(const f of a)if(f.containsPointXY(b,c)){for(a=f;a&&!a.renderData;)a=a.children[(b>a.extentMidX?1:
0)+(c<a.extentMidY?2:0)];return W.sampleElevation(b,c,a?.renderData?.geometryState.samplerData??null)}return null}var J;h=J=class extends ia.EventedMixin(h){constructor(a){super(a);this._scaleRangeQueries=new Ga.ScaleRangeQueries;this._iteratorPool=new P(D.IteratorPreorder,b=>b.remove=()=>this._iteratorPool.release(b));this._postorderIterator=new D.IteratorPostorder;this._hasPendingUpdates=!1;this._asyncWorkItems=this._pendingUpdates=0;this._allTilesSorted=this._allTilesDirty=!0;this._usedMemory=
null;this._performanceInfo=new Ja;this._viewChangeUpdateDirty=this._inFrameTask=this._viewChanged=!1;this._eyePosRenderSR=R.create();this._eyePosSurfaceSR=R.create();this._splitLimits=new Ia.SplitLimits;this._frustum=H.create();this._viewProjectionMatrix=na.create();this._layerViews=[[],[]];this._layerIndexByUid=[new Map,new Map];this._basemapLayerViewHandles=new Map;this._watchUpdatingTracking=new qa.UpdatingHandles;this._frameTask=M.ImmediateTask;this._allTiles=new Q;this._upsampleInfoPool=new P(Na.UpsampleInfo);
this._shouldEmitChangeEvent=!1;this._rootTilesExtent=x.create();this.updatingProgress=.5;this._maxNumUpdating=1;this.maxTextureScale=1.2;this._spatialReference=S.WebMercator;this.visibleElevationBounds=new I.ElevationBounds(Infinity,-Infinity);this.rootTileElevationBounds=new I.ElevationBounds(Infinity,-Infinity);this._updatingRootTiles=!1;this._pendingTilesForElevationUpdateEvent=new Set;this._pendingTilesToUpdate=new Set;this.totalTileUpdates=this.totalGeometryUpdates=0;this._oneBatchPerFrameTask=
!0;this._layerViewsDirty=!1;this.unloadedMemory=0;this._isWebMercatorOnPlateeCarree=this._isWebMercator=this.ignoresMemoryFactor=!1;this.overlayManager=new Da.OverlayManager({...a,surface:this});this._tileConstructor=(this._isGlobal=!a.view?.state?.isLocal)?Ha.SphericalPatch:Ea.PlanarPatch}initialize(){const a=this.view,b=a.resourceController;this._lercDecoder=xa.acquireDecoder(b);const c=b.memoryController;this._tileCache=new ka.MemCachePool((g,l)=>c.newCache(g,l),"terrain-tile");this._upsampleMapCache=
c.newCache("terrain-upsample",g=>g.unloadMapData());this._elevationQueryCache=new ua.ElevationQueryTileCache(c.newCache("elevation-query"));const f=this.overlayManager;this._renderer=new F.TerrainRenderer(f.renderer,a._stage,this._allTiles,ra.getReferenceEllipsoid(a.spatialReference).radius,c);this.addHandles([p.watch(()=>f.rendersOccluded,g=>this._renderer.setRenderOccludedOverlay(g)),p.watch(()=>f.renderer.isEmpty,()=>this._evaluateTransparency()),p.watch(()=>this.renderer.visible,g=>this.suspended=
!g)],"overlayManager");this.addHandles([p.watch(()=>this.baseOpacity,()=>{this._handleLayerViewChanges();this._updateTileTextures(this._evaluateTransparency()?A.TextureUpdate.UNFADED:A.TextureUpdate.IMMEDIATE)},p.syncAndInitial),p.watch(()=>this.hasCompositeBlendMode,()=>this._updateTileTextures(this._evaluateTransparency()?A.TextureUpdate.UNFADED:A.TextureUpdate.IMMEDIATE),p.syncAndInitial),p.watch(()=>this.backgroundColor,(g,l)=>{g?.equals(l)||(this._handleLayerViewChanges(),this._renderer.updateTileBackground(g))},
p.sync),p.watch(()=>this.snapLevel,()=>this._viewChanged=!0,p.sync),p.watch(()=>this.view.pointsOfInterest,g=>{this._renderer.pointsOfInterest=g;this._watchUpdatingTracking.removeAll();g&&this._watchUpdatingTracking.add(()=>g.focus.renderLocation,()=>this._allTilesSorted=!1)}),p.watch(()=>U.debugFlags.TERRAIN_TILE_TREE_SHOW_TILES,g=>{g&&!this._treeDebugger?(new Promise((l,q)=>da(["../layers/support/TerrainTileTree3DDebugger"],l,q))).then(({TerrainTileTree3DDebugger:l})=>{!this._treeDebugger&&U.debugFlags.TERRAIN_TILE_TREE_SHOW_TILES&&
(this._treeDebugger=new l({view:a}))}):g||(this._treeDebugger=y.destroyMaybe(this._treeDebugger))},p.initial)]);var {spatialReference:d}=a;this._extentHelper=Ca.create(this.viewingMode,{layers:a.map.allLayers,layerViews:a.allLayerViews,viewSpatialReference:d});const e=new ha({getCollections:()=>a.defaultsFromMap?.mapCollections?.map(({layers:g})=>g),getChildrenFunction:g=>g&&"layers"in g?g.layers:null});d=new Ma.TilingSchemeLogic({layers:e,extentHelper:this._extentHelper,viewingMode:this.viewingMode,
viewSpatialReference:d});this._set("tilingSchemeLogic",d);this._updateTilingScheme();this._elevationDataRequester=b.createStreamDataRequester(V.ClientType.ELEVATION);this._mapDataRequester=b.createStreamDataRequester(V.ClientType.BASEMAP);this._frameTask=b.scheduler.registerTask(M.TaskPriority.TERRAIN_SURFACE,this);this.addHandles([p.watch(()=>this._extentHelper.stencilEnabledExtents,g=>this._renderer.setStencilEnabledLayerExtents(g),p.initial),p.watch(()=>this.tilingSchemeLogic.tilingScheme,()=>
this._updateTilingScheme(),p.sync),p.watch(()=>this.extent,()=>this._updateRootTiles(),p.initial),a.on("resize",()=>this._viewChangeUpdate()),p.watch(()=>{const g=a.state;return[this._lodBias,this.lodSnapping,a.quality,g.camera,g.contentCamera,g.fixedContentCamera]},()=>this._viewChangeUpdate(),p.syncAndInitial),p.watch(()=>a.qualitySettings?.tiledSurface?.textureFadeDuration,g=>this._renderer.textureFadingEnabled=0<g,p.initial),p.watch(()=>a.qualitySettings?.physicallyBasedRenderingEnabled,g=>this._renderer.pbrMode=
g?Y.PBRMode.Terrain:Y.PBRMode.Disabled,p.initial),p.watch(()=>this._userClippingExtent,()=>this._updateClippingExtent(),p.sync)]);this.addHandles(a.allLayerViews.on("after-changes",()=>this._layerViewsDirty=!0));this._layerViewsDirty=!0;this._handleLayerViewChanges();this._renderer.updateTileBackground(this.backgroundColor)}destroy(){this._frameTask.remove();this._watchUpdatingTracking.destroy();this._lercDecoder=y.releaseMaybe(this._lercDecoder);this._removeAllTiles();this._set("tilingSchemeLogic",
y.destroyMaybe(this.tilingSchemeLogic));this._basemapLayerViewHandles.forEach((a,b)=>this._unregisterTiledLayerView(b));this._mapDataRequester=this._elevationDataRequester=null;this._set("overlayManager",y.destroyMaybe(this.overlayManager));this._tileCache=y.destroyMaybe(this._tileCache);Ka.Tile.prune();this._treeDebugger=y.destroyMaybe(this._treeDebugger);this._renderer=y.destroyMaybe(this._renderer);this._iteratorPool=y.destroyMaybe(this._iteratorPool);this._upsampleMapCache=y.destroyMaybe(this._upsampleMapCache);
this._elevationQueryCache=y.destroyMaybe(this._elevationQueryCache);this._set("view",null);this._extentHelper=y.destroyMaybe(this._extentHelper);this._upsampleInfoPool=y.destroyMaybe(this._upsampleInfoPool);ya.printAllocations();La.printAllocations()}get renderer(){return this._renderer}get frustum(){return this._frustum}get snapLevel(){if(this.lodSnapping===A.LODSnapping.ON){var a=this.view,b=this.tilingScheme;const f=a.pointsOfInterest?.cameraOnSurface?.scale;if(b&&f){var c=a.state.contentCamera;
c=za.directionToHeadingTilt(a,c.eye,c.viewForward,c.up).tilt;90<c&&(c=180-c);c=2*(c/90)**2;b=b.levelAtScale(f);a=Math.min(b-c+a.qualitySettings.tiledSurface.lodBias,this._splitLimits.maxLod||Infinity);return 0>=a?null:a}}return null}get lodSnapping(){return this.view.qualitySettings.tiledSurface.reduceTileLevelDifferences?A.LODSnapping.ON:A.LODSnapping.OFF}get upsampleInfoPool(){return this._upsampleInfoPool}get upsampleMapCache(){return this._upsampleMapCache}get elevationQueryCache(){return this._elevationQueryCache}get mapTileRequester(){return this._mapDataRequester}get _userClippingExtent(){var {spatialReference:a}=
this,{clippingArea:b}=this.view;if(null==b||null==a)return null;const c=x.create();a=Aa.toBoundingRect(b,c,a)?c:null;b=this._get("extent");return x.equals(a,b)?b:a}get rootTilesExtent(){return this._rootTilesExtent}get extent(){const a=x.intersection(this.groundExtent,this._userClippingExtent,x.create()),b=this._get("extent");return x.equals(a,b)?b:a}get groundExtent(){return null!=this._tilingSchemeExtent?this._tilingSchemeExtent:this._rootTilesExtent}get _tilingSchemeExtent(){return this.tilingSchemeLogic?.extent}get updating(){this._hasPendingUpdates||
(this._maxNumUpdating=1);return!!((this.running||this._watchUpdatingTracking?.updating||0<this._asyncWorkItems)&&this.ready&&!this.suspended||this.overlayManager?.updating)}get running(){return(this._hasPendingUpdates||this._viewChanged||this._allTilesDirty||!this._allTilesSorted||this._layerViewsDirty||this._scaleRangeQueries.updating||this._frameTask.updating)&&this.ready&&!this.suspended}get updatingProgressValue(){this._maxNumUpdating=Math.max(this._pendingUpdates,this._maxNumUpdating);return 1-
this._pendingUpdates/this._maxNumUpdating}get baseOpacity(){return this.view?.map?.ground?.opacity??1}set baseOpacity(a){this.view.map.ground.opacity=a}get viewingMode(){return this.view.state.viewingMode}get ready(){return null!=this._rootTiles}set renderOrder(a){this._renderer.renderOrder=a;this._set("renderOrder",a)}get rootTiles(){return this._rootTiles}get spatialReference(){return this.tilingScheme?.spatialReference??null}get backgroundColor(){return this.view?.map?.ground?.surfaceColor}set backgroundColor(a){this.view.map.ground.surfaceColor=
a}set slicePlaneEnabled(a){this._renderer.slicePlaneEnabled=a;this._set("slicePlaneEnabled",a);this._evaluateTransparency()}get tilingSchemeLocked(){return this.tilingSchemeLogic?.tilingSchemeLocked??!1}get wireframe(){return this._renderer?.wireframe}set wireframe(a){a!==this._renderer.wireframe&&(this._renderer.wireframe=a,this._updateAllTileGeometries())}get opaque(){return this._renderer.transparency===F.TransparencyMode.Opaque}set suspended(a){this._set("suspended",a);this._viewChangeUpdate()}get textureFadeDuration(){return this.view.qualitySettings.tiledSurface.textureFadeDuration??
0}intersect(a,b,c,f){this._renderer.intersect(a,b,c,f)}getElevation(a,b,c,f){const d=this._rootTiles;if(!d?.length||0===d[0].layerInfo[t.LayerClass.ELEVATION].length)return null;const e=v;e[0]=a;e[1]=b;e[2]=c;return L.projectVectorToVector(e,f,e,this._spatialReference)?ca(d,e[0],e[1]):(z.getLogger(this).error("TerrainSurface.getElevation(): could not project given point to tiling scheme coordinate system"),null)}getElevations(a,b,c){const f=this._rootTiles;var d=f?f[0].layerInfo[t.LayerClass.ELEVATION].length:
0;if(f?.length&&0!==d)for(d=0;d<b;++d){var e=3*d;e=ca(f,a[e],a[e+1]);c(d,e)}else for(a=0;a<b;++a)c(a,null)}getScale(a){if(!this.tilingScheme)return null;if(!T.projectPointToVector(a,v,this.spatialReference))return z.getLogger(this).error("TerrainSurface.getScale(): could not project given point to tiling scheme coordinate system"),null;a=this._rootTiles;if(null!=a)for(var b of a)if(b?.containsPoint(v)){for(;b.children[0]&&!b.rendered;){a=b.children[0].extent;let c=0;v[0]>a[2]&&(c+=1);v[1]<a[1]&&(c+=
2);b=b.children[c]}return this._getLodBiasCorrectedScale(b.level)}return Infinity}getSphereElevationBounds(a,b){v[0]=a[0];v[1]=a[1];v[2]=a[2];v[3]=a[3];if(!L.projectVectorToVector(v,b,v,this.tilingScheme?.spatialReference))return z.getLogger(this).error("TerrainSurface.getSphereElevationBounds(): could not project given point to tiling scheme coordinate system"),null;let c=Infinity,f=-Infinity;const d=e=>{if(e&&x.intersectsSphere(e.extent,v))if(e.isLeaf||e.rendered)c=Math.min(c,e.elevationBounds[0]),
f=Math.max(f,e.elevationBounds[1]);else for(const g of e.children)d(g)};a=this._rootTiles;if(null!=a)for(const e of a)d(e);return{min:c,max:f}}getRootElevationBounds(){return{min:this.rootTileElevationBounds.min,max:this.rootTileElevationBounds.max}}getSphereScale(a,b){if(!this.tilingScheme)return null;if(!T.projectPointToVector(a,v,this.spatialReference))return z.getLogger(this).error("TerrainSurface.getSphereScale(): could not project given point to tiling scheme coordinate system"),null;v[3]=b;
let c=null;const f=d=>{if(d&&x.intersectsSphere(d.extent,v)){const e=d.children;if(e[0]&&!d.rendered)for(const g of e)f(g);else d=this._getLodBiasCorrectedScale(d.level),c=null==c?d:Math.min(c,d)}};a=this._rootTiles;if(null!=a)for(const d of a)f(d);return c}queryVisibleScaleRange(a,b,c,f){b=b?this.tilingScheme.levelAtScale(b):0;c=c?this.tilingScheme.levelAtScale(c):Infinity;const d=this._lodBias;this._scaleRangeQueries.queryVisibleLevelRange(a,b+d,c+d,f)}_evaluateTransparency(){var a=this.baseOpacity;
const b=this.overlayManager.renderer.isEmpty;var c=this._renderer.transparency;a=this._allSurfaceLayersTransparent()?b?F.TransparencyMode.Empty:F.TransparencyMode.TransparentWithDraped:1<=a&&!this.hasCompositeBlendMode&&!this._renderer.slicePlaneEnabled?F.TransparencyMode.Opaque:F.TransparencyMode.Semitransparent;if(c=c!==a)this._renderer.transparency=a,this.view?._stage?.renderer.setParameters({terrainTransparency:this._renderer.transparency});return c}_updateTilingScheme(){const a=this.tilingSchemeLogic.tilingScheme;
if(a!==this.tilingScheme){n.weakAssert(!!a,"tiling scheme cannot be reset to undefined");this._isGlobal=!this.view?.state?.isLocal;this.tilingScheme&&this._removeAllTiles();var b=a?.spatialReference??S.WebMercator;this._spatialReference=b;this._isWebMercatorOnPlateeCarree=(this._isWebMercator=!!b?.isWebMercator)&&sa.isPlateCarree(this.view?.renderSpatialReference);this._set("tilingScheme",a);this._updateClippingExtent();a&&(this._updateTiledLayers(),this._renderer.setTileSize(a.pixelSize),this.overlayManager.setSpatialReference(a.spatialReference),
this._updateRootTiles())}}_acquireTile(a,b,c,f){const d=this._tileCache.pop(J._tileMemcacheKey);return d?(d.init(a,b,c,f,this),d):new this._tileConstructor(a,b,c,f,this)}get updatingRootTiles(){return this._updatingRootTiles}_updateRootTiles(){const {extent:a,tilingScheme:b}=this;if(b){var c=Pa,f=b.rootTilesInExtent(a,c,5*C.maxRootTiles);if(null!=this._rootTiles){if(f.length>C.maxRootTiles){z.getLogger(this).warn(C.tooManyRootTilesAfterChangeError);return}const d=this._rootTiles.map(g=>g.lij),e=fa.difference(d,
f,aa);this._updatingRootTiles=!0;if(0<e.removed.length||0<e.added.length){const g=this._rootTiles.filter(l=>-1<e.removed.findIndex(q=>aa(q,l.lij))?(this._purgeTile(l),!1):!0);e.added.forEach(l=>g.push(this._newRootTile(l)));this._setRootTiles(g)}}else this._updatingRootTiles=!0,f.length>C.maxRootTiles&&(z.getLogger(this).warn(C.tooManyRootTilesForLayerError),f=b.rootTilesInExtent(a,c,C.maxRootTiles)),this._setRootTiles(f.map(d=>this._newRootTile(d)));x.equals(c,this._rootTilesExtent)||(this._rootTilesExtent=
x.create(c));this.renderer.visible=!0;this._viewChangeUpdate();this.overlayManager.setPlacementDirty();this.notifyChange("ready");this._updateAllTileGeometries();this._updatingRootTiles=!1;this.checkAllTilesWaterproofness()}}_updateAllTileGeometries(){const a=this._allTiles.filter(b=>b.isLoaded&&b.intersectsClippingArea);a.forEach(b=>this._renderer.updateTileGeometryState(b));a.forEach(b=>b.renderData.updateNeighborData());this._updateTilesGeometries(a);this._pendingTilesToUpdate.clear()}_updateTilesGeometries(a){if(0!==
a.length){a.sort(D.compareTilesByLij);var b=this.renderer;a.forEach(c=>b.updateGeometryIfNeeded(c));a.forEach(c=>this._pendingTilesForElevationUpdateEvent.add(c))}}_shouldSplit(a){return a.shouldSplit(this._splitLimits,this._eyePosRenderSR,this.snapLevel)===r.TileUpdate.SPLIT}_newRootTile(a){a=this._acquireTile(0,a[1],a[2],null);this._shouldSplit(a)&&a.setPendingUpdate(r.TileUpdate.SPLIT);this._loadTile(a);this._markTileToUpdate(a);this._updateRootTileElevationBounds();return a}_setRootTiles(a){this._rootTiles=
a;this._allTiles.clear();if(null!=a){const b=this._iteratorPool.acquire();for(b.reset(a);!b.done;)this._allTiles.push(b.next());b.remove()}this._renderer.setRootTiles(this._rootTiles);this._updateTilesVisibility(a)}_runViewChangeUpdateIfDirty(){this._viewChangeUpdateDirty&&(this._viewChangeUpdateDirty=!1,this._viewChangeUpdate())}_viewChangeUpdate(){this.view&&!this.suspended&&this.tilingScheme&&this.renderer.visible&&(this._inFrameTask?this._viewChangeUpdateDirty=!0:(this._viewChangeUpdateDirty=
!1,this._updateViewDependentParameters(),this._updateTilesVisibility(this._rootTiles)))}_updateClippingStatus(a){a.updateClippingStatus(this.extent)&&a.resetPendingUpdate(r.TileUpdate.GEOMETRY)&&this._updateTileGeometryState(a)}_updateTilesVisibility(a){if(null!=a){var b=D.hasLoadableSiblings(a),c=this.visibleElevationBounds,f=b?c.min:Infinity;b=b?c.max:-Infinity;var d=this.extent,e=this._viewProjectionMatrix;this.setTileTreeDirty();var g=this._iteratorPool.acquire();for(g.reset(a);!g.done;)a=g.next(),
a.updateClippingStatus(d)&&a.resetPendingUpdate(r.TileUpdate.GEOMETRY)&&this._updateTileGeometryState(a),a.setPendingUpdate(r.TileUpdate.RENDERDATA),a.computeVisibility(),a.updateScreenDepth(e),a.renderData&&(f=Math.min(a.elevationBounds[0],f),b=Math.max(a.elevationBounds[1],b));g.remove();this._allTilesDirty=this._viewChanged=!0;this._updatePendingTileGeometries();isFinite(f)&&isFinite(b)&&(c.min!==f||c.max!==b)&&(this.visibleElevationBounds=new I.ElevationBounds(f,b))}}_updateRootTileElevationBounds(){let a=
Infinity,b=-Infinity;var c=this._rootTiles;null!=c&&c.forEach(({elevationBounds:f})=>{a=Math.min(a,f[0]);b=Math.max(b,f[1])});c=this.rootTileElevationBounds;if(c.min!==a||c.max!==b)this.rootTileElevationBounds=new I.ElevationBounds(a,b)}_updateViewDependentParameters(){const {camera:a,contentCamera:b}=this.view.state,c=Math.tan(.5*b.fovX),f=Math.tan(.5*b.fovY),d=this.tilingScheme.pixelSize,e=2**-this._lodBias*a.pixelRatio;this._splitLimits.aboveGround=a.aboveGround;this._splitLimits.fovX=c;this._splitLimits.fovY=
f;this._splitLimits.relativeWidthLimit=d/a.width*this.maxTextureScale*e;this._splitLimits.relativeHeightLimit=d/a.height*this.maxTextureScale*e;this._splitLimits.maxLod=this.tilingScheme.getMaxLod();this._splitLimits.angledSplitBias=this.view.qualitySettings.tiledSurface.angledSplitBias;this._splitLimits.frustum=this.view.state.fixedContentCamera?H.copy(this._splitLimits.frustum??H.create(),b.frustum):null;H.copy(this._frustum,a.frustum);ma.multiply(this._viewProjectionMatrix,b.projectionMatrix,b.viewMatrix);
oa.copy(this._eyePosRenderSR,b.eye);L.projectVectorToVector(a.eye,this.view.renderSpatialReference,this._eyePosSurfaceSR,this.spatialReference)}_updateRenderData(a){a.rendered&&!a.shouldLoad&&(ba(a)?this._loadChildren(a):a.isLeaf&&(a.parent?.shouldLoad??!1)&&this._loadParent(a))}_updateTileGeometryState(a){a.updateVisibility();this._renderer.updateTileGeometryState(a)&&this._markTileToUpdate(a);this._usedMemory=null}_markAllTileNeighborsForGeometryUpdate(a){a.forEachLoadedNeighbor(b=>this._pendingTilesToUpdate.add(b))}_updateTileTexture(a,
b){const c=a.resetPendingUpdate(r.TileUpdate.TEXTURE_FADING)?r.TileUpdate.TEXTURE_FADING:a.resetPendingUpdate(r.TileUpdate.TEXTURE_NOFADING)?r.TileUpdate.TEXTURE_NOFADING:!1;c&&(this._renderer.updateTileTexture(a,c),this._usedMemory=null,b.madeProgress())}_emitElevationUpdateEventForTiles(){if(this._shouldEmitChangeEvent){var a=N.extent;x.empty(a);this._pendingTilesForElevationUpdateEvent.forEach(b=>x.expand(a,b.extent,a));this._pendingTilesForElevationUpdateEvent.clear();N.spatialReference=this.spatialReference;
this.emit("elevation-change",N);this._shouldEmitChangeEvent=!1}}runTask(a){this._handleLayerViewChanges(a);this._frameTask.processQueue(a);this.renderer.processScaleRangeQueries(this._scaleRangeQueries,a);this._inFrameTask=!0;this._pendingUpdates=0;this._hasPendingUpdates=!1;this._updateAllTilesStatus(a);this._sortTiles(a);const b=!this.view.state.fixedContentCamera;this._mergeAndSplit(a,b);this._updateElevation(a);this._updateTextures(a);b||this._mergeAndSplit(a,!0);this._inFrameTask=!1;this._runViewChangeUpdateIfDirty();
this._updatePendingTileGeometries();this._emitElevationUpdateEventForTiles();a.done&&a.hasProgressed&&this.requestUpdate();this.notifyChange("updatingProgressValue")}_updateAllTilesStatus(a){if(this._viewChanged&&this._rootTiles&&!a.done){this._viewChanged=!1;var b=this._iteratorPool.acquire();b.reset(this._rootTiles);for(var c=this.snapLevel,f=this._splitLimits,d=this._eyePosRenderSR;!b.done;){var e=b.next(),g=e.shouldSplit(f,d,c);if(g===r.TileUpdate.SPLIT)e.resetPendingUpdate(r.TileUpdate.MERGE),
e.isLeaf&&(e.setPendingUpdate(r.TileUpdate.SPLIT),b.skipSubtree()),e.rendered&&e.setPendingUpdate(r.TileUpdate.RENDERDATA);else if(e.resetPendingUpdate(r.TileUpdate.SPLIT)&&e.updateAgentSuspension(),g===r.TileUpdate.ELEVATION&&e.updateAgents(t.LayerClass.ELEVATION),b.skipSubtree(),!e.isLeaf){e.setPendingUpdate(r.TileUpdate.MERGE);e.resetPendingUpdate(r.TileUpdate.SPLIT);g=this._iteratorPool.acquire();g.resetOne(e);e=this._viewProjectionMatrix;for(let l=g.next();!g.done;l=g.next())this._updateClippingStatus(l),
l.updateVisibility(),l.updateScreenDepth(e);g.remove()}}b.remove();this.requestUpdate();!this._shortBatches&&this._oneBatchPerFrameTask||this._updatePendingTileGeometries();a.madeProgress()}}_sortTiles(a){a.done||this._allTilesSorted||(D.sortTilesByPOI(this._allTiles,this.view.pointsOfInterest.focus.renderLocation),this._allTilesSorted=!0,this._treeDebugger&&this._treeDebugger.update(),a.madeProgress())}_markTileToUpdate(a){n.internalAssert(a.isLoaded);a.intersectsClippingArea&&(this._pendingTilesToUpdate.add(a),
this._markAllTileNeighborsForGeometryUpdate(a))}_updatePendingTileGeometries(){const a=this._pendingTilesToUpdate,b=Array.from(a.keys()).filter(d=>d.isLoaded&&d.intersectsClippingArea);if(0===b.length)a.clear();else{var c=(d,e)=>{!e?.isLoaded||!e.intersectsClippingArea||e.level<d.level||a.has(e)||(a.add(e),b.push(e),e.renderData.updateNeighborData())};b.sort(D.compareTilesByLij);var f=b.length;for(let d=0;d<f;++d){const e=b[d];n.internalAssert(e.isLoaded);n.internalAssert(e.intersectsClippingArea);
const g=e.renderData;g.updateNeighborData();const l=g._dirtyEdgeResolutions,q=g.geometryState.neighborData.cornerPeerNeighbors,u=w=>{const G=n.neighborCornerIndices[w];c(e,q[w]?.findCorner(n.oppositeCorner(G),E=>E.isLoaded))};for(let w=0;4>w;++w)if(l&1<<w){const G=g.geometryState.neighborData.edgePeerNeighbors[w];G&&G?.level>=e.level&&G.forAllSubtreeOnSide(n.oppositeEdge(n.neighborEdgeIndices[w]),E=>E.isLoaded&&E.intersectsClippingArea?(n.internalAssert(a.has(E)||0>D.compareTilesByLij(e,E)),c(e,E),
!0):!1);u((w+1)%4);u(w)}}a.clear();this._updateTilesGeometries(b);this._shouldEmitChangeEvent=!0;n.enableTerrainInternalChecks&&n.enableWaterproofnessTests&&this.checkAllTilesWaterproofness()}}_mergeAndSplit(a,b){if(!this.suspended&&!a.done&&this._allTilesDirty){this._allTilesDirty=!1;this.requestUpdate();for(var c=!1,f=this.view.state.fixedContentCamera,d=!1;!a.done;){d=!0;let e=!1;const g=!this._allTiles.some(l=>{if(!c&&!f&&!l.visible)return a.done;let q=l;if(l.resetPendingUpdate(r.TileUpdate.MERGE)){if(!b)return l.setPendingUpdate(r.TileUpdate.MERGE),
a.done;for(;q.parent?.resetPendingUpdate(r.TileUpdate.MERGE);)q=q.parent;this._mergeTile(q);e=!0;a.madeProgress()}else l.resetPendingUpdate(r.TileUpdate.SPLIT)&&(this._splitTile(l),e=!0,a.madeProgress());!a.done&&q===l&&l.resetPendingUpdate(r.TileUpdate.RENDERDATA)&&(this._updateRenderData(l),a.madeProgress());return a.done});e&&(this._allTilesSorted=!1,this._allTilesDirty=!0);if(g)if(!c)c=!0;else{if(!e)break}else this._allTilesDirty=!0}d?a.madeProgress():this._allTilesDirty=!0;!this._oneBatchPerFrameTask&&
this._updatePendingTileGeometries();this._sortTiles(a)}}_updateElevation(a){a.done||(this._allTiles.some(b=>{b.resetPendingUpdate(r.TileUpdate.GEOMETRY)&&(this._updateTileGeometryState(b),this._updateTileTexture(b,a),this._shortBatches&&this._updatePendingTileGeometries(),a.madeProgress());return a.done}),!this._oneBatchPerFrameTask&&this._updatePendingTileGeometries())}_updateTextures(a){a.done||this._allTiles.some(b=>{this._updateTileTexture(b,a);return a.done})}_updateClippingExtent(){this.spatialReference&&
(this.updateTileOverlayParams(Z.RenderRequestType.UPDATE),this.overlayManager.setPlacementDirty(),this._updateRootTiles())}get _lodBias(){return this.view.qualitySettings.tiledSurface.lodBias-(1-this.view.quality)*C.maxMemoryLodBias}_getLodBiasCorrectedScale(a){const b=this.tilingScheme.levels;a=ja.clamp(a-this._lodBias,0,b.length-1);const c=a-Math.floor(a);return b[Math.floor(a)].scale*(1-c)+b[Math.ceil(a)].scale*c}_removeAllTiles(){null!=this._rootTiles&&(this._rootTiles.forEach(a=>this._purgeTile(a)),
this._setRootTiles(null),this.notifyChange("ready"));this._allTiles.clear();this.renderer.visible=!1}_purgeDescendantTiles(a){if(!a.children[0])return!1;let b=!1;for(let c=0;4>c;++c)b=this._purgeTile(a.children[c])||b;a.unsetChildren();return b}_purgeTile(a){const b=this._purgeDescendantTiles(a)||a.rendered;this._allTiles.removeUnordered(a);this._unloadTile(a);this._tileCache.put(J._tileMemcacheKey,a);return b}_unloadTile(a){this._pendingTilesToUpdate.delete(a);this._pendingTilesForElevationUpdateEvent.delete(a);
a.unload(this._renderer)}_splitTile(a){n.weakAssert(a.isLeaf,"tile that is already split should not be split again!");const b=a.level+1,c=2*a.lij[1],f=2*a.lij[2];a.setChildren(this._createTile(b,c,f,a),this._createTile(b,c,f+1,a),this._createTile(b,c+1,f,a),this._createTile(b,c+1,f+1,a));a.setPendingUpdate(r.TileUpdate.RENDERDATA);a.updateAgentSuspension();this._allTiles.pushArray(a.children);this._allTilesDirty=!0;++this._performanceInfo.numSplit}_emitTileScaleChange(a,b=a.level){K.spatialReference=
this.spatialReference;K.extent=a.extent;K.scale=this._getLodBiasCorrectedScale(b);this.emit("scale-change",K)}_createTile(a,b,c,f){n.weakAssert(!!f,"_createTile sanity check");a=this._acquireTile(a,b,c,f);a.updateClippingStatus(this.extent);a.updateScreenDepth(this._viewProjectionMatrix);this._shouldSplit(a)&&a.setPendingUpdate(r.TileUpdate.SPLIT);return a}get _shortBatches(){return this.view.state.mode!==Oa.RenderState.IDLE}_mergeTile(a){n.weakAssert(!a.hasPendingUpdate(r.TileUpdate.SPLIT),"_mergeTile sanity check");
this._purgeDescendantTiles(a)&&(n.weakAssert(!a.renderData,"_mergeTile sanity check"),this._loadTile(a),this._markTileToUpdate(a),this._emitTileScaleChange(a),this._shortBatches&&this._updatePendingTileGeometries());this._allTilesDirty=!0;++this._performanceInfo.numMerged}_loadChildren(a){n.weakAssert(a.rendered,"parent should be rendered");this._unloadTile(a);const b=a.children;b.forEach(c=>this._loadTile(c));b.forEach(c=>this._pendingTilesToUpdate.add(c));this._markAllTileNeighborsForGeometryUpdate(a);
this._emitTileScaleChange(a,a.level+1);this._shortBatches&&this._updatePendingTileGeometries()}_loadParent(a){a=a.parent;this._unloadChildren(a);this._loadTile(a);this._markTileToUpdate(a);this._emitTileScaleChange(a,a.level);this._shortBatches&&this._updatePendingTileGeometries()}_unloadChildren(a){a=a.children;if(a[0])for(let b=0;4>b;++b){const c=a[b];this._unloadChildren(c);this._unloadTile(c)}}_loadTile(a){a.load();a.setPendingUpdate(r.TileUpdate.RENDERDATA);this.requestUpdate();this._allTilesDirty=
!0;this.overlayManager&&this.overlayManager.hasOverlays&&this.overlayManager.setTileParameters(a)}_elevationDataArrived(a,b,c){c=new W.ElevationData(a.lij,a.extent,c);a.dataArrived(b,t.LayerClass.ELEVATION,c);c=[a];a=a.level;const f=this._iteratorPool.acquire();for(f.reset(c);!f.done;){const d=f.next();d.findElevationBoundsForLayer(b,a);d.computeElevationBounds()}0===a&&this._updateRootTileElevationBounds();f.remove();this._updateTilesVisibility(c)}_handleLayerViewChanges(a=M.noBudget){if(this._layerViewsDirty){var b=
this._layerViewsDirty=!1,c=new Set,f=-1;for(const e of this.view.allLayerViews.items)if(c.add(e.uid),n.isSurfaceLayerView(e)||n.isGroupLayerView(e))if(this._basemapLayerViewHandles.has(e.uid)&&!n.isGroupLayerView(e)){var d=this._layerClassFromLayerView(e);d=this._getLayerIdxByUID(d,e.uid);if(null!=d){if(d<f||null==f)b=!0;f=d}}else this._registerTiledLayerView(e),e.layer.loaded&&(b=!0);this._basemapLayerViewHandles.forEach((e,g)=>{c.has(g)||(this._unregisterTiledLayerView(g),b=!0)});b&&this._updateTiledLayers();
this.hasCompositeBlendMode=this._hasCompositeBlendMode();this._evaluateTransparency();a.madeProgress()}}_allSurfaceLayersTransparent(){let a=0===this.view.map?.ground?.opacity;for(const b of this.view.allLayerViews.items)if(n.isMapTileLayerView(b)&&!wa.isBaseLayer(b.layer)&&0!==b.fullOpacity){a=!1;break}return a}_hasCompositeBlendMode(){for(const a of this.view.allLayerViews.items)if((n.isBlendableLayerView(a)||n.isGroupLayerView(a))&&X.isCompositeBlendMode(X.blendModeFromString[a.layer.blendMode]))return!0;
return!1}_layerClassFromLayerView(a){return n.isElevationLayerView(a)?t.LayerClass.ELEVATION:t.LayerClass.MAP}_registerTiledLayerView(a){const b=[];(n.isBlendableLayerView(a)||n.isGroupLayerView(a))&&b.push(p.watch(()=>a.layer.blendMode,()=>{this.hasCompositeBlendMode=this._hasCompositeBlendMode();this._updateTileTextures(A.TextureUpdate.UNFADED)}));if(!n.isGroupLayerView(a)){const c=this._layerClassFromLayerView(a);b.push(p.watch(()=>a.suspended,()=>this._updateTiledLayers()));b.push(p.watch(()=>
a.fullOpacity,()=>this._updateTileTextures(A.TextureUpdate.UNFADED)));b.push(p.watch(()=>"effectiveScaleRange"in a.layer?a.layer.effectiveScaleRange:null,()=>this._restartAllAgents(c)));b.push(a.on("data-changed",()=>{const f=this._getLayerIdxByUID(c,a.uid);null!=f&&this._invalidateLayerData(f,c)}))}this._unregisterTiledLayerView(a.uid);this._basemapLayerViewHandles.set(a.uid,b)}_unregisterTiledLayerView(a){const b=this._basemapLayerViewHandles.get(a);if(b){for(const c of b)c.remove();this._basemapLayerViewHandles.delete(a)}}_updateTiledLayers(){if(this.tilingScheme&&
!this.view.suspended){var a=[[],[]],b=null;this.view.allLayerViews.forEach(f=>{if(f.layer&&!f.suspended&&n.isSurfaceLayerView(f)&&f.fullExtent){var d=this._layerClassFromLayerView(f);if(d===t.LayerClass.MAP){const e=f.displayLevelRange.maxLevel;Infinity!==e&&(null===b||e>b)&&(b=e)}a[d].push(f)}});for(const f of t.LayerClasses){var c=this._layerViews[f];const d=a[f];d.reverse();const e=d.length;let g=c.length!==e;const l=Array(e),q=Array(c.length);this._layerIndexByUid[f].clear();for(let u=0;u<e;u++){this._layerIndexByUid[f].set(d[u].uid,
u);const w=c.indexOf(d[u]);l[u]=w;u!==w&&(g=!0);-1<w&&(q[w]=u)}if(g){c=this._postorderIterator;for(c.reset(this._rootTiles);!c.done;)c.next().modifyLayers(q,l,f);this._layerViews[f]=d;this._restartAllAgents(f);this._updateTilesVisibility(this._rootTiles)}}this.tilingScheme.ensureMaxLod(b)&&this._viewChangeUpdate()}}_restartAllAgents(a){const b=this._postorderIterator;for(b.reset(this._rootTiles);!b.done;){const c=b.next();c.restartAgents(a);a===t.LayerClass.ELEVATION&&c.computeElevationBounds()}this._updateRootTileElevationBounds()}layerViewByIndex(a,
b){return this._layerViews[b][a]}numLayers(a){return this._layerViews[a].length}_updateTileTextures(a){this._allTiles.forAll(b=>{b.updateAgents(t.LayerClass.MAP);a===A.TextureUpdate.IMMEDIATE?this.renderer.updateTileTexture(b,r.TileUpdate.TEXTURE_NOFADING):b.updateRenderData(t.LayerClass.MAP,a)});this._evaluateTransparency()}_invalidateLayerData(a,b){this._allTiles.forAll(c=>c.removeLayerAgent(a,b));this._allTiles.forAll(c=>c.invalidateLayerData(a,b))}setTileTreeDirty(){this._allTilesDirty=!0}requestRender(a=
Z.RenderRequestType.UPDATE){this.renderer.setNeedsRender(a)}requestUpdate(){1===++this._pendingUpdates&&(this._hasPendingUpdates=!0)}requestTileData(a,b,c,f){const d=this.layerViewByIndex(b,c);b=d.layer;if(!b.tilemapCache||n.isVectorTileLayerView(d))return this._requestTileData(a,c,d,f);++this._asyncWorkItems;return b.tilemapCache.fetchAvailability(a.lij[0],a.lij[1],a.lij[2],{...f,timeout:6E3}).then(()=>--this._asyncWorkItems).catch(e=>{--this._asyncWorkItems;B.throwIfAborted(f);B.isAbortError(e)||
this._dataMissing(a,c,d,{notInTilemap:!0});throw e;}).then(()=>this._frameTask.schedule(()=>this._requestTileData(a,c,d,f),f.signal))}_requestTileData(a,b,c,f){return b===t.LayerClass.ELEVATION?n.isElevationLayerView(c)?this._requestElevationTileData(a,c,f):Promise.reject():n.isMapTileLayerView(c)?this._requestMapTileData(a,c,f):Promise.reject()}_requestElevationTileData(a,b,c){++this._asyncWorkItems;const f=g=>{if(!B.isAborted(c)){var l=this._layerIndexByUid[t.LayerClass.ELEVATION].get(b.uid);null==
l?z.getLogger(this).warn("TerrainSurface: received data from unknown layer %d %s",t.LayerClass.ELEVATION,a.lij.toString()):(this._usedMemory=null,this.requestUpdate(),this._elevationDataArrived(a,l,g))}},d=g=>{B.isAbortError(g)||(this._dataMissing(a,t.LayerClass.ELEVATION,b,g),this.requestUpdate())};if(n.useFetchTileForLayer(b.layer))return b.layer.fetchTile(a.lij[0],a.lij[1],a.lij[2],{noDataValue:C.elevationNodataValue,signal:c.signal}).then(g=>{if(B.isAborted(c))z.getLogger(this).warnOnce("A call to fetchTile resolved even though the request was aborted. fetchTile should not resolve if options.signal.aborted is true.");
else return this._frameTask.schedule(()=>f(g),c.signal,d)},d).finally(()=>{--this._asyncWorkItems});const e=b.getTileUrl(a.lij[0],a.lij[1],a.lij[2]);return this._elevationDataRequester.request(e,"binary",c).then(g=>this._lercDecoder.decode(g,{noDataValue:C.elevationNodataValue},c.signal)).then(g=>{g?f(new va.ElevationTileData(g)):d(Error("LERC decoding failed"))},d).finally(()=>{--this._asyncWorkItems})}_requestMapTileData(a,b,c){++this._asyncWorkItems;const f=(q,u)=>{--this._asyncWorkItems;n.releaseTileData(u);
B.isAborted(c)||(this._dataMissing(a,t.LayerClass.MAP,b,q),this.requestUpdate())},d=q=>u=>f(u,q),e=q=>this._frameTask.schedule(()=>{--this._asyncWorkItems;this.requestUpdate();B.isAborted(c)?n.releaseTileData(q):this._mapTileDataArrived(a,b,q)},c.signal,d(q)).catch(d(q)),g=(q,u=null)=>this._frameTask.schedule(()=>f(q,u));if(n.isVectorTileLayerView(b)){var l=b.schemaHelper.getLevelRowColumn(a.lij);return b.fetchTile(l[0],l[1],l[2],c).then(e,g)}if(n.isImageryTileLayerView(b))return b.fetchTile(a.lij[0],
a.lij[1],a.lij[2],c).then(e,g);if(n.isTileLayerView(b)&&n.useFetchTileForLayer(b.layer))return b.layer.fetchTile(a.lij[0],a.lij[1],a.lij[2],c).then(q=>{B.isAborted(c)?(z.getLogger(this).warnOnce("A call to fetchTile resolved even though the request was aborted. fetchTile should not resolve if options.signal.aborted is true."),g(B.createAbortError())):e(q)},g);l=b.getTileUrl(a.lij[0],a.lij[1],a.lij[2]);ta.isRefreshableLayer(b.layer)&&b.layer.refreshTimestamp&&(l+=`${l.includes("?")?"\x26":"?"}_ts=${b.layer.refreshTimestamp}`);
return this._mapDataRequester.request(l,b.hasMixedImageFormats?"image+type":"image",c).then(e,g)}_mapTileDataArrived(a,b,c){b=this._getLayerIdxByUID(t.LayerClass.MAP,b.uid);null!=b?a.dataArrived(b,t.LayerClass.MAP,c):(n.releaseTileData(c),z.getLogger(this).warn("TerrainSurface: received data from unknown layer"))}_getLayerIdxByUID(a,b){return this._layerIndexByUid[a].get(b)}_dataMissing(a,b,c,f){c=this._getLayerIdxByUID(b,c.uid);null!=c?a.dataMissing(c,b,f):z.getLogger(this).warn("TerrainSurface: received data from unknown layer")}updateTileOverlayParams(a){this._rootTiles&&
this.overlayManager&&(this._allTiles.forAll(b=>{b.renderData&&this.overlayManager.setTileParameters(b)}),this._renderer.setNeedsRender(a))}get performanceInfo(){const a=this._performanceInfo;a.numNodes=this._allTiles.length;a.numLeaves=a.numVisible=a.numRendered=a.numLoadedPerLevel.length=a.numRenderedPerLevel.length=0;this._allTiles.forAll(b=>{b.isLeaf&&a.numLeaves++;const c=b.level;b.renderData&&(a.numLoadedPerLevel[c]=(a.numLoadedPerLevel[c]||0)+1);b.visible&&(a.numVisible++,b.rendered&&(a.numRenderedPerLevel[c]=
(a.numRenderedPerLevel[c]||0)+1,a.numRendered++))});return a}get usedMemory(){if(!this.tilingScheme)return 0;null==this._usedMemory&&(this._usedMemory=this._recalculateUsedMemory());return this._usedMemory??0}_recalculateUsedMemory(){return this.tilingScheme?Math.round(this._allTiles.reduce((a,b)=>a+b.usedMemory,0)):null}getUsedMemoryForLayerView(a){let b=0;const c=this._layerClassFromLayerView(a),f=this._getLayerIdxByUID(c,a.uid);null!=f&&this._allTiles.forAll(d=>b+=d.getUsedMemoryForLayer(c,f));
return b}getTile(a){if(null==a||null==this._rootTiles)return null;const b=a.split("/").map(e=>+e);if(0===b[0])return this._rootTiles.find(e=>e.lij[1]===b[1]&&e.lij[2]===b[2]);a=2**b[0];const c=Math.floor(b[1]/a),f=Math.floor(b[2]/a);let d;this._rootTiles.some(e=>e.lij[1]===c&&e.lij[2]===f?(d=e,!0):!1);if(d){for(a=1<<b[0]-1;d.lij[0]<b[0];){let e=b[1]&a?2:0;0<(b[2]&a)&&e++;if(!d.children[e])return null;d=d.children[e];a>>=1}n.weakAssert(d.lij[0]===b[0]&&d.lij[1]===b[1]&&d.lij[2]===b[2],"not the right tile?");
return d}return null}get renderPatchBorders(){return this._renderer.renderPatchBorders}set renderPatchBorders(a){this._renderer.renderPatchBorders=a}get visualizeNormals(){return this._renderer.visualizeNormals}set visualizeNormals(a){this._renderer.visualizeNormals=a}get renderingDisabled(){return this._renderer.renderingDisabled}set renderingDisabled(a){this._renderer.renderingDisabled=a}get test(){const a=this;return{renderer:a._renderer,lercDecoder:a._lercDecoder,forceReload:()=>{null!=a._rootTiles&&
0<a._rootTiles.length&&(a._mergeTile(a._rootTiles[0]),a._viewChangeUpdate())},getTiles:()=>a._allTiles.toArray(),getRenderedTiles(){O.clear();a._allTiles.forAll(c=>{c.visible&&c.rendered&&O.push(c)});const b=O.toArray();D.sortTiles(a.renderOrder,b);return b},lockTilingScheme(b,c){a._extentHelper.defaultTiledLayersExtent=c;a.tilingSchemeLogic.test.lockTilingScheme(b)}}}checkAllTilesWaterproofness(){if(n.enableWaterproofnessTests){var a=this._rootTiles;if(null!=a){var b=d=>0<d?.renderData?.geometry?.indices?.length,
c=d=>{if(d.intersectsClippingArea)if(d.renderData&&!d.renderData.geometryState&&console.error("Tile[",d.lij,"] has renderData but not geometryState"),d.renderData&&!d.renderData.geometry&&console.error("Tile[",d.lij,"] has renderData but not geometryInfo"),!d.renderData?.geometry||0<(d.renderData.geometry.indices?.length??0)||console.error("Tile[",d.lij,"] has renderData but no indices - geometryInfo: ",d.renderData.geometry),b(d)){d.checkGeometryWaterproofness();for(const l of d.children){var e=
l,g=d;b(e)&&console.error("Tile[",e.lij,"] has geometry although parent[",g.lij,"] has geom")}}else if(d.isLeaf)console.error("Tile[",d.lij,"] has no geometry and no children, from root to leaf");else for(e of d.children)c(e)},f=d=>{const e=d.parent?.visible??!0,g=d.visible;d.computeVisibility();const l=d.visible;g!==l&&e&&console.error(" Tile[",d.lij,"] has out of date visibility: ",g," instead of ",l);if(!d.isLeaf)for(const q of d.children)f(q)};for(const d of a)c(d),f(d)}}}get isGlobal(){return this._isGlobal}get isWebMercator(){return this._isWebMercator}get isWebMercatorOnPlateeCarree(){return this._isWebMercatorOnPlateeCarree}isEastEndWrap(a){return this.isGlobal&&
a[2]===this.lijEastEnd(a[0])-1}isWestEndWrap(a){return this.isGlobal&&0===a[2]}lijEastEnd(a){return 2**(a+(null!=this.spatialReference&&this.spatialReference.isGeographic?1:0))}wrapEastWest(a){const b=this.lijEastEnd(a[0]),c=a[2];return 0<=c&&c<b?a:this.isGlobal?[a[0],a[1],(c+(0>c?b:0))%b]:null}enableInternalChecks(a){n.enableInternalTerrainChecks(a)}enableWaterproofnessChecks(a){n.enableTerrainWaterproofnessChecks(a)}};h._tileMemcacheKey="TerrainTileMemcache";k.__decorate([m.property()],h.prototype,
"_renderer",void 0);k.__decorate([m.property({constructOnly:!0})],h.prototype,"_scaleRangeQueries",void 0);k.__decorate([m.property({constructOnly:!0})],h.prototype,"view",void 0);k.__decorate([m.property({constructOnly:!0})],h.prototype,"overlayManager",void 0);k.__decorate([m.property()],h.prototype,"_hasPendingUpdates",void 0);k.__decorate([m.property()],h.prototype,"_asyncWorkItems",void 0);k.__decorate([m.property()],h.prototype,"_allTilesDirty",void 0);k.__decorate([m.property()],h.prototype,
"_allTilesSorted",void 0);k.__decorate([m.property()],h.prototype,"_viewChanged",void 0);k.__decorate([m.property()],h.prototype,"_splitLimits",void 0);k.__decorate([m.property({readOnly:!0})],h.prototype,"_watchUpdatingTracking",void 0);k.__decorate([m.property()],h.prototype,"_frameTask",void 0);k.__decorate([m.property({readOnly:!0})],h.prototype,"snapLevel",null);k.__decorate([m.property({readOnly:!0})],h.prototype,"lodSnapping",null);k.__decorate([m.property()],h.prototype,"_userClippingExtent",
null);k.__decorate([m.property()],h.prototype,"_rootTilesExtent",void 0);k.__decorate([m.property({readOnly:!0})],h.prototype,"extent",null);k.__decorate([m.property({readOnly:!0})],h.prototype,"groundExtent",null);k.__decorate([m.property({readOnly:!0})],h.prototype,"_tilingSchemeExtent",null);k.__decorate([m.property({readOnly:!0})],h.prototype,"updating",null);k.__decorate([m.property({readOnly:!0})],h.prototype,"running",null);k.__decorate([m.property(Ba.updatingProgress)],h.prototype,"updatingProgress",
void 0);k.__decorate([m.property({readOnly:!0})],h.prototype,"updatingProgressValue",null);k.__decorate([m.property()],h.prototype,"_maxNumUpdating",void 0);k.__decorate([m.property()],h.prototype,"baseOpacity",null);k.__decorate([m.property()],h.prototype,"hasCompositeBlendMode",void 0);k.__decorate([m.property({readOnly:!0})],h.prototype,"viewingMode",null);k.__decorate([m.property()],h.prototype,"maxTextureScale",void 0);k.__decorate([m.property({readOnly:!0})],h.prototype,"ready",null);k.__decorate([m.property({value:Fa.RenderOrder.FRONT_TO_BACK})],
h.prototype,"renderOrder",null);k.__decorate([m.property({readOnly:!0})],h.prototype,"rootTiles",null);k.__decorate([m.property()],h.prototype,"_rootTiles",void 0);k.__decorate([m.property({readOnly:!0})],h.prototype,"spatialReference",null);k.__decorate([m.property({type:ea})],h.prototype,"backgroundColor",null);k.__decorate([m.property({value:!1})],h.prototype,"slicePlaneEnabled",null);k.__decorate([m.property({readOnly:!0})],h.prototype,"tilingScheme",void 0);k.__decorate([m.property({readOnly:!0})],
h.prototype,"tilingSchemeLocked",null);k.__decorate([m.property({readOnly:!0})],h.prototype,"tilingSchemeLogic",void 0);k.__decorate([m.property()],h.prototype,"wireframe",null);k.__decorate([m.property({value:!1})],h.prototype,"suspended",null);k.__decorate([m.property()],h.prototype,"textureFadeDuration",null);k.__decorate([m.property()],h.prototype,"visibleElevationBounds",void 0);k.__decorate([m.property()],h.prototype,"rootTileElevationBounds",void 0);k.__decorate([m.property()],h.prototype,
"_layerViewsDirty",void 0);k.__decorate([m.property()],h.prototype,"renderPatchBorders",null);k.__decorate([m.property()],h.prototype,"visualizeNormals",null);k.__decorate([m.property()],h.prototype,"renderingDisabled",null);k=h=J=k.__decorate([la.subclass("esri.views.3d.terrain.TerrainSurface")],h);const v=pa.create(),Pa=x.create(),O=new Q,N={spatialReference:null,extent:x.create(),context:"ground"},K={spatialReference:null,extent:null,scale:0};return k});