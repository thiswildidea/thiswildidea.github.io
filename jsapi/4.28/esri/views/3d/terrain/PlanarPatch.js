// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/vec3f64 ../../../geometry/SpatialReference ../../../geometry/projection/projectVectorToVector ../../../geometry/support/aaBoundingBox ../../../geometry/support/aaBoundingRect ../../../geometry/support/spatialReferenceUtils ./ITile ./PatchGeometryFactory ./Tile ../webgl-engine/materials/internal/MaterialUtil".split(" "),function(u,n,g,v,z,A,B,p,q,w,C){class D extends w.Tile{constructor(a,b,d,e,c){super();this._horizontalScaleFactor=1;this._extentInRenderSR=A.create();
this._baseUsedMemory=900;this.init(a,b,d,e,c)}init(a,b,d,e,c){super.init(a,b,d,e,c);a=c.view.renderSpatialReference;c=c.spatialReference;this._horizontalScaleFactor=b=null!=a&&B.isPlateCarree(a)&&null!=c&&c.isGeographic?this.ellipsoid.radius*Math.PI/180:1;c=this._extentInRenderSR;a=this.extent;if(this.surface.isWebMercatorOnPlateeCarree)b=n.fromValues(a[0],a[1],0),v.projectVectorToVector(b,g.WebMercator,b,g.PlateCarree),a=n.fromValues(a[2],a[3],0),v.projectVectorToVector(a,g.WebMercator,a,g.PlateCarree),
c[0]=b[0],c[1]=b[1],c[2]=a[0],c[3]=a[1];else for(d=0;4>d;++d)c[d]=a[d]*b;this.centerAtSeaLevel[0]=.5*(c[0]+c[2]);this.centerAtSeaLevel[1]=.5*(c[1]+c[3]);this.centerAtSeaLevel[2]=0;this._edgeLen=Math.max(c[2]-c[0],c[3]-c[1]);this._edgeLen2=this._edgeLen*this._edgeLen;this.updateRadiusAndCenter()}updateRadiusAndCenter(){this._updateCenter();var a=this._extentInRenderSR;const b=.5*(a[2]-a[0]);a=.5*(a[3]-a[1]);this._center[w.CenterPosition.MIDDLE][3]=Math.max(Math.sqrt(b*b+a*a),.5*(this.elevationBounds[0]-
this.elevationBounds[1]))}_calculateFrustumVisibilityStatus(a){var b=this._aabb();const d=b[0],e=b[1],c=b[2],x=b[3],y=b[4];b=b[5];let r=!0;for(let t=0;6>t;t++){var f=a[t];const h=f[0],k=f[1],l=f[2];f=f[3];if(0<=h*(0<h?d:x)+k*(0<k?e:y)+l*(0<l?c:b)+f)return p.TileFrustumVisibility.OUTSIDE;r=r&&0>=h*(0>h?d:x)+k*(0>k?e:y)+l*(0>l?c:b)+f}return r?p.TileFrustumVisibility.INSIDE:p.TileFrustumVisibility.INTERSECTS}_aabb(){const a=this._extentInRenderSR;return z.wrap(a[0],a[1],this.elevationBounds[0],a[2],
a[3],this.elevationBounds[1])}intersectsRay(a,b,d,e){m[0]=1/b[0];m[1]=1/b[1];m[2]=1/b[2];return C.intersectAabbInvDirBefore(this._aabb(),a,m,d,e)}createGeometry(){q.createPlanarGlobePatch(this.renderData,this._horizontalScaleFactor);this.setMemoryDirty()}getDefaultVerticesPerSide(){return 9>this.level?3:2}updateCornerElevations(){q.updateCornersPlanar(this.renderData,this._horizontalScaleFactor)}updateEdgeElevations(){q.updateEdgesAndCornersPlanar(this.renderData,this._horizontalScaleFactor)}get horizontalScale(){return this._horizontalScaleFactor}}
const m=n.create();u.PlanarPatch=D;Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});