// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/tslib.es6 ../../../core/Evented ../../../core/MapUtils ../../../core/maybe ../../../core/PooledArray ../../../core/reactiveUtils ../../../core/SetUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../../../chunks/mat4 ../../../chunks/vec3 ../../../chunks/vec3f64 ../../ViewingMode ../layers/interfaces ../support/debugFlags ./interfaces ./Overlay ./OverlayContent ./OverlayRenderTargets ../webgl-engine/core/FBOCache ../webgl-engine/core/shaderLibrary/ShaderOutput ../webgl-engine/core/shaderLibrary/terrain/Overlay.glsl ../../../chunks/TextureOnly.glsl ../webgl-engine/core/shaderTechnique/ShaderTechniqueRepository ../webgl-engine/effects/RenderPlugin ../webgl-engine/lib/Camera ../webgl-engine/lib/GLMaterialRepository ../webgl-engine/lib/glUtil3D ../webgl-engine/lib/GridLocalOriginFactory ../webgl-engine/lib/Material ../webgl-engine/lib/RenderContext ../webgl-engine/lib/RenderSlot ../webgl-engine/lib/ShadowMap ../webgl-engine/lib/SortedRenderGeometryRenderer ../webgl-engine/lib/TextureTechnique ../webgl-engine/lib/TextureTechniqueConfiguration ../webgl-engine/lib/TransparencyPassType ../webgl-engine/lib/UpdatePolicy ../webgl-engine/lighting/Lightsources ../../../chunks/OverlayCompositing.glsl ../webgl-engine/shaders/OverlayCompositingTechnique ../../support/Scheduler ../../webgl/enums ../../webgl/Texture ../../webgl/TextureDescriptor".split(" "),
function(f,h,O,r,t,P,p,B,k,ta,ua,va,Q,K,R,S,T,q,L,u,M,l,U,V,v,z,W,X,Y,Z,aa,ba,ca,da,ea,w,fa,ha,ia,ja,ka,la,ma,na,oa,N,C,pa,qa){f.OverlayRenderer=class extends Y.SyncRenderPlugin{get _bindParameters(){return this._renderContext.bindParameters}get _rctx(){return this.view._stage.renderView.renderingContext}get rctx(){return this._rctx}get materialRepository(){return this._materialRepository}get screenToWorldRatio(){return this._screenToWorldRatio}get localOriginFactory(){return this._localOriginFactory}constructor(a){super(a);
this._renderTargets=this._overlays=null;this._overlayParameters=new na.OverlayCompositingPassParameters;this._hasWater=this._rendersOccluded=this.hasHighlights=!1;this._renderers=new Map;this._sortedDrapeSourceRenderersDirty=!1;this._sortedRenderers=new P;this._passParameters=new W.TextureOnlyPassParameters;this._materialRepository=null;this._screenToWorldRatio=1;this._localOriginFactory=null;this.unloadedMemory=0;this.ignoresMemoryFactor=!1;this._camera=new Z.Camera;this.worldToPCSRatio=1;this.events=
new O;this.longitudeCyclical=null;this.produces=new Map([[w.RenderSlot.DRAPED_MATERIAL,b=>b!==v.ShaderOutput.Highlight||this.hasHighlights],[w.RenderSlot.DRAPED_WATER,()=>!0]]);this._hasDrapedRasterSource=this._hasDrapedFeatureSource=this._hasTargetWithoutRasterImage=!1}initialize(){const a=this.view._stage.renderer.fboCache,b=this.view._stage.renderView,{waterTextureRepository:c,stippleTextureRepository:d,markerTextureRepository:e}=b;this._shaderTechniqueRepository=new X.ShaderTechniqueRepository({rctx:this._rctx,
viewingMode:T.ViewingMode.Local,stippleTextureRepository:d,markerTextureRepository:e,waterTextureRepository:c});this._renderContext=new ea.OverlayRenderContext(this._rctx,new fa.ShadowMap(a,this.view.state.viewingMode),null);this.addHandles([p.watch(()=>c.updating,()=>this.events.emit("content-changed"),p.syncAndInitial),p.watch(()=>this.spatialReference,g=>this._localOriginFactory=new ca.GridLocalOriginFactory(g),p.syncAndInitial),p.on(()=>this.view.allLayerViews,"after-changes",()=>this._sortedDrapeSourceRenderersDirty=
!0)]);this._materialRepository=new aa.GLMaterialRepository(b.textureRepository,this._shaderTechniqueRepository,g=>{0<(g.parameters.renderOccluded&D)!==this._rendersOccluded&&this._updateRendersOccluded();this.events.emit("content-changed");this.notifyChange("updating");this.notifyChange("isEmpty")},()=>this.events.emit("content-changed"));this._bindParameters.slot=w.RenderSlot.DRAPED_MATERIAL;this._bindParameters.mainDepth=ba.createEmptyDepthTexture(this._rctx);this._camera.near=1;this._camera.far=
1E4;this._camera.relativeElevation=null;this._bindParameters.camera=this._camera;this._bindParameters.transparencyPassType=ka.TransparencyPassType.NONE;this._bindParameters.newLighting.noonFactor=0;this._bindParameters.newLighting.globalFactor=0;this._bindParameters.newLighting.set([new ma.AmbientLight(S.fromValues(1,1,1))]);this.addHandles(this.view.resourceController.scheduler.registerTask(N.TaskPriority.STAGE,this))}destroy(){this._renderers.forEach(a=>a.destroy());this._renderers.clear();this._debugTextureTechnique=
t.releaseMaybe(this._debugTextureTechnique);this._passParameters.texture=t.disposeMaybe(this._passParameters.texture);this._bindParameters.mainDepth=t.disposeMaybe(this._bindParameters.mainDepth);this._shaderTechniqueRepository=t.destroyMaybe(this._shaderTechniqueRepository);this.disposeOverlays()}initializeRenderContext(a){this.pluginContext=a}uninitializeRenderContext(){}renderNode(){}get updating(){return this._sortedDrapeSourceRenderersDirty||r.someMap(this._renderers,a=>a.updating)}get hasOverlays(){return null!=
this._overlays&&null!=this._renderTargets}getMemoryForMaterial(a){return Array.from(this._renderers.values()).reduce((b,c)=>b+c.getMemoryForMaterial(a),0)}createGeometryDrapeSourceRenderer(a){return this.createDrapeSourceRenderer(a,ha.SortedRenderGeometryRenderer)}createDrapeSourceRenderer(a,b,c){const d=this._renderers.get(a);null!=d&&d.destroy();b=new b({...c,rendererContext:this,drapeSource:a});this._renderers.set(a,b);this._sortedDrapeSourceRenderersDirty=!0;"fullOpacity"in a&&this.addHandles(p.watch(()=>
a.fullOpacity,()=>this.events.emit("content-changed")),a);return b}removeDrapeSourceRenderer(a){if(null!=a){var b=this._renderers.get(a);null!=b&&(this._sortedDrapeSourceRenderersDirty=!0,this._renderers.delete(a),this.removeHandles(a),b.destroy())}}computeValidity(){return this._renderTargets?.computeValidity()??0}releaseRenderTargets(){this._renderTargets?.dispose()}get overlays(){return this._overlays??[]}ensureDrapeTargets(a){this._hasTargetWithoutRasterImage=this._overlays?B.someSet(a,b=>b.drapeTargetType===
q.DrapeTargetType.WithoutRasterImage):!1}ensureDrapeSources(a){this._overlays?(this._hasDrapedFeatureSource=B.someSet(a,b=>b.drapeSourceType===q.DrapeSourceType.Features),this._hasDrapedRasterSource=B.someSet(a,b=>b.drapeSourceType===q.DrapeSourceType.RasterImage)):this._hasDrapedFeatureSource=this._hasDrapedRasterSource=!1}get _needsColorWithoutRasterImage(){return this._hasDrapedRasterSource&&this._hasDrapedFeatureSource&&this._hasTargetWithoutRasterImage}ensureOverlays(a,b,c=this._bindParameters.overlayStretch){null==
this._overlays&&(this._renderTargets=new U.OverlayRenderTargets(this.view._stage.renderer.fboCache),this._overlays=[new M.Overlay,new M.Overlay]);this.ensureDrapeTargets(a);this.ensureDrapeSources(b);this._bindParameters.overlayStretch=c}disposeOverlays(){this._overlays=null;this._renderTargets=t.disposeMaybe(this._renderTargets);this.events.emit("textures-disposed")}getTexture(a){if(null!=a)return a===l.OverlayContent.ColorNoRasterImage&&!this._needsColorWithoutRasterImage&&this._hasDrapedFeatureSource?
this._renderTargets?.getTexture(l.OverlayContent.Color):this._renderTargets?.getTexture(a)}get running(){return this.updating}runTask(a){this._processDrapeSources(a,()=>!0)}_processDrapeSources(a,b){let c=!1;for(const [d,e]of this._renderers){if(a.done)break;(d.destroyed||b(d))&&e.commitChanges()&&(c=!0,a.madeProgress())}this._sortedDrapeSourceRenderersDirty&&(this._sortedDrapeSourceRenderersDirty=!1,c=!0,this._updateSortedDrapeSourceRenderers());c&&(null!=this._overlays&&0===this._renderers.size&&
this.disposeOverlays(),this.notifyChange("updating"),this.notifyChange("isEmpty"),this.events.emit("content-changed"),this.hasHighlights=r.someMap(this._renderers,d=>d.hasHighlights),this._updateRendersOccluded(),this._updateHasWater())}processSyncDrapeSources(){this._processDrapeSources(N.noBudget,a=>a.updatePolicy===la.UpdatePolicy.SYNC)}get isEmpty(){return L.debugFlags.OVERLAY_DRAW_DEBUG_TEXTURE?!1:!r.someMap(this._renderers,a=>!a.isEmpty)}get hasWater(){return this._hasWater}get rendersOccluded(){return this._rendersOccluded}get mode(){return this.isEmpty?
z.OverlayMode.Disabled:this._renderTargets?.getTexture(l.OverlayContent.WaterNormal)?z.OverlayMode.EnabledWithWater:this._renderTargets?.getTexture(l.OverlayContent.Color)?z.OverlayMode.Enabled:z.OverlayMode.Disabled}updateAnimation(a){let b=!1;this._renderers.forEach(c=>b=c.updateAnimation(a)||b);return b}updateDrapeSourceOrder(){this._sortedDrapeSourceRenderersDirty=!0}drawOverlays(a){if(this._overlays&&this._renderTargets){for(const b of this._overlays)this.longitudeCyclical?b.setupGeometryViewsCyclical(this.longitudeCyclical):
b.setupGeometryViewsDirect();for(const b of this._renderTargets.targets)if(b.content!==l.OverlayContent.ColorNoRasterImage||this._needsColorWithoutRasterImage)this._drawTarget(u.OverlayIndex.INNER,b,a),this._drawTarget(u.OverlayIndex.OUTER,b,a)}}_drawTarget(a,b,c){const d=this._overlays[a],e=d.canvasGeometries;if(0!==e.numViews){var {alignPixelEnabled:g,contentPixelRatio:n}=c;this._screenToWorldRatio=n*d.mapUnitsPerPixel/this._bindParameters.overlayStretch;var x=b.output;if(!(this.isEmpty||x===v.ShaderOutput.Highlight&&
!this.hasHighlights||x===v.ShaderOutput.Normal&&!this.hasWater)&&d.hasSomeSizedView()){var y=this._rctx;this._camera.pixelRatio=d.pixelRatio*n;this._renderContext.output=x;this._bindParameters.alignPixelEnabled=g;this._bindParameters.screenToWorldRatio=this._screenToWorldRatio;this._bindParameters.screenToPCSRatio=this._screenToWorldRatio*this.worldToPCSRatio;this._bindParameters.slot=x===v.ShaderOutput.Normal?w.RenderSlot.DRAPED_WATER:w.RenderSlot.DRAPED_MATERIAL;if((c=L.debugFlags.OVERLAY_DRAW_DEBUG_TEXTURE&&
b.content!==l.OverlayContent.Occluded)||this._sortedRenderers.some(({renderer:m})=>m.shouldRender(this._renderContext))){var E=d.resolution;this._rctx.setViewport(a===u.OverlayIndex.INNER?0:E,0,E,E);var F=2*d.resolution,G=d.resolution,H=b.fbo;H.bind(y,F,G);a===u.OverlayIndex.INNER&&(y.setClearColor(0,0,0,0),y.clearSafe(C.ClearBufferBit.COLOR_BUFFER_BIT));b.content===l.OverlayContent.Occluded&&(this._renderContext.renderOccludedMask=D);if(c)for(c=0;c<e.numViews;c++)this._setViewParameters(e.extents[c],
d),this._ensureDebugPatternResources(d.resolution,ra[a]),this._rctx.bindTechnique(this._debugTextureTechnique,this._passParameters,null),this._rctx.screen.draw();this._sortedRenderers.forAll(({drapeSource:m,renderer:A})=>{if(b.content!==l.OverlayContent.ColorNoRasterImage||m.drapeSourceType!==q.DrapeSourceType.RasterImage){var {fullOpacity:I}=m;m=null!=I&&1>I&&x===v.ShaderOutput.Color?this.bindTemporaryFramebuffer(F,G):null;for(let J=0;J<e.numViews;J++)this._setViewParameters(e.extents[J],d),A.render(this._renderContext);
m&&(H.bind(y,F,G),this._overlayParameters.texture=m.colorTexture,this._overlayParameters.opacity=I,this._overlayParameters.overlayIndex=a,A=this.pluginContext.techniqueRepository.acquire(oa.OverlayCompositingTechnique),this._rctx.bindTechnique(A,this._overlayParameters,this._renderContext.bindParameters),this._rctx.screen.draw(),A.release(),m.release())}});y.bindFramebuffer(null);a===u.OverlayIndex.OUTER&&H.generateMipMap();this._renderContext.resetRenderOccludedMask()}}}}bindTemporaryFramebuffer(a,
b){const c=this.view._stage.renderer.fboCache;a=c.acquire(V.ColorFormat.RGBA,a,b);c.rctx.bindFramebuffer(a.fbo);c.rctx.clearSafe(C.ClearBufferBit.COLOR_BUFFER_BIT);return a}async reloadShaders(){await this._shaderTechniqueRepository.reloadAll()}notifyContentChanged(){this.events.emit("content-changed")}intersect(a,b,c,d){let e=0;for(const g of this._renderers.values())e=g.intersect?.(a,b,c,d,e)??e}_updateSortedDrapeSourceRenderers(){this._sortedRenderers.clear();if(0!==this._renderers.size){var a=
this.view.map.allLayers;this._renderers.forEach((b,c)=>{const d=a.indexOf(c.layer),e=0<=d;this._sortedRenderers.push(new sa(c,b,this._renderers.size*(c.renderGroup??(e?q.DrapedRenderGroup.MapLayer:q.DrapedRenderGroup.ViewLayer))+(e?d:0)))});this._sortedRenderers.sort((b,c)=>b.index-c.index)}}_setViewParameters(a,b){const c=this._camera;c.viewport=[0,0,b.resolution,b.resolution];K.ortho(c.projectionMatrix,0,a[2]-a[0],0,a[3]-a[1],c.near,c.far);K.fromTranslation(c.viewMatrix,[-a[0],-a[1],0])}_updateHasWater(){const a=
r.someMap(this._renderers,b=>b.hasWater);a!==this._hasWater&&(this._hasWater=a,this.events.emit("has-water",a))}_updateRendersOccluded(){const a=r.someMap(this._renderers,b=>b.rendersOccluded);a!==this._rendersOccluded&&(this._rendersOccluded=a,this.events.emit("renders-occluded",a))}_ensureDebugPatternResources(a,b){R.set(this._passParameters.color,b[0],b[1],b[2]);if(!this._passParameters.texture){b=new Uint8Array(a*a*4);var c=0;for(let d=0;d<a;d++)for(let e=0;e<a;e++){const g=Math.floor(e/10),n=
Math.floor(d/10);2>g||2>n||10*g>a-20||10*n>a-20?(b[c++]=255,b[c++]=255,b[c++]=255,b[c++]=255):(b[c++]=255,b[c++]=255,b[c++]=255,g&1&&n&1?b[c++]=e&1^d&1?0:255:b[c++]=g&1^n&1?0:128)}a=new qa.TextureDescriptor(a);a.samplingMode=C.TextureSamplingMode.NEAREST;this._passParameters.texture=new pa.Texture(this._rctx,a,b);a=new ja.TextureTechniqueConfiguration;a.hasAlpha=!0;this._debugTextureTechnique=this._shaderTechniqueRepository.acquire(ia.TextureTechnique,a)}}get test(){return{drapedRenderers:Array.from(this._renderers.values()),
getDrapeSourceRenderer:a=>this._renderers.get(a)}}};h.__decorate([k.property()],f.OverlayRenderer.prototype,"hasHighlights",void 0);h.__decorate([k.property()],f.OverlayRenderer.prototype,"_sortedDrapeSourceRenderersDirty",void 0);h.__decorate([k.property({autoDestroy:!0})],f.OverlayRenderer.prototype,"_shaderTechniqueRepository",void 0);h.__decorate([k.property({constructOnly:!0})],f.OverlayRenderer.prototype,"view",void 0);h.__decorate([k.property()],f.OverlayRenderer.prototype,"worldToPCSRatio",
void 0);h.__decorate([k.property()],f.OverlayRenderer.prototype,"spatialReference",void 0);h.__decorate([k.property({type:Boolean,readOnly:!0})],f.OverlayRenderer.prototype,"updating",null);h.__decorate([k.property()],f.OverlayRenderer.prototype,"isEmpty",null);f.OverlayRenderer=h.__decorate([Q.subclass("esri.views.3d.terrain.OverlayRenderer")],f.OverlayRenderer);class sa{constructor(a,b,c){this.drapeSource=a;this.renderer=b;this.index=c}}const ra=[[1,.5,.5],[.5,.5,1]],D=da.RenderOccludedFlag.OccludeAndTransparent;
f.drapedZ=-2;f.overlayRenderOccludedFlag=D;Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});