// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("exports ../../core/maybe ../../core/promiseUtils ../../core/time ./checkWebGLError ./ContextState ./contextUtils ./enums ./InstanceCounter ./Parameters ./ProgramCache ./renderState ./Texture ./Util ./WebGLDriverTest ./capabilities/Capabilities ./capabilities/isWebGL2Context".split(" "),function(q,r,v,w,k,t,l,e,x,y,z,A,B,C,D,E,F){function h(a,b,c,d){b?d!==b&&a.bindBuffer(c,b.glName):a.bindBuffer(c,null);return b}function u(a,b){switch(a){case e.PrimitiveType.POINTS:return 2*b;case e.PrimitiveType.TRIANGLES:return b/
3;case e.PrimitiveType.TRIANGLE_STRIP:return b-2;case e.PrimitiveType.TRIANGLE_FAN:return b-2;default:return 0}}q.RenderingContext=class{constructor(a,b){this.gl=a;this.instanceCounter=new x.InstanceCounter;this.programCache=new z.ProgramCache(this);this._state=new t.ContextState;this._numOfTriangles=this._numOfDrawCalls=0;this.type=F(a)?l.ContextType.WEBGL2:l.ContextType.WEBGL1;this._loadExtensions();this.configure(b)}get gl2(){return this.type===l.ContextType.WEBGL1?null:this.gl}configure(a){this._capabilities=
new E.Capabilities(this.gl,a);this._parameters=new y.Parameters(this.gl,this._capabilities,a);B.Texture.TEXTURE_UNIT_FOR_UPDATES=this._parameters.maxTextureImageUnits-1;a=this.gl.getParameter(this.gl.VIEWPORT);this._state=new t.ContextState;this._state.viewport={x:a[0],y:a[1],width:a[2],height:a[3]};this._stateTracker=new A.StateTracker({setBlending:b=>{b?(this.setBlendingEnabled(!0),this.setBlendEquationSeparate(b.opRgb,b.opAlpha),this.setBlendFunctionSeparate(b.srcRgb,b.dstRgb,b.srcAlpha,b.dstAlpha),
b=b.color,this.setBlendColor(b.r,b.g,b.b,b.a)):this.setBlendingEnabled(!1)},setCulling:b=>{b?(this.setFaceCullingEnabled(!0),this.setCullFace(b.face),this.setFrontFace(b.mode)):this.setFaceCullingEnabled(!1)},setPolygonOffset:b=>{b?(this.setPolygonOffsetFillEnabled(!0),this.setPolygonOffset(b.factor,b.units)):this.setPolygonOffsetFillEnabled(!1)},setDepthTest:b=>{b?(this.setDepthTestEnabled(!0),this.setDepthFunction(b.func)):this.setDepthTestEnabled(!1)},setStencilTest:b=>{if(b){this.setStencilTestEnabled(!0);
const c=b.function;this.setStencilFunction(c.func,c.ref,c.mask);b=b.operation;this.setStencilOp(b.fail,b.zFail,b.zPass)}else this.setStencilTestEnabled(!1)},setDepthWrite:b=>{b?(this.setDepthWriteEnabled(!0),this.setDepthRange(b.zNear,b.zFar)):this.setDepthWriteEnabled(!1)},setColorWrite:b=>{b?this.setColorMask(b.r,b.g,b.b,b.a):this.setColorMask(!1,!1,!1,!1)},setStencilWrite:b=>{b?this.setStencilWriteMask(b.mask):this.setStencilWriteMask(0)},setDrawBuffers:b=>{const {drawBuffers:c}=this._capabilities;
b?c?.drawBuffers(b.buffers):({drawFramebuffer:b}=this._state,null===b||0===b.colorAttachments.length?c?.drawBuffers([e.SpecialDrawBuffers.BACK]):c?.drawBuffers([e.ColorAttachment.COLOR_ATTACHMENT0]))}});this.enforceState();r.disposeMaybe(this._driverTest);this._driverTest=new D.WebGLDriverTest(this)}dispose(){r.disposeMaybe(this._driverTest);this.programCache.dispose();this.bindVAO(null);this.unbindBuffer(e.BufferType.ARRAY_BUFFER);this.unbindBuffer(e.BufferType.ELEMENT_ARRAY_BUFFER);this.type===
l.ContextType.WEBGL2&&(this.unbindBuffer(e.BufferType.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(e.BufferType.PIXEL_PACK_BUFFER),this.unbindBuffer(e.BufferType.PIXEL_UNPACK_BUFFER),this.unbindBuffer(e.BufferType.COPY_READ_BUFFER),this.unbindBuffer(e.BufferType.COPY_WRITE_BUFFER));this._state.textureUnitMap.length=0;k.webglDebugEnabled()&&console.log(this.instanceCounter.resourceInformation)}get driverTest(){return this._driverTest}get contextAttributes(){return this.gl.getContextAttributes()}get parameters(){return this._parameters}setPipelineState(a){this._stateTracker.setPipeline(a)}setBlendingEnabled(a){this._state.blend!==
a&&(!0===a?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND),this._state.blend=a,this._stateTracker.invalidateBlending())}externalProgramUpdate(){this._state.program?.stop();this._state.program=null}externalTextureUnitUpdate(a,b){for(let c=0;c<a.length;++c)this._state.textureUnitMap[a[c]]=null;0<=b&&(this._state.activeTexture=b)}externalVertexArrayObjectUpdate(){const a=this.capabilities.vao;a&&(a.bindVertexArray(null),this._state.vertexArrayObject=null);this._state.vertexBuffer=null;this._state.indexBuffer=
null}externalVertexBufferUpdate(){this._state.vertexBuffer=null}externalIndexBufferUpdate(){this._state.indexBuffer=null}setBlendColor(a,b,c,d){if(a!==this._state.blendColor.r||b!==this._state.blendColor.g||c!==this._state.blendColor.b||d!==this._state.blendColor.a)this.gl.blendColor(a,b,c,d),this._state.blendColor.r=a,this._state.blendColor.g=b,this._state.blendColor.b=c,this._state.blendColor.a=d,this._stateTracker.invalidateBlending()}setBlendFunction(a,b){if(a!==this._state.blendFunction.srcRGB||
b!==this._state.blendFunction.dstRGB)this.gl.blendFunc(a,b),this._state.blendFunction.srcRGB=a,this._state.blendFunction.srcAlpha=a,this._state.blendFunction.dstRGB=b,this._state.blendFunction.dstAlpha=b,this._stateTracker.invalidateBlending()}setBlendFunctionSeparate(a,b,c,d){if(this._state.blendFunction.srcRGB!==a||this._state.blendFunction.srcAlpha!==c||this._state.blendFunction.dstRGB!==b||this._state.blendFunction.dstAlpha!==d)this.gl.blendFuncSeparate(a,b,c,d),this._state.blendFunction.srcRGB=
a,this._state.blendFunction.srcAlpha=c,this._state.blendFunction.dstRGB=b,this._state.blendFunction.dstAlpha=d,this._stateTracker.invalidateBlending()}setBlendEquation(a){this._state.blendEquation.mode!==a&&(this.gl.blendEquation(a),this._state.blendEquation.mode=a,this._state.blendEquation.modeAlpha=a,this._stateTracker.invalidateBlending())}setBlendEquationSeparate(a,b){if(this._state.blendEquation.mode!==a||this._state.blendEquation.modeAlpha!==b)this.gl.blendEquationSeparate(a,b),this._state.blendEquation.mode=
a,this._state.blendEquation.modeAlpha=b,this._stateTracker.invalidateBlending()}setColorMask(a,b,c,d){if(this._state.colorMask.r!==a||this._state.colorMask.g!==b||this._state.colorMask.b!==c||this._state.colorMask.a!==d)this.gl.colorMask(a,b,c,d),this._state.colorMask.r=a,this._state.colorMask.g=b,this._state.colorMask.b=c,this._state.colorMask.a=d,this._stateTracker.invalidateColorWrite()}setClearColor(a,b,c,d){if(this._state.clearColor.r!==a||this._state.clearColor.g!==b||this._state.clearColor.b!==
c||this._state.clearColor.a!==d)this.gl.clearColor(a,b,c,d),this._state.clearColor.r=a,this._state.clearColor.g=b,this._state.clearColor.b=c,this._state.clearColor.a=d}setFaceCullingEnabled(a){this._state.faceCulling!==a&&(!0===a?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE),this._state.faceCulling=a,this._stateTracker.invalidateCulling())}setPolygonOffsetFillEnabled(a){this._state.polygonOffsetFill!==a&&(!0===a?this.gl.enable(this.gl.POLYGON_OFFSET_FILL):this.gl.disable(this.gl.POLYGON_OFFSET_FILL),
this._state.polygonOffsetFill=a,this._stateTracker.invalidatePolygonOffset())}setPolygonOffset(a,b){if(this._state.polygonOffset[0]!==a||this._state.polygonOffset[1]!==b)this._state.polygonOffset[0]=a,this._state.polygonOffset[1]=b,this.gl.polygonOffset(a,b),this._stateTracker.invalidatePolygonOffset()}setCullFace(a){this._state.cullFace!==a&&(this.gl.cullFace(a),this._state.cullFace=a,this._stateTracker.invalidateCulling())}setFrontFace(a){this._state.frontFace!==a&&(this.gl.frontFace(a),this._state.frontFace=
a,this._stateTracker.invalidateCulling())}setScissorTestEnabled(a){this._state.scissorTest!==a&&(!0===a?this.gl.enable(this.gl.SCISSOR_TEST):this.gl.disable(this.gl.SCISSOR_TEST),this._state.scissorTest=a)}setScissorRect(a,b,c,d){if(this._state.scissorRect.x!==a||this._state.scissorRect.y!==b||this._state.scissorRect.width!==c||this._state.scissorRect.height!==d)this.gl.scissor(a,b,c,d),this._state.scissorRect.x=a,this._state.scissorRect.y=b,this._state.scissorRect.width=c,this._state.scissorRect.height=
d}setDepthTestEnabled(a){this._state.depthTest!==a&&(!0===a?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST),this._state.depthTest=a,this._stateTracker.invalidateDepthTest())}setClearDepth(a){this._state.clearDepth!==a&&(this.gl.clearDepth(a),this._state.clearDepth=a)}setDepthFunction(a){this._state.depthFunction!==a&&(this.gl.depthFunc(a),this._state.depthFunction=a,this._stateTracker.invalidateDepthTest())}setDepthWriteEnabled(a){this._state.depthWrite!==a&&(this.gl.depthMask(a),
this._state.depthWrite=a,this._stateTracker.invalidateDepthWrite())}setDepthRange(a,b){if(this._state.depthRange.zNear!==a||this._state.depthRange.zFar!==b)this.gl.depthRange(a,b),this._state.depthRange.zNear=a,this._state.depthRange.zFar=b,this._stateTracker.invalidateDepthWrite()}setStencilTestEnabled(a){this._state.stencilTest!==a&&(!0===a?this.gl.enable(this.gl.STENCIL_TEST):this.gl.disable(this.gl.STENCIL_TEST),this._state.stencilTest=a,this._stateTracker.invalidateStencilTest())}setClearStencil(a){a!==
this._state.clearStencil&&(this.gl.clearStencil(a),this._state.clearStencil=a)}setStencilFunction(a,b,c){if(this._state.stencilFunction.func!==a||this._state.stencilFunction.ref!==b||this._state.stencilFunction.mask!==c)this.gl.stencilFunc(a,b,c),this._state.stencilFunction.face=e.Face.FRONT_AND_BACK,this._state.stencilFunction.func=a,this._state.stencilFunction.ref=b,this._state.stencilFunction.mask=c,this._stateTracker.invalidateStencilTest()}setStencilFunctionSeparate(a,b,c,d){if(this._state.stencilFunction.face!==
a||this._state.stencilFunction.func!==b||this._state.stencilFunction.ref!==c||this._state.stencilFunction.mask!==d)this.gl.stencilFuncSeparate(a,b,c,d),this._state.stencilFunction.face=a,this._state.stencilFunction.func=b,this._state.stencilFunction.ref=c,this._state.stencilFunction.mask=d,this._stateTracker.invalidateStencilTest()}setStencilWriteMask(a){this._state.stencilWriteMask!==a&&(this.gl.stencilMask(a),this._state.stencilWriteMask=a,this._stateTracker.invalidateStencilWrite())}setStencilOp(a,
b,c){if(this._state.stencilOperation.face!==e.Face.FRONT_AND_BACK||this._state.stencilOperation.fail!==a||this._state.stencilOperation.zFail!==b||this._state.stencilOperation.zPass!==c)this.gl.stencilOp(a,b,c),this._state.stencilOperation.face=e.Face.FRONT_AND_BACK,this._state.stencilOperation.fail=a,this._state.stencilOperation.zFail=b,this._state.stencilOperation.zPass=c,this._stateTracker.invalidateStencilTest()}setStencilOpSeparate(a,b,c,d){if(this._state.stencilOperation.face!==a||this._state.stencilOperation.fail!==
b||this._state.stencilOperation.zFail!==c||this._state.stencilOperation.zPass!==d)this.gl.stencilOpSeparate(a,b,c,d),this._state.stencilOperation.face=a,this._state.stencilOperation.fail=b,this._state.stencilOperation.zFail=c,this._state.stencilOperation.zPass=d,this._stateTracker.invalidateStencilTest()}setActiveTexture(a,b=!1){const c=this._state.activeTexture;0<=a&&(b||a!==this._state.activeTexture)&&(this.gl.activeTexture(e.baseTextureUnit+a),this._state.activeTexture=a);return c}clear(a){a&&
this.gl.clear(a)}clearSafe(a,b=255){a&&(a&e.ClearBufferBit.COLOR_BUFFER_BIT&&this.setColorMask(!0,!0,!0,!0),a&e.ClearBufferBit.DEPTH_BUFFER_BIT&&this.setDepthWriteEnabled(!0),a&e.ClearBufferBit.STENCIL_BUFFER_BIT&&this.setStencilWriteMask(b),this.gl.clear(a))}drawArrays(a,b,c){k.webglDebugEnabled()&&(this._numOfDrawCalls++,this._numOfTriangles+=u(a,c));this.gl.drawArrays(a,b,c);k.checkWebGLError(this.gl)}drawArraysInstanced(a,b,c,d){this.gl2?.drawArraysInstanced(a,b,c,d);k.checkWebGLError(this.gl)}drawElements(a,
b,c,d){k.webglDebugEnabled()&&(this._numOfDrawCalls++,this._numOfTriangles+=u(a,b));this.gl.drawElements(a,b,c,d);if(k.webglDebugEnabled()){const f=C.getErrorString(this);if(f){const g=this.getBoundVAO(),m=g?.indexBuffer,n=m?.size??0,p=d+b;console.error(`drawElements: ${f}${n<p?`. Buffer is too small. Attempted to draw index ${p} of ${n}`:""}`,{args:{mode:a,count:b,type:c,offset:d},vao:{indexBuffer:m,vertexBuffers:g?.vertexBuffers}})}}}logInfo(){k.webglDebugEnabled()&&console.log(`DrawCalls: ${this._numOfDrawCalls}, Triangles: ${this._numOfTriangles}`)}resetInfo(){k.webglDebugEnabled()&&
(this._numOfTriangles=this._numOfDrawCalls=0)}get capabilities(){return this._capabilities}setViewport(a,b,c,d){c=Math.max(Math.round(c),1);d=Math.max(Math.round(d),1);const f=this._state.viewport;if(f.x!==a||f.y!==b||f.width!==c||f.height!==d)f.x=a,f.y=b,f.width=c,f.height=d,this.gl.viewport(a,b,c,d)}setViewport4fv(a){this.setViewport(a[0],a[1],a[2],a[3])}getViewport(){const a=this._state.viewport;return{x:a.x,y:a.y,width:a.width,height:a.height}}useProgram(a){this._state.program!==a&&(this._state.program?.stop(),
this._state.program=a,this.gl.useProgram(a?.glName??null))}bindTexture(a,b,c=!1){(b>=this.parameters.maxTextureImageUnits||0>b)&&console.error("Input texture unit is out of range of available units!");const d=this._state.textureUnitMap[b];if(null==a?.glName)return null!=d&&(this.setActiveTexture(b,c),this.gl.bindTexture(d.descriptor.target,null)),this._state.textureUnitMap[b]=null,d;if(!c&&d===a)return a.isDirty&&(this.setActiveTexture(b,c),a.applyChanges()),d;this.setActiveTexture(b,c);this.gl.bindTexture(a.descriptor.target,
a.glName);a.applyChanges();this._state.textureUnitMap[b]=a;return d}unbindTexture(a){if(null!=a)for(let b=0;b<this.parameters.maxTextureImageUnits;b++)this._state.textureUnitMap[b]===a&&(this.bindTexture(null,b),this._state.textureUnitMap[b]=null)}bindFramebuffer(a,b=!1){if(b||this._state.readFramebuffer!==a||this._state.drawFramebuffer!==a)this._stateTracker.invalidateDrawBuffers(),null==a?(this.gl.bindFramebuffer(e.FramebufferTarget.FRAMEBUFFER,null),this._state.readFramebuffer=null,this._state.drawFramebuffer=
null):(a.initializeAndBind(e.FramebufferTarget.FRAMEBUFFER),this._state.readFramebuffer=a,this._state.drawFramebuffer=a)}bindFramebufferSeparate(a,b,c=!1){const d=b===e.FramebufferTarget.READ_FRAMEBUFFER,f=d?this._state.readFramebuffer:this._state.drawFramebuffer;if(c||f!==a)null==a?this.gl.bindFramebuffer(b,null):a.initializeAndBind(b),d?this._state.readFramebuffer=a??null:this._state.drawFramebuffer=a??null}blitFramebuffer(a,b,c=0,d=0,f=a.width,g=a.height,m=0,n=0,p=b.width,G=b.height,H=e.ClearBufferBit.COLOR_BUFFER_BIT,
I=e.TextureSamplingMode.NEAREST){this.bindFramebufferSeparate(a,e.FramebufferTarget.READ_FRAMEBUFFER);this.bindFramebufferSeparate(b,e.FramebufferTarget.DRAW_FRAMEBUFFER);this.gl.blitFramebuffer(c,d,f,g,m,n,p,G,H,I)}bindBuffer(a,b){if(a)switch(b??(b=a.bufferType),b){case e.BufferType.ARRAY_BUFFER:this._state.vertexBuffer=h(this.gl,a,b,this._state.vertexBuffer);break;case e.BufferType.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=h(this.gl,a,b,this._state.indexBuffer);break;case e.BufferType.UNIFORM_BUFFER:this._state.uniformBuffer=
h(this.gl,a,b,this._state.uniformBuffer);break;case e.BufferType.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=h(this.gl,a,b,this._state.pixelPackBuffer);break;case e.BufferType.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=h(this.gl,a,b,this._state.pixelUnpackBuffer);break;case e.BufferType.COPY_READ_BUFFER:this._state.copyReadBuffer=h(this.gl,a,b,this._state.copyReadBuffer);break;case e.BufferType.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=h(this.gl,a,b,this._state.copyWriteBuffer)}}bindRenderbuffer(a){const b=
this.gl;a||(b.bindRenderbuffer(b.RENDERBUFFER,null),this._state.renderbuffer=null);this._state.renderbuffer!==a&&(b.bindRenderbuffer(b.RENDERBUFFER,a.glName),this._state.renderbuffer=a)}_getBufferBinding(a,b){if(b>=this.parameters.maxUniformBufferBindings||0>b)return console.error("Uniform buffer binding point is out of range!"),null;a=this._state.uniformBufferBindingPoints;let c=a[b];null==c&&(c={buffer:null,offset:0,size:0},a[b]=c);return c}bindBufferBase(a,b,c){const d=this._getBufferBinding(a,
b);null==d||d.buffer===c&&0===d.offset&&0===d.size||(this.gl.bindBufferBase(a,b,c?c.glName:null),d.buffer=c,d.offset=0,d.size=0)}bindBufferRange(a,b,c,d,f){const g=this._getBufferBinding(a,b);null==g||g.buffer===c&&g.offset===d&&g.size===f||(0!==d%this._parameters.uniformBufferOffsetAlignment?console.error("Uniform buffer binding offset is not a multiple of the context offset alignment"):(this.gl.bindBufferRange(a,b,c.glName,d,f),g.buffer=c,g.offset=d,g.size=f))}bindUBO(a,b,c,d){null==b?this.bindBufferBase(e.BufferType.UNIFORM_BUFFER,
a,null):(k.webglDebugEnabled()&&(d??b.byteLength)>this._parameters.maxUniformBlockSize&&console.error("Attempting to bind more data than the maximum uniform block size"),b.initialize(),void 0!==c&&void 0!==d?this.bindBufferRange(e.BufferType.UNIFORM_BUFFER,a,b.buffer,c,d):this.bindBufferBase(e.BufferType.UNIFORM_BUFFER,a,b.buffer))}unbindUBO(a){for(let b=0,c=this._state.uniformBufferBindingPoints.length;b<c;b++){const d=this._state.uniformBufferBindingPoints[b];null!=d&&d.buffer===a.buffer&&this.bindBufferBase(e.BufferType.UNIFORM_BUFFER,
b,null)}}unbindBuffer(a){switch(a){case e.BufferType.ARRAY_BUFFER:this._state.vertexBuffer=h(this.gl,null,a,this._state.vertexBuffer);break;case e.BufferType.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=h(this.gl,null,a,this._state.indexBuffer);break;case e.BufferType.UNIFORM_BUFFER:this._state.uniformBuffer=h(this.gl,null,a,this._state.uniformBuffer);break;case e.BufferType.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=h(this.gl,null,a,this._state.pixelPackBuffer);break;case e.BufferType.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=
h(this.gl,null,a,this._state.pixelUnpackBuffer);break;case e.BufferType.COPY_READ_BUFFER:this._state.copyReadBuffer=h(this.gl,null,a,this._state.copyReadBuffer);break;case e.BufferType.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=h(this.gl,null,a,this._state.copyWriteBuffer)}}bindVAO(a=null){null==a?this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null):this._state.vertexArrayObject!==a&&(a.bind(),this._state.vertexArrayObject=a)}async clientWaitAsync(a=
w.Milliseconds(10)){const b=this.gl,c=b.fenceSync(e.SyncCondition.SYNC_GPU_COMMANDS_COMPLETE,0);if(!c)throw Error("Client wait failed, could not create sync object");this.instanceCounter.increment(e.ResourceType.Sync,c);b.flush();let d;do await v.after(a),d=b.clientWaitSync(c,0,0);while(d===e.ClientWaitSyncStatus.TIMEOUT_EXPIRED);this.instanceCounter.decrement(e.ResourceType.Sync,c);b.deleteSync(c);if(d===e.ClientWaitSyncStatus.WAIT_FAILED)throw Error("Client wait failed");}getBoundFramebufferObject(a=
e.FramebufferTarget.FRAMEBUFFER){return a===e.FramebufferTarget.READ_FRAMEBUFFER?this._state.readFramebuffer:this._state.drawFramebuffer}getBoundVAO(){return this._state.vertexArrayObject}resetState(){this.useProgram(null);this.bindVAO(null);this.bindFramebuffer(null,!0);this.unbindBuffer(e.BufferType.ARRAY_BUFFER);this.unbindBuffer(e.BufferType.ELEMENT_ARRAY_BUFFER);this.type===l.ContextType.WEBGL2&&(this.unbindBuffer(e.BufferType.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(e.BufferType.PIXEL_PACK_BUFFER),
this.unbindBuffer(e.BufferType.PIXEL_UNPACK_BUFFER),this.unbindBuffer(e.BufferType.COPY_READ_BUFFER),this.unbindBuffer(e.BufferType.COPY_WRITE_BUFFER));for(let a=0;a<this.parameters.maxTextureImageUnits;++a)this.bindTexture(null,a);this.setBlendingEnabled(!1);this.setBlendFunction(e.BlendFactor.ONE,e.BlendFactor.ZERO);this.setBlendEquation(e.BlendOperation.ADD);this.setBlendColor(0,0,0,0);this.setFaceCullingEnabled(!1);this.setCullFace(e.Face.BACK);this.setFrontFace(e.CullMode.CCW);this.setPolygonOffsetFillEnabled(!1);
this.setPolygonOffset(0,0);this.setScissorTestEnabled(!1);this.setScissorRect(0,0,this.gl.canvas.width,this.gl.canvas.height);this.setDepthTestEnabled(!1);this.setDepthFunction(e.CompareFunction.LESS);this.setDepthRange(0,1);this.setStencilTestEnabled(!1);this.setStencilFunction(e.CompareFunction.ALWAYS,0,0);this.setStencilOp(e.StencilOperation.KEEP,e.StencilOperation.KEEP,e.StencilOperation.KEEP);this.setClearColor(0,0,0,0);this.setClearDepth(1);this.setClearStencil(0);this.setColorMask(!0,!0,!0,
!0);this.setStencilWriteMask(4294967295);this.setDepthWriteEnabled(!0);this.setViewport(0,0,this.gl.canvas.width,this.gl.canvas.height)}enforceState(){var a=this.capabilities.vao;a&&a.bindVertexArray(null);const {gl:b,gl2:c}=this;for(var d=0;d<this.parameters.maxVertexAttributes;d++)b.disableVertexAttribArray(d);this._state.vertexBuffer?b.bindBuffer(this._state.vertexBuffer.bufferType,this._state.vertexBuffer.glName):b.bindBuffer(e.BufferType.ARRAY_BUFFER,null);this._state.indexBuffer?b.bindBuffer(this._state.indexBuffer.bufferType,
this._state.indexBuffer.glName):b.bindBuffer(e.BufferType.ELEMENT_ARRAY_BUFFER,null);if(null!=c){this._state.uniformBuffer?c.bindBuffer(this._state.uniformBuffer.bufferType,this._state.uniformBuffer.glName):c.bindBuffer(e.BufferType.UNIFORM_BUFFER,null);for(d=0;d<this._parameters.maxUniformBufferBindings;d++){const f=this._state.uniformBufferBindingPoints[d];if(null!=f){const {buffer:g,offset:m,size:n}=f;null!==g?0===m&&0===n?c.bindBufferBase(e.BufferType.UNIFORM_BUFFER,d,g.glName):c.bindBufferRange(e.BufferType.UNIFORM_BUFFER,
d,g.glName,m,n):c.bindBufferBase(e.BufferType.UNIFORM_BUFFER,d,null)}}this._state.pixelPackBuffer?c.bindBuffer(this._state.pixelPackBuffer.bufferType,this._state.pixelPackBuffer.glName):c.bindBuffer(e.BufferType.PIXEL_PACK_BUFFER,null);this._state.pixelUnpackBuffer?c.bindBuffer(this._state.pixelUnpackBuffer.bufferType,this._state.pixelUnpackBuffer.glName):c.bindBuffer(e.BufferType.PIXEL_UNPACK_BUFFER,null);this._state.copyReadBuffer?c.bindBuffer(this._state.copyReadBuffer.bufferType,this._state.copyReadBuffer.glName):
c.bindBuffer(e.BufferType.COPY_READ_BUFFER,null);this._state.copyWriteBuffer?c.bindBuffer(this._state.copyWriteBuffer.bufferType,this._state.copyWriteBuffer.glName):c.bindBuffer(e.BufferType.COPY_WRITE_BUFFER,null);c.bindFramebuffer(e.FramebufferTarget.READ_FRAMEBUFFER,null);c.readBuffer(c.BACK);this._state.readFramebuffer&&(c.bindFramebuffer(e.FramebufferTarget.READ_FRAMEBUFFER,this._state.readFramebuffer.glName),c.readBuffer(e.ColorAttachment.COLOR_ATTACHMENT0));c.bindFramebuffer(e.FramebufferTarget.DRAW_FRAMEBUFFER,
this._state.drawFramebuffer?.glName??null)}else this._state.readFramebuffer=this._state.drawFramebuffer,b.bindFramebuffer(e.FramebufferTarget.FRAMEBUFFER,this._state.drawFramebuffer?.glName??null);if(a&&this._state.vertexArrayObject){if(a=this._state.vertexArrayObject)this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null;this.bindVAO(a)}b.useProgram(this._state.program?.glName??null);b.blendColor(this._state.blendColor.r,this._state.blendColor.g,this._state.blendColor.b,this._state.blendColor.a);
b.bindRenderbuffer(b.RENDERBUFFER,this._state.renderbuffer?this._state.renderbuffer.glName:null);!0===this._state.blend?b.enable(this.gl.BLEND):b.disable(this.gl.BLEND);b.blendEquationSeparate(this._state.blendEquation.mode,this._state.blendEquation.modeAlpha);b.blendFuncSeparate(this._state.blendFunction.srcRGB,this._state.blendFunction.dstRGB,this._state.blendFunction.srcAlpha,this._state.blendFunction.dstAlpha);b.clearColor(this._state.clearColor.r,this._state.clearColor.g,this._state.clearColor.b,
this._state.clearColor.a);b.clearDepth(this._state.clearDepth);b.clearStencil(this._state.clearStencil);b.colorMask(this._state.colorMask.r,this._state.colorMask.g,this._state.colorMask.b,this._state.colorMask.a);b.cullFace(this._state.cullFace);b.depthFunc(this._state.depthFunction);b.depthRange(this._state.depthRange.zNear,this._state.depthRange.zFar);!0===this._state.depthTest?b.enable(b.DEPTH_TEST):b.disable(b.DEPTH_TEST);b.depthMask(this._state.depthWrite);b.frontFace(this._state.frontFace);
b.lineWidth(1);!0===this._state.faceCulling?b.enable(b.CULL_FACE):b.disable(b.CULL_FACE);b.polygonOffset(this._state.polygonOffset[0],this._state.polygonOffset[1]);!0===this._state.polygonOffsetFill?b.enable(b.POLYGON_OFFSET_FILL):b.disable(b.POLYGON_OFFSET_FILL);b.scissor(this._state.scissorRect.x,this._state.scissorRect.y,this._state.scissorRect.width,this._state.scissorRect.height);!0===this._state.scissorTest?b.enable(b.SCISSOR_TEST):b.disable(b.SCISSOR_TEST);b.stencilFunc(this._state.stencilFunction.func,
this._state.stencilFunction.ref,this._state.stencilFunction.mask);b.stencilOpSeparate(this._state.stencilOperation.face,this._state.stencilOperation.fail,this._state.stencilOperation.zFail,this._state.stencilOperation.zPass);!0===this._state.stencilTest?b.enable(b.STENCIL_TEST):b.disable(b.STENCIL_TEST);b.stencilMask(this._state.stencilWriteMask);for(a=0;a<this.parameters.maxTextureImageUnits;a++)b.activeTexture(e.baseTextureUnit+a),b.bindTexture(e.TextureType.TEXTURE_2D,null),b.bindTexture(e.TextureType.TEXTURE_CUBE_MAP,
null),this.type===l.ContextType.WEBGL2&&(b.bindTexture(e.TextureType.TEXTURE_3D,null),b.bindTexture(e.TextureType.TEXTURE_2D_ARRAY,null)),d=this._state.textureUnitMap[a],null!=d&&b.bindTexture(d.descriptor.target,d.glName);b.activeTexture(e.baseTextureUnit+this._state.activeTexture);a=this._state.viewport;b.viewport(a.x,a.y,a.width,a.height);this.resetInfo()}_loadExtensions(){this.type===l.ContextType.WEBGL1&&this.gl.getExtension("OES_element_index_uint");this.gl.getExtension("KHR_parallel_shader_compile")}};
Object.defineProperty(q,Symbol.toStringTag,{value:"Module"})});