// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("exports ../../kernel ../../request ../../core/Error ../../core/promiseUtils ./arcgisLayerUrl ../../portal/Portal ../../portal/PortalItem".split(" "),function(m,u,h,k,l,n,v,p){async function w(a){var b=(await q(a)).serviceItemId;if(!b)return null;b=new p({id:b,apiKey:a.apiKey});const c=await x(a);null!=c&&(b.portal=new v({url:c}));try{return b.load({signal:a.signal})}catch(d){return l.throwIfAbortError(d),null}}async function q(a){if(a.rootDocument)return a.rootDocument;const b={query:{f:"json",
token:a.apiKey},responseType:"json",signal:a.signal};try{const c=await h(a.sceneServerUrl,b);a.rootDocument=c.data}catch{a.rootDocument={}}return a.rootDocument}async function x(a){var b=u.id?.findServerInfo(a.sceneServerUrl);if(b?.owningSystemUrl)return b.owningSystemUrl;b=a.sceneServerUrl.replace(/(.*\/rest)\/.*/i,"$1")+"/info";try{const c=(await h(b,{query:{f:"json"},responseType:"json",signal:a.signal})).data.owningSystemUrl;if(c)return c}catch(c){l.throwIfAbortError(c)}return null}async function r(a,
b){a=n.parse(a);if(!a)throw new k("invalid-feature-service-url","Invalid feature service url");const c=a.url.path;a=b.layerId;if(null==a)return{serverUrl:c};var d=q(b);const g=f=>h(c,{query:{f:"json"},responseType:"json",authMode:f,signal:b.signal});var e=g("anonymous").catch(()=>g("no-prompt"));const [t,y]=await Promise.all([e,d]);d=y?.layers;e=t.data&&t.data.layers;if(!Array.isArray(e))throw Error("expected layers array");if(!Array.isArray(d)){if(null!=a&&a<e.length)return{serverUrl:c,layerId:e[a].id}}else for(let f=
0;f<Math.min(d.length,e.length);f++)if(d[f].id===a)return{serverUrl:c,layerId:e[f].id};throw Error("could not find matching associated sublayer");}async function z({sceneLayerItem:a,signal:b}){if(!a)return null;try{const c=(await a.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:b})).find(g=>"Feature Service"===g.type)||null;if(!c)return null;const d=new p({portal:c.portal,id:c.id});await d.load();return d}catch(c){return l.throwIfAbortError(c),null}}m.findAssociatedFeatureService=
async function(a,b){a=n.parse(a);if(!a)throw new k("invalid-url","Invalid scene service url");a={...b,sceneServerUrl:a.url.path,layerId:a.sublayer??void 0};a.sceneLayerItem??(a.sceneLayerItem=await w(a));if(null==a.sceneLayerItem)return r(a.sceneServerUrl.replace("/SceneServer","/FeatureServer"),a);b=await z(a);if(!b?.url)throw new k("related-service-not-found","Could not find feature service through portal item relationship");a=await r(b.url,a);a.portalItem=b;return a};Object.defineProperty(m,Symbol.toStringTag,
{value:"Module"})});