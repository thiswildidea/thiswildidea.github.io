// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define(["exports","../../../../colorUtils","../../rasterFunctionConstants","./utils","../../../../renderers/support/colorRampUtils"],function(k,m,n,g,p){function q(a){const e=a.colormap.map(b=>{if("value"in b){const f="string"===typeof b.color?m.getNamedColor(b.color)??m.hex2rgba(b.color):b.color;b=[b.value,...f];b[4]&&1>=b[4]&&(b[4]=Math.round(255*b[4]))}return b}),{raster:c,outputPixelType:d}=a;return g.createRasterFunction("Colormap",{colormap:e,raster:c},d)}function r(a){const {colorRampName:e}=
a,c=Object.values(n.colormapName).find(l=>l.toLowerCase()===e?.toLowerCase()),d=p.colorRampDict.toJSON(e),{raster:b,outputPixelType:f="unknown"}=a;return g.createRasterFunction("Colormap",c?{colormapName:c,raster:b}:{colorRampName:d,raster:b},f)}k.colormap=function(a){if("colormap"in a)a=q(a);else if("colorRamp"in a){const {raster:e,colorRamp:c,outputPixelType:d}=a;a={colorRamp:"toJSON"in c?c.toJSON():c,raster:e};a=g.createRasterFunction("Colormap",a,d)}else a=r(a);return a};k.compositeBands=function(a){const {rasters:e,
outputPixelType:c}=a;return g.createRasterFunction("CompositeBand",{rasters:e},c)};k.extractBand=function(a){const {raster:e,outputPixelType:c="unknown"}=a,d={raster:e,missingBandAction:"fail"===a.missingBandAction?1:0};"bandIds"in a?d.bandIds=a.bandIds:"bandNames"in a?d.bandNames=a.bandNames:"bandWavelengths"in a&&(d.bandWavelengths=a.bandWavelengths);return g.createRasterFunction("ExtractBand",d,c)};k.mask=function(a){const {raster:e,outputPixelType:c="unknown"}=a,d=a.includedRanges?.flatMap(f=>
f),b=a.noDataValues?.map(f=>f.join(" "));return g.createRasterFunction("Mask",{raster:e,includedRanges:d,noDataInterpretation:"match-all"===a.noDataInterpretation?1:0,noDataValues:b},c)};k.remap=function(a){const {allowUnmatched:e,raster:c,rangeMaps:d,outputPixelType:b}=a;var f=d?.filter(({output:h})=>null!=h);a=f?.flatMap(({range:h})=>h);f=f?.map(({output:h})=>h);const l=d?.filter(h=>null==h.output)?.flatMap(({range:h})=>h);return g.createRasterFunction("Remap",{allowUnmatched:e,raster:c,inputRanges:a,
outputValues:f,noDataRanges:l},b)};k.statisticsHistogram=function(a){const {raster:e,histograms:c,outputPixelType:d}=a;a=a.statistics?.map(b=>({min:b.min,max:b.max,mean:b.avg,standardDeviation:b.stddev}));return g.createRasterFunction("StatisticsHistograms",{raster:e,statistics:a,histograms:c},d)};k.table=function(a){const {raster:e,attributeTable:c,outputPixelType:d="unknown"}=a;a="toJSON"in c?c.toJSON():c;return g.createRasterFunction("Table",{raster:e,attributeTableAsRecordSet:a},d)};Object.defineProperty(k,
Symbol.toStringTag,{value:"Module"})});