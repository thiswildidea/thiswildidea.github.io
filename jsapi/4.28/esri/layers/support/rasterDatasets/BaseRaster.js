// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../geometry ../../../request ../../../core/Error ../../../core/JSONSupport ../../../core/Logger ../../../core/Promise ../../../core/promiseUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../arcgisLayerUrl ../commonProperties ../DimensionalDefinition ../LOD ../RasterStorageInfo ../TileInfo ./multidimensionalUtils ./RawBlockCache ../rasterFormats/pixelRangeUtils ../rasterFormats/RasterCodec ../rasterFunctions/pixelUtils ../rasterFunctions/rasterProjectionHelper ../rasterFunctions/vectorFieldUtils ../../../geometry/Extent ../../../geometry/Point".split(" "),
function(A,x,W,R,X,Y,Z,aa,B,ba,ma,na,ca,da,ea,fa,ha,ia,S,K,D,ja,ka,H,v,T,I,G){x=class extends Z.EsriPromiseMixin(X.JSONSupport){constructor(){super(...arguments);this.datasetFormat=this.datasetName=null;this.hasUniqueSourceStorageInfo=!0;this.rasterInfo=null;this.ioConfig={sampling:"closest"}}async init(){const a=v.load();this.addResolvingPromise(a);await this.when()}normalizeCtorArgs(a){a?.ioConfig&&(a={...a,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:S.create(),...a.ioConfig}});
return a}get _isGlobalWrappableSource(){const {rasterInfo:a}=this,b=v.getWorldWidth(a.spatialReference);return null!=b&&a.extent.width>=b/2}get _hasNoneOrGCSShiftTransform(){const {transform:a}=this.rasterInfo;return null==a||"gcs-shift"===a.type}set rasterJobHandler(a){this._set("rasterJobHandler",a);"Function"===this.datasetFormat&&this.primaryRasters?.rasters?.forEach(b=>b.rasterJobHandler=a)}set url(a){this._set("url",da.sanitizeUrl(a,Y.getLogger(this)))}async open(a){throw new R("BaseRaster:open-not-implemented",
"open() is not implemented");}async fetchTile(a,b,d,c={}){const e=c.tileInfo||this.rasterInfo.storageInfo.tileInfo;a=this.getTileExtentFromTileInfo(a,b,d,e);return this.fetchPixels(a,e.size[0],e.size[1],c)}async identify(a,b={}){a=ba.ensureClass(G,a).clone().normalize();const {multidimensionalDefinition:d,timeExtent:c}=b;var {rasterInfo:e}=this;const {hasMultidimensionalTranspose:g,multidimensionalInfo:f}=e;var {transposedVariableName:h}=b,k=null!=f&&g&&(null!=c||K.isMultiSliceOrRangeDefinition(d));
k&&!h&&(h=null!=d&&0<d.length?d[0].variableName??void 0:f.variables[0].name,b={...b,transposedVariableName:h});b=this._getRequestOptionsWithSliceId(b);const {spatialReference:m,extent:p}=e;var {datumTransformation:n}=b;n=v.projectPoint(a,m,n);if(!p.intersects(n)||null!=e.transform&&(n=e.transform.inverseTransform(n),!e.nativeExtent.intersects(n)))return{location:n,value:null};let r=0;var q=null!=h&&null!=f&&e.hasMultidimensionalTranspose;if("Function"===this.datasetFormat){k=this.primaryRasters.rasters[0];
if(q)return k.identify(n,b);({pixelSize:q}=e);b=3*q.x/2;q=3*q.y/2;b=new I({xmin:n.x-b,xmax:n.x+b,ymin:n.y-q,ymax:n.y+q,spatialReference:m});q={interpolation:"nearest"};({pixelBlock:k}=await k.fetchPixels(b,3,3,q));({pixelBlock:b}=await this.fetchPixels(b,3,3,q));if(null==k)return{location:n,value:null};k=!k.mask||k.mask[4]?k.pixels.map(z=>z[4]):null;var l;null!=b&&(l=!b.mask||b.mask[4]?b.pixels.map(z=>z[4]):void 0);return{location:n,value:k,processedValue:l,pyramidLevel:0}}if(!q)if(b.srcResolution)r=
v.snapPyramid(b.srcResolution,e,this.ioConfig.sampling).pyramidLevel;else if(r=await this.computeBestPyramidLevelForLocation(a,b),null==r)return{location:n,value:null};l=this.identifyPixelLocation(n,r,null,q);if(null===l)return{location:n,value:null};const {row:t,col:u,rowOffset:w,colOffset:y,blockWidth:E}=l;l=D.getRasterId(this.url,h??b.sliceId);e=`${r}/${t}/${u}`;h=D.getBlock(l,null,e);null==h&&(h=this.fetchRawTile(r,t,u,b),D.putBlock(l,null,e,h));l=await h;return l?.pixels?.length?this._processIdentifyResult(l,
{srcLocation:n,position:w*E+y,pyramidLevel:r,useTransposedTile:!!q,requestSomeSlices:k,identifyOptions:b}):{location:n,value:null}}async fetchPixels(a,b,d,c={}){a=v.shiftExtent(a);c=this._getRequestOptionsWithSliceId(c);var {_hasNoneOrGCSShiftTransform:e}=this;if(c.requestRawData&&e)return this._fetchPixels(a,b,d,c);var g=v.getWorldWidth(a.spatialReference),f=v.getWorldWrapCount(a);if(null==g||0===f||1===f&&this._isGlobalWrappableSource&&e)return this._fetchPixels(a,b,d,c);if(3<=f)return{extent:a,
pixelBlock:null};const h=[],{xmin:k,xmax:m}=a,p=Math.round(g/(m-k)*b),n=p-Math.round((g/2-k)/(m-k)*b);let r=0;e=[];for(let l=0;l<=f;l++){var q=new I({xmin:0===l?k:-g/2,xmax:l===f?m-g*l:g/2,ymin:a.ymin,ymax:a.ymax,spatialReference:a.spatialReference});const t=0===l?p-n:l===f?b-r:p;r+=t;e.push(t);q=c.disableWrapAround&&0<l?null:this._fetchPixels(q,t,d,c);h.push(q)}g=(await Promise.all(h)).map(l=>l?.pixelBlock);f=null;b={width:b,height:d};f=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:g,
srcMosaicSize:b,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:e},c)).pixelBlock:H.mosaic(g,b,{blockWidths:e});c=v.projectExtent(a,this.rasterInfo.spatialReference,c.datumTransformation);return{extent:a,srcExtent:c,pixelBlock:f}}async fetchRawPixels(a,b,d,c={}){b={x:Math.floor(b.x),y:Math.floor(b.y)};const e=await this._fetchRawTiles(a,b,d,c),{nativeExtent:g,nativePixelSize:f,storageInfo:h}=this.rasterInfo;var k=2**a,m=f.x*k;k*=f.y;m=new I({xmin:g.xmin+
m*b.x,xmax:g.xmin+m*(b.x+d.width-1),ymin:g.ymax-k*(b.y+d.height-1),ymax:g.ymax-k*b.y,spatialReference:g.spatialReference});if(!e)return{extent:m,srcExtent:m,pixelBlock:null};const {pixelBlocks:p,mosaicSize:n}=e;if(1===p.length&&null!=p[0]&&p[0].width===d.width&&p[0].height===d.height)return{extent:m,srcExtent:m,pixelBlock:e.pixelBlocks[0]};a={x:b.x%(0<a?h.pyramidBlockWidth:h.blockWidth),y:b.y%(0<a?h.pyramidBlockHeight:h.blockHeight)};d=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,
srcMosaicSize:n,destDimension:d,clipOffset:a,clipSize:d,coefs:null,sampleSpacing:null,interpolation:c.interpolation,alignmentInfo:null,blockWidths:null},c)).pixelBlock:H.mosaic(p,n,{clipOffset:a,clipSize:d});return{extent:m,srcExtent:m,pixelBlock:d}}fetchRawTile(a,b,d,c){throw new R("BaseRaster:read-not-implemented","fetchRawTile() is not implemented");}computeExtent(a){return v.projectExtent(this.rasterInfo.extent,a)}decodePixelBlock(a,b){return!this.rasterJobHandler||b.useCanvas?ka.decode(a,b):
this.rasterJobHandler.decode({data:a,options:b})}async request(a,b,d=0){const {customFetchParameters:c}=this.ioConfig,{range:e,query:g,headers:f}=b;d=d??b.retryCount??this.ioConfig.retryCount;const h=e?{Range:`bytes=${e.from}-${e.to}`}:null;try{return await W(a,{...b,query:{...g,...c},headers:{...f,...h}})}catch(k){if(0<d)return d--,this.request(a,b,d);throw k;}}getSliceIndex(a){const {multidimensionalInfo:b}=this.rasterInfo;return null==b||null==a||0===a.length?null:K.getSliceIndex(a,b)}getTileExtentFromTileInfo(a,
b,d,c){a=c.lodAt(a);return this.getTileExtent({x:a.resolution,y:a.resolution},b,d,c.origin,c.spatialReference,c.size)}updateTileInfo(){const {storageInfo:a,spatialReference:b,extent:d,pixelSize:c}=this.rasterInfo;if(!a.tileInfo){const g=[];var e=a.maximumPyramidLevel||0;let f=Math.max(c.x,c.y),h=1/.0254*96*f;for(let k=0;k<=e;k++)g.unshift(new ha({level:e-k,resolution:f,scale:h})),f*=2,h*=2;e=new G({x:d.xmin,y:d.ymax,spatialReference:b});a.tileInfo=new S({origin:e,size:[a.blockWidth,a.blockHeight],
spatialReference:b,lods:g});a.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(a,b=512,d=512,c){const {width:e,height:g,nativeExtent:f,pixelSize:h,spatialReference:k}=a,m=new G({x:f.xmin,y:f.ymax,spatialReference:k});null==c&&(c=Math.max(0,Math.round(Math.log(Math.max(e,g))/Math.LN2-8)));const p=this.computeBlockBoundary(f,512,512,{x:f.xmin,y:f.ymax},[h],c);a.storageInfo=new ia({blockWidth:b,blockHeight:d,pyramidBlockWidth:b,pyramidBlockHeight:d,origin:m,firstPyramidLevel:1,maximumPyramidLevel:c,
blockBoundary:p})}async computeBestPyramidLevelForLocation(a,b){return 0}computeBlockBoundary(a,b,d,c,e,g=0,f=2){if(1===e.length&&0<g){e=[...e];let {x:m,y:p}=e[0];for(let n=0;n<g;n++)m*=f,p*=f,e.push({x:m,y:p})}g=[];const {x:h,y:k}=c;for(c=0;c<e.length;c++){const {x:m,y:p}=e[c];g.push({minCol:Math.floor((a.xmin-h+.1*m)/b/m),maxCol:Math.floor((a.xmax-h-.1*m)/b/m),minRow:Math.floor((k-a.ymax+.1*p)/d/p),maxRow:Math.floor((k-a.ymin-.1*p)/d/p)})}return g}getPyramidPixelSize(a){const {nativePixelSize:b}=
this.rasterInfo,{pyramidResolutions:d,pyramidScalingFactor:c}=this.rasterInfo.storageInfo;if(0===a)return b;if(null!=d&&d.length)return d[a-1];a=c**a;return{x:b.x*a,y:b.y*a}}identifyPixelLocation(a,b,d,c){const {spatialReference:e,nativeExtent:g,storageInfo:f}=this.rasterInfo,{maximumPyramidLevel:h,origin:k,transposeInfo:m}=f,p=c&&null!=m?m.tileSize[0]:f.blockWidth;c=c&&null!=m?m.tileSize[1]:f.blockHeight;a=v.projectPoint(a,e,d);if(!g.intersects(a)||0>b||b>h)return null;d=this.getPyramidPixelSize(b);
const {x:n,y:r}=d;d=(k.y-a.y)/r/c;const q=(a.x-k.x)/n/p;return{pyramidLevel:b,row:Math.floor(d),col:Math.floor(q),rowOffset:Math.min(c-1,Math.floor((d-Math.floor(d))*c)),colOffset:Math.min(p-1,Math.floor((q-Math.floor(q))*p)),blockWidth:p,srcLocation:a}}getTileExtent(a,b,d,c,e,g){const [f,h]=g;d=c.x+d*f*a.x;b=c.y-b*h*a.y;return new I({xmin:d,xmax:d+f*a.x,ymin:b-h*a.y,ymax:b,spatialReference:e})}getBlockWidthHeight(a){return{blockWidth:0<a?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,
blockHeight:0<a?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(a,b,d){a=this.rasterInfo.storageInfo.blockBoundary[a];return!a||a.maxRow<b||a.maxCol<d||a.minRow>b||a.minCol>d}async _fetchPixels(a,b,d,c={}){var e=v.getWorldWrapCount(a);if(2<=e)return{extent:a,pixelBlock:null};var g=this._getSourceDataInfo(a,b,d,c);const {pyramidLevel:f,srcResolution:h,srcExtent:k,srcWidth:m,srcHeight:p,ul:n}=g;if(0===m||0===p)return{extent:a,srcExtent:k,pixelBlock:null};
var {rasterInfo:r}=this,q=r.transform,l="gcs-shift"===q?.type,t=null!=v.getWorldWidth(a.spatialReference);if(l||!t)e=v.getWorldWrapCount(g.srcExtent,l);g=await this._fetchRawTiles(f,n,{width:m,height:p,wrapCount:e},c);if(!g)return{extent:a,srcExtent:k,pixelBlock:null};var u=r.storageInfo;l=0<f?u.pyramidBlockWidth:u.blockWidth;var w=0<f?u.pyramidBlockHeight:u.blockHeight;let {x:y,y:E}=r.pixelSize;if(0<f){const {pyramidResolutions:C,pyramidScalingFactor:F}=u;null!=C&&C[f-1]?{x:y,y:E}=C[f-1]:(u=F**f,
y*=u,E*=u)}var z=r.spatialReference;r=new G({x:y,y:E,spatialReference:z});const L=l===m&&w===p&&0===n.x%l&&0===n.y%w;u=new G({x:(a.xmax-a.xmin)/b,y:(a.ymax-a.ymin)/d,spatialReference:a.spatialReference});const M=!a.spatialReference.equals(z),N=z.isGeographic?1E-9:1E-4;({datumTransformation:z}=c);if(!M&&L&&1===g.pixelBlocks.length&&l===b&&w===d&&this._isSameResolution(h,u,N))return{extent:a,srcExtent:k,srcTilePixelSize:r,pixelBlock:g.pixelBlocks[0]};l=t&&null!=v.getWorldWidth(k.spatialReference)&&
this._hasNoneOrGCSShiftTransform;(t=c.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector"))&&!this.rasterJobHandler&&await v.load();e=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:a,srcBufferExtent:g.extent,pixelSize:u.toJSON(),datumTransformation:z,rasterTransform:q,hasWrapAround:0<e||l,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:t},c):v.getProjectionOffsetGrid({projectedExtent:a,srcBufferExtent:g.extent,
pixelSize:u,datumTransformation:z,rasterTransform:q,hasWrapAround:0<e||l,isAdaptive:!1,includeGCSGrid:t});q=!c.requestRawData;l={rows:e.spacing[0],cols:e.spacing[1]};w=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(f,g.extent.xmin):void 0;const {pixelBlocks:O,mosaicSize:J,isPartiallyFilled:P}=g;g=null;this.rasterJobHandler?(b=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:O,srcMosaicSize:J,destDimension:q?{width:b,height:d}:null,coefs:q?e.coefficients:null,sampleSpacing:q?
l:null,projectDirections:t,gcsGrid:t?e.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:c.interpolation,alignmentInfo:w,blockWidths:null},c),{pixelBlock:q,localNorthDirections:g}=b):(w=H.mosaic(O,J,{alignmentInfo:w}),q=q?H.approximateTransform(w,{width:b,height:d},e.coefficients,l,c.interpolation):w,t&&e.gcsGrid&&(g=H.getLocalArithmeticNorthRotations({width:b,height:d},e.gcsGrid),q=T.convertToLocalDirections(q,this.rasterInfo.dataType,g)));return c.requestRawData||t?{extent:a,
srcExtent:k,srcTilePixelSize:r,pixelBlock:q,transformGrid:e,localNorthDirections:g,isPartiallyFilled:P}:{extent:a,srcExtent:k,srcTilePixelSize:r,pixelBlock:q}}async _fetchRawTiles(a,b,d,c){const {origin:e,blockBoundary:g}=this.rasterInfo.storageInfo,{blockWidth:f,blockHeight:h}=this.getBlockWidthHeight(a);let {x:k,y:m}=b,{width:p,height:n,wrapCount:r}=d;var q=this._getRasterTileAlignmentInfo(a,0);c.buffer&&(k-=c.buffer.cols,m-=c.buffer.rows,p+=2*c.buffer.cols,n+=2*c.buffer.rows);var l=0,t=0;let u=
0;r&&null!=q&&({worldColumnCountFromOrigin:t,originColumnOffset:u,rightPadding:l}=q,t*q.blockWidth-l>=k+p&&(l=0));b=Math.floor(k/f);d=Math.floor(m/h);const w=Math.floor((k+p+l-1)/f);l=Math.floor((m+n+l-1)/h);var y=g[a];if(!y)return null;const {minRow:E,minCol:z,maxCol:L,maxRow:M}=y;if(0===r&&(l<E||w<z||d>M||b>L))return null;y=[];let N=!1;const O=null==this.ioConfig.allowPartialFill?c.allowPartialFill:this.ioConfig.allowPartialFill;for(let C=d;C<=l;C++)for(let F=b;F<=w;F++){let Q=F;!c.disableWrapAround&&
r&&null!=q&&t<=F&&(Q=F-t-u);if(C>=E&&Q>=z&&M>=C&&L>=Q){const U=this._fetchRawTile(a,C,Q,c);O?y.push(new Promise(V=>{U.then(la=>V(la)).catch(()=>{N=!0;V(null)})})):y.push(U)}else y.push(Promise.resolve(null))}if(0===y.length)return null;c=await Promise.all(y);q={height:(l-d+1)*h,width:(w-b+1)*f};({spatialReference:t}=this.rasterInfo);a=this.getPyramidPixelSize(a);const {x:J,y:P}=a;return{extent:new I({xmin:e.x+b*f*J,xmax:e.x+(w+1)*f*J,ymin:e.y-(l+1)*h*P,ymax:e.y-d*h*P,spatialReference:t}),pixelBlocks:c,
mosaicSize:q,isPartiallyFilled:N}}_isSameResolution(a,b,d){return Math.abs(a.x-b.x)<d&&Math.abs(a.y-b.y)<d}_fetchRawTile(a,b,d,c){var e=this.rasterInfo.storageInfo.blockBoundary[a];if(!e)return Promise.resolve(null);const {minRow:g,minCol:f,maxCol:h,maxRow:k}=e;if(b<g||d<f||b>k||d>h)return Promise.resolve(null);const m=D.getRasterId(this.url,c.sliceId),p=`${a}/${b}/${d}`;e=D.getBlock(m,c.registryId,p);if(null==e){const n=new AbortController;e=this.fetchRawTile(a,b,d,{...c,signal:n.signal});D.putBlock(m,
c.registryId,p,e,n);e.catch(()=>D.deleteBlock(m,c.registryId,p))}if(c.signal)aa.onAbort(c,()=>{D.decreaseRefCount(m,c.registryId,p)});return e}_computeMagDirValues(a){const {bandCount:b,dataType:d}=this.rasterInfo;if((2!==b||"vector-magdir"!==d)&&"vector-uv"!==d||2!==a?.length||!a[0]?.length)return null;var c=a[0].length;if("vector-magdir"===d)return c=a[1].map(h=>(h+360)%360),[a[0],c];const [e,g]=a;a=[];const f=[];for(let h=0;h<c;h++){const [k,m]=T.uvComponentToVector([e[h],g[h]]);a.push(k);f.push(m)}return[a,
f]}_getRasterTileAlignmentInfo(a,b){null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=v.getRasterDatasetAlignmentInfo(this.rasterInfo));return null==this._rasterTileAlighmentInfo.pyramidsInfo?null:{startX:b,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[a]}}_getSourceDataInfo(a,b,d,c={}){const e={datumTransformation:c.datumTransformation,pyramidLevel:0,
pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};c.srcResolution&&(e.srcResolution=c.srcResolution,this._updateSourceDataInfo(a,e));var g=this.rasterInfo.storageInfo.maximumPyramidLevel||0;const {srcWidth:f,srcHeight:h,pyramidLevel:k}=e;var m=f/b;const p=h/d,n=k<g&&16<=m*p;var r=k===g&&this._requireTooManySrcTiles(f,h,b,d);if(n||r||0===f||0===h){r=new G({x:(a.xmax-a.xmin)/b,y:(a.ymax-a.ymin)/d,spatialReference:a.spatialReference});r=v.projectResolution(r,
this.rasterInfo.spatialReference,a,e.datumTransformation);const q=!r||c.srcResolution&&r.x+r.y<c.srcResolution.x+c.srcResolution.y;n&&c.srcResolution&&q&&(m=Math.round(Math.log(Math.max(m,p))/Math.LN2)-1,g-k+3>=m&&(g=2**m,r={x:c.srcResolution.x*g,y:c.srcResolution.y*g}));r&&(e.srcResolution=r,this._updateSourceDataInfo(a,e))}this._requireTooManySrcTiles(e.srcWidth,e.srcHeight,b,d)&&(e.srcWidth=0,e.srcHeight=0);return e}_requireTooManySrcTiles(a,b,d,c){const {tileInfo:e}=this.rasterInfo.storageInfo;
return 256<=Math.ceil(a/e.size[0])*Math.ceil(b/e.size[1])||8<a/d||8<b/c}_updateSourceDataInfo(a,b){b.srcWidth=0;b.srcHeight=0;var {rasterInfo:d}=this,c=d.spatialReference;const {srcResolution:e,datumTransformation:g}=b,{pyramidLevel:f,pyramidResolution:h,excessiveReading:k}=v.snapPyramid(e,d,this.ioConfig.sampling);if(!k&&(a=b.srcExtent||v.projectExtent(a,c,g),null!=a)){(c=d.transform)&&(a=c.inverseTransform(a));b.srcExtent=a;var {x:m,y:p}=d.storageInfo.origin;d=Math.floor((a.xmin-m)/h.x+.1);c=Math.floor((p-
a.ymax)/h.y+.1);var n=Math.floor((a.xmax-m)/h.x-.1),r=Math.floor((p-a.ymin)/h.y-.1);n=a.width<.1*h.x?0:n-d+1;a=a.height<.1*h.y?0:r-c+1;b.pyramidLevel=f;b.pyramidResolution=h;b.srcWidth=n;b.srcHeight=a;b.ul={x:d,y:c}}}_getRequestOptionsWithSliceId(a){null!=this.rasterInfo.multidimensionalInfo&&null==a.sliceId&&(a={...a,sliceId:this.getSliceIndex(a.multidimensionalDefinition)});return a}_processIdentifyResult(a,b){const {srcLocation:d,position:c,pyramidLevel:e,useTransposedTile:g}=b,f=a.pixels[0].length/
a.width/a.height;if(a.mask&&!a.mask[c])return{location:d,value:null};const {multidimensionalInfo:h}=this.rasterInfo;if(null==h||!g)return b=a.pixels.map(l=>l[c]),a={location:d,value:b,pyramidLevel:e},b=this._computeMagDirValues(b.map(l=>[l])),b?.length&&(a.magdirValue=b.map(l=>l[0])),a;let k=a.pixels.map(l=>l.slice(c*f,c*f+f)),m=this._computeMagDirValues(k);const {requestSomeSlices:p,identifyOptions:n}=b;let r=K.createSlices(h,n.transposedVariableName);if(p){const l=K.getSliceIds(r,n.multidimensionalDefinition,
n.timeExtent);k=k.map(t=>l.map(u=>t[u]));m=m?.map(t=>l.map(u=>t[u]));r=l.map(t=>r[t])}b=a.noDataValues||this.rasterInfo.noDataValue;a={pixels:k,pixelType:a.pixelType};let q;null!=b&&(ja.convertNoDataToMask(a,b),q=a.mask);a=r.map((l,t)=>{l={value:0===q?.[t]?null:k.map(u=>u[t]),multidimensionalDefinition:l.multidimensionalDefinition.map(u=>new fa({...u,isSlice:!0}))};m?.length&&(l.magdirValue=[m[0][t],m[1][t]]);return l});return{location:d,value:null,dataSeries:a,pyramidLevel:e}}};A.__decorate([B.property()],
x.prototype,"_rasterTileAlighmentInfo",void 0);A.__decorate([B.property({readOnly:!0})],x.prototype,"_isGlobalWrappableSource",null);A.__decorate([B.property({readOnly:!0})],x.prototype,"_hasNoneOrGCSShiftTransform",null);A.__decorate([B.property()],x.prototype,"rasterJobHandler",null);A.__decorate([B.property(ea.url)],x.prototype,"url",null);A.__decorate([B.property({type:String,json:{write:!0}})],x.prototype,"datasetName",void 0);A.__decorate([B.property({type:String,json:{write:!0}})],x.prototype,
"datasetFormat",void 0);A.__decorate([B.property()],x.prototype,"hasUniqueSourceStorageInfo",void 0);A.__decorate([B.property()],x.prototype,"rasterInfo",void 0);A.__decorate([B.property()],x.prototype,"ioConfig",void 0);A.__decorate([B.property()],x.prototype,"sourceJSON",void 0);return x=A.__decorate([ca.subclass("esri.layers.support.rasterDatasets.BaseRaster")],x)});