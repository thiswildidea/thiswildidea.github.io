// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../geometry ../../../core/Error ../../../core/promiseUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/has ../../../core/accessorSupport/decorators/subclass ../RasterInfo ./BaseRaster ../rasterFunctions/pixelUtils ../rasterFunctions/stretchUtils ../../../geometry/Extent ../../../geometry/SpatialReference".split(" "),function(g,e,p,q,m,D,E,F,r,t,u,v,w,x,y){e=class extends u{constructor(){super(...arguments);
this.datasetFormat="MEMORY";this.data=null}async open(a){await this.init();var b=this.data;const {pixelBlock:c,statistics:d,histograms:h,name:n,keyProperties:z,nativeExtent:A,transform:B}=this.data,{width:k,height:l,pixelType:C}=c,f=b.extent??new x({xmin:-.5,ymin:.5,xmax:k-.5,ymax:l-.5,spatialReference:new y({wkid:3857})});b=new t({width:k,height:l,pixelType:C,extent:f,nativeExtent:A,transform:B,pixelSize:{x:f.width/k,y:f.height/l},spatialReference:f.spatialReference,bandCount:c.pixels.length,keyProperties:z||
{},statistics:d,isPseudoSpatialReference:b.isPseudoSpatialReference??!b.extent,histograms:h});this.createRemoteDatasetStorageInfo(b,512,512);this._set("rasterInfo",b);this.updateTileInfo();await this._buildInMemoryRaster(c,{width:512,height:512},a);this.datasetName=n;this.url="/InMemory/"+n}fetchRawTile(a,b,c,d){a=this._pixelBlockTiles.get(`${a}/${b}/${c}`);return Promise.resolve(a)}async _buildInMemoryRaster(a,b,c){var d=this.rasterInfo.storageInfo.maximumPyramidLevel;const h=this.rasterJobHandler?
this.rasterJobHandler.split({pixelBlock:a,tileSize:b,maximumPyramidLevel:d},c):Promise.resolve(v.split(a,b,d));b=null!=this.rasterInfo.statistics;d=null!=this.rasterInfo.histograms;a=b?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:a},c):Promise.resolve(w.estimateStatisticsHistograms(a));a=await q.eachAlways([h,a]);if(!a[0].value&&a[1].value)throw new p("inmemory-raster:open","failed to build in memory raster");
this._pixelBlockTiles=a[0].value;b||(this.rasterInfo.statistics=a[1].value?.statistics);d||(this.rasterInfo.histograms=a[1].value?.histograms)}};g.__decorate([m.property({type:String,json:{write:!0}})],e.prototype,"datasetFormat",void 0);g.__decorate([m.property()],e.prototype,"data",void 0);return e=g.__decorate([r.subclass("esri.layers.support.rasterDatasets.InMemoryRaster")],e)});