// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("exports ../../core/arrayUtils ../../core/Error ../../core/accessorSupport/originUtils ./utils ../support/arcgisLayerUrl ../support/fetchService ../support/layerUtils ../support/lazyLayerLoader ../../portal/support/jsonContext ../../portal/support/portalItemUtils".split(" "),function(p,v,m,w,k,q,F,G,H,x,h){function t(a){return{isValid:G.isLayerWithFeatureLayerSource(a)&&("feature"===a.type?!a.dynamicDataSource:!0),errorMessage:"Feature layer should be a layer or table in a map or feature service"}}
function u(a){const b=[],c=[];for(const {layer:f,layerJSON:d}of a)f.isTable?c.push(d):b.push(d);return{layers:b,tables:c}}async function y(a,b){return/\/\d+\/?$/.test(a.url)?u([b[0]]):z(b,a)}async function z(a,b){if(!b)return a.reverse(),u(a);const {layer:{url:c,customParameters:f,apiKey:d}}=a[0];b=await b.fetchData("json");if(null==b?.layers||null==b?.tables)b=await I(b,{url:c??"",customParameters:f,apiKey:d},a.map(e=>e.layer.layerId));for(const e of a)A(e.layer,e.layerJSON,b);return b}async function I(a,
b,c){var f,d;a||(a={});(f=a).layers||(f.layers=[]);(d=a).tables||(d.tables=[]);const {url:e,customParameters:g,apiKey:l}=b,{serviceJSON:r,layersJSON:n}=await F.fetchFeatureService(e,{customParameters:g,apiKey:l});b=B(a.layers,r.layers,c);c=B(a.tables,r.tables,c);a.layers=b.itemResources;a.tables=c.itemResources;c=[...b.added,...c.added];b=n?[...n.layers,...n.tables]:[];await J(a,c,e,b);return a}function B(a,b,c){const f=v.difference(a,b,(d,e)=>d.id===e.id);a=a.filter(d=>!f.removed.some(e=>e.id===
d.id));b=f.added;b.forEach(({id:d})=>{a.push({id:d})});return{itemResources:a,added:b.filter(({id:d})=>!c.includes(d))}}async function J(a,b,c,f){const d=await K(b);b=b.map(({id:e,type:g})=>new (d.get(g))({url:c,layerId:e,sourceJSON:f.find(({id:l})=>l===e)}));await Promise.allSettled(b.map(e=>e.load()));b.forEach(e=>{const {layerId:g,loaded:l,defaultPopupTemplate:r}=e;if(l&&null!=r){var n={id:g,popupInfo:r.toJSON()};"ArcGISFeatureLayer"!==e.operationalLayerType&&(n.layerType=e.operationalLayerType);
A(e,n,a)}})}async function K(a){const b=[];a.forEach(({type:d})=>{let e;switch(d){case "Feature Layer":case "Table":e="FeatureLayer";break;case "Oriented Imagery Layer":e="OrientedImageryLayer"}b.push((0,H.layerLookupMap[e])())});const c=await Promise.all(b),f=new Map;a.forEach(({type:d},e)=>{f.set(d,c[e])});return f}function A(a,b,c){a.isTable?C(c.tables,b):C(c.layers,b)}function C(a,b){const c=a.findIndex(({id:f})=>f===b.id);-1===c?a.push(b):a[c]=b}function D(a,b){if(!a.length)throw new m(`${b}:missing-parameters`,
"'layers' array should contain at least one feature layer");}function L(a,b){a=a.map(c=>c.portalItem.id);if(1<(new Set(a)).size)throw new m(`${b}:invalid-parameters`,"All layers in the 'layers' array should be loaded from the same portal item");}function E(a,b){a=a.map(c=>c.layerId);if((new Set(a)).size!==a.length)throw new m(`${b}:invalid-parameters`,"'layers' array should contain only one instance each of layer or table in a feature service");}async function M(a){D(a,"feature-layer-utils-saveall");
await Promise.all(a.map(b=>b.load()));for(const b of a)k.ensureLayerConfig(b,"feature-layer-utils-saveall",t),k.ensureItemConfig({layer:b,itemType:"Feature Service",errorNamePrefix:"feature-layer-utils-saveall"});L(a,"feature-layer-utils-saveall");E(a,"feature-layer-utils-saveall")}async function N(a,b){const {url:c,layerId:f,title:d,fullExtent:e,isTable:g}=a;a=q.parse(c);b.url="FeatureServer"===a?.serverType?c:`${c}/${f}`;b.title||(b.title=d);b.extent=null;g||null==e||(b.extent=await h.getWGS84ExtentForItem(e));
h.removeTypeKeyword(b,h.TypeKeyword.METADATA);h.removeTypeKeyword(b,h.TypeKeyword.MULTI_LAYER);h.addTypeKeyword(b,h.TypeKeyword.SINGLE_LAYER);g&&h.addTypeKeyword(b,h.TypeKeyword.TABLE)}function O(a,b){for(const d of a){var c=d.parsedUrl.path;const e=q.parse(c);if(!e?.url.path)throw new m(`${b}:invalid-parameters`,k.createErrorMessage(d,`has unsupported url pattern: ${c}`),{layer:d});c=e?.serverType;if("FeatureServer"!==c&&"MapServer"!==c)throw new m(`${b}:invalid-parameters`,k.createErrorMessage(d,
`has unsupported server type: ${c}`),{layer:d});if("MapServer"===c&&1<a.length)throw new m(`${b}:invalid-parameters`,"Only one layer or table in a map service can be saved");}const f=q.parse(a[0].parsedUrl.path)?.url.path;if(!a.every(d=>q.parse(d.parsedUrl.path)?.url.path===f))throw new m(`${b}:invalid-parameters`,"'layers' array should only contain layers or tables that belong to the same feature service");}async function P(a){D(a,"feature-layer-utils-saveall-as");await Promise.all(a.map(b=>b.load()));
for(const b of a)k.ensureLayerConfig(b,"feature-layer-utils-saveall-as",t);O(a,"feature-layer-utils-saveall-as");E(a,"feature-layer-utils-saveall-as")}async function Q(a,b){let c=0,f=0;for(var {isTable:d}of b)d?f++:c++;d=b[0].parsedUrl.path;const e=q.parse(d);a.url="FeatureServer"===e?.serverType?e.url.path:d;a.title||(a.title=e.title);a.extent=null;0<c&&(d=b.map(g=>g.fullExtent).filter(v.isSome).reduce((g,l)=>g.clone().union(l)))&&(a.extent=await h.getWGS84ExtentForItem(d));h.removeTypeKeyword(a,
h.TypeKeyword.METADATA);h.toggleTypeKeword(a,h.TypeKeyword.MULTI_LAYER,1<b.length);h.toggleTypeKeword(a,h.TypeKeyword.SINGLE_LAYER,1===b.length);h.toggleTypeKeword(a,h.TypeKeyword.TABLE,0<f&&0===c);k.setCommonItemProperties(a)}p.save=async function(a,b){return k.save({layer:a,itemType:"Feature Service",validateLayer:t,createItemData:(c,f)=>y(f,[c]),errorNamePrefix:"feature-layer-utils-save"},b)};p.saveAll=async function(a,b){await M(a);const c=a[0].portalItem,f=x.createForItemWrite(c),d=await Promise.all(a.map(g=>
k.getLayerJSON(g,f,b))),e=await y(c,a.map((g,l)=>({layer:g,layerJSON:d[l]})));k.setCommonItemProperties(c);await c.update({data:e});await Promise.all(a.slice(1).map(g=>g.portalItem.reload()));w.updateOrigins(f);return c.clone()};p.saveAllAs=async function(a,b,c){await P(a);b=k.getPortalItem({itemType:"Feature Service",errorNamePrefix:"feature-layer-utils-saveall-as",newItem:b});const f=x.createForItemWrite(b),d=await Promise.all(a.map(g=>k.getLayerJSON(g,f,c))),e=await z(a.map((g,l)=>({layer:g,layerJSON:d[l]})));
await Q(b,a);await k.addItem(b,e,c);for(const g of a)g.portalItem=b.clone();w.updateOrigins(f);return b};p.saveAs=async function(a,b,c){return k.saveAs({layer:a,itemType:"Feature Service",validateLayer:t,createItemData:(f,d)=>Promise.resolve(u([f])),errorNamePrefix:"feature-layer-utils-save-as",newItem:b,setItemProperties:N},c)};Object.defineProperty(p,Symbol.toStringTag,{value:"Module"})});