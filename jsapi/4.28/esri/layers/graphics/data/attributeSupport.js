// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/Error","../../../core/sql/WhereClauseCache","../../support/fieldType"],function(f,k,m,u){function n(a,b,c={}){const d=p(b,a);if(!d)throw c=v.getError(b,a),new k("unsupported-query","invalid SQL expression",{expression:b,error:c});a=c.expressionName||"expression";if(c.validateStandardized&&!d.isStandardized)throw new k("unsupported-query",`${a} is not standard`,{expression:b});if(c.validateAggregate&&!d.isAggregate)throw new k("unsupported-query",`${a} does not contain a valid aggregate function`,
{expression:b});return d.fieldNames}function p(a,b){return a?v.get(a,b):null}function w(a){return/\((.*?)\)/.test(a)?a:a.split(" as ")[0]}function q(a,b,c,d={}){const e=new Map;var h=d.allowedFieldTypes??z;for(const g of c)if("*"!==g)if(a.get(g))x(e,a,b,h,g);else try{const l=w(g),r=n(a,l,{validateStandardized:!0});for(const t of r)x(e,a,b,h,t)}catch(l){e.set(g,{type:"expression-error",expression:g,error:l})}if(e.size)throw new k("unsupported-query",`${d.expressionName??"expression"} contains invalid or missing fields`,
{errors:Array.from(e.values()),query:d.query});}function x(a,b,c,d,e){"*"!==e&&((b=b.get(e))?c.has(b.name)?!1===d?.has(b.type)&&a.set(e,{type:"invalid-type",fieldName:b.name,fieldType:u.kebabDict.fromJSON(b.type),allowedFieldTypes:Array.from(d,h=>u.kebabDict.fromJSON(h))}):a.set(e,{type:"missing-field",fieldName:b.name}):a.set(e,{type:"invalid-field",fieldName:e}))}const v=new m.WhereClauseCache(50,500);m=new Set("esriFieldTypeOID esriFieldTypeSmallInteger esriFieldTypeBigInteger esriFieldTypeInteger esriFieldTypeSingle esriFieldTypeDouble esriFieldTypeLong".split(" "));
const y=new Set(["esriFieldTypeDate","esriFieldTypeDateOnly","esriFieldTypeTimeOnly","esriFieldTypeTimestampOffset"]),z=new Set(["esriFieldTypeString","esriFieldTypeGUID","esriFieldTypeGlobalID",...m,...y]);f.allDateAndTimeFieldTypes=y;f.getAliasFromFieldName=function(a){return a.split(" as ")[1]};f.getExpressionFromFieldName=w;f.getWhereClause=p;f.numericFieldTypes=m;f.validateFields=q;f.validateHaving=function(a,b,c,d,e){if(!c)return!0;const h=n(a,c,{validateAggregate:!0,expressionName:"having clause"});
q(a,b,h,{expressionName:"having clause",query:e});if(!p(c,a)?.getExpressions().every(g=>{const {aggregateType:l,field:r}=g,t=a.get(r)?.name;return d.some(A=>{const {onStatisticField:B,statisticType:C}=A;return a.get(B)?.name===t&&C.toLowerCase().trim()===l})}))throw new k("unsupported-query","expressions in having clause should also exist in outStatistics",{having:c});return!0};f.validateWhere=function(a,b,c,d){if(!c)return!0;c=n(a,c,{validateStandardized:!0,expressionName:"where clause"});q(a,b,
c,{expressionName:"where clause",query:d});return!0};Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});