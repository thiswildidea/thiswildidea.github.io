// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/tslib.es6 ../../geometry ../../core/Accessor ../../core/Error ../../core/Logger ../../core/MapUtils ../../core/sql ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/subclass ../../geohash/geohashUtils ../../geometry/Polygon ../../geometry/projection ../../geometry/support/spatialReferenceUtils ./SessionMemoryStorage ./supportUtils ../../rest/knowledgeGraphService ../../rest/knowledgeGraph/GraphQueryStreaming ../../rest/support/Query ../../geometry/Extent".split(" "),
function(r,z,X,Q,G,R,M,N,B,Y,Z,aa,S,O,T,I,J,K,U,L,C,V,W){const P=R.getLogger("esri.rest.knowledgeGraph.knowledgeGraphLayer.KnowledgeGraphLayerDataManager");r.KnowledgeGraphLayerDataManager=class extends Q{constructor(b){super(b);this.inclusionModeDefinition={generateAllSublayers:!0,namedTypeDefinitions:new Map};this.entityTypeNames=new Set;this.relationshipTypeNames=new Set;this.geographicLookup=new Map;this.sublayerCaches=new Map;this.nodeConnectionsLookup=new Map;this.memberIdTypeLookup=new Map;
this._processingCacheUpdatesLookup=new Map;const a=new Map;b.knowledgeGraph.dataModel.entityTypes?.forEach(f=>{f.name&&(a.set(f.name,"entity"),this._processingCacheUpdatesLookup.set(f.name,[]),b.inclusionModeDefinition&&!b.inclusionModeDefinition?.generateAllSublayers||this.entityTypeNames.add(f.name),f.properties?.forEach(e=>{e.geometryType&&"esriGeometryNull"!==e.geometryType&&this.geographicLookup.set(f.name,{name:e.name??"",geometryType:e.geometryType})}))});b.knowledgeGraph.dataModel.relationshipTypes?.forEach(f=>
{f.name&&(a.set(f.name,"relationship"),this._processingCacheUpdatesLookup.set(f.name,[]),b.inclusionModeDefinition&&!b.inclusionModeDefinition?.generateAllSublayers||this.relationshipTypeNames.add(f.name),f.properties?.forEach(e=>{e.geometryType&&"esriGeometryNull"!==e.geometryType&&this.geographicLookup.set(f.name,{name:e.name??"",geometryType:e.geometryType})}))});b.inclusionModeDefinition?.namedTypeDefinitions.forEach((f,e)=>{if("entity"===a.get(e))this.entityTypeNames.add(e);else if("relationship"===
a.get(e))this.relationshipTypeNames.add(e);else{P.warn(`A named type, ${e}, was in the inclusion list that wasn't in the data model and will be removed`);b.inclusionModeDefinition?.namedTypeDefinitions.delete(e);return}const n=new Map;f.members?.forEach(m=>{this.memberIdTypeLookup.set(m.id,e);const p=this.getById(m.id);p&&n.set(m.id,p)});this.sublayerCaches.set(e,n)})}addToLayer(b){b.forEach(({typeName:a,id:f})=>{if(!this.inclusionModeDefinition)throw new G("knowledge-graph:layer-data-manager","You cannot add to a layer's exclusion list if it was not created with an exclusion list originally");
if(this.inclusionModeDefinition.namedTypeDefinitions.has(a))this.inclusionModeDefinition.namedTypeDefinitions.has(a)&&(e=this.inclusionModeDefinition.namedTypeDefinitions.get(a),e.members||(e.members=new Map),e.members.set(f,{id:f}),this.memberIdTypeLookup.set(f,a));else{var e=new Map;e.set(f,{id:f});this.inclusionModeDefinition.namedTypeDefinitions.set(a,{useAllData:!1,members:e});this.memberIdTypeLookup.set(f,a)}})}getById(b){return K.getInstance().readFromStoreById(b)}async getData(b,a,f){if(a.objectType.name&&
this.inclusionModeDefinition?.namedTypeDefinitions&&0<this.inclusionModeDefinition.namedTypeDefinitions.size&&!this.inclusionModeDefinition.namedTypeDefinitions.has(a.objectType.name))return[];b=b?b:new V({where:"1\x3d1",outFields:["*"]});if("link-chart"===a.parentCompositeLayer.type){const e=a.parentCompositeLayer;f=this._processingCacheUpdatesLookup.get(a.objectType.name??"");const n=b.outFields,m=b.geometry;let p="",x="";m&&m.extent&&(p=O.encodeGeohash(m.extent.ymin,m.extent.xmin,12),x=O.encodeGeohash(m.extent.ymax,
m.extent.xmax,12));n&&1===n.length&&"ESRI__ID"===n[0]&&"1\x3d1"===b.where||await Promise.all(f??[]);const c=[];(this.sublayerCaches.has(a.objectType.name??"")?Array.from(this.sublayerCaches.get(a.objectType.name)?.values()):[]).forEach(d=>{d.geometry=e.linkChartDiagramLookup.get(d.attributes[a.objectIdField]);d.attributes.ESRI__LAYOUT_GEOMETRY=d.geometry;if(p&&x){const g=e.linkChartGeohashLookup.get(d.attributes[a.objectIdField]);g?g>=p&&g<=x&&c.push(d):c.push(d)}else c.push(d)});return c}return this.retrieveDataFromService(b,
a,f)}async getConnectedRecordIds(b){const a=[],f=[],e=new Map;b.forEach(n=>{if(this.memberIdTypeLookup.has(n)){const m=this.memberIdTypeLookup.get(n);this.entityTypeNames.has(m)&&(e.has(m)?e.get(m)?.push(n):e.set(m,[n]))}});e.forEach((n,m)=>{const p=`MATCH (n:${m})-[r]-(m) WHERE id(n) IN $ids RETURN id(r), type(r), id(m), labels(m)[0]`;m=new Promise(x=>{(async()=>{const c=(await L.executeQueryStreaming(this.knowledgeGraph,new C({openCypherQuery:p,bindParameters:{ids:n}}))).resultRowsStream.getReader();
try{for(;;){const {done:d,value:g}=await c.read();if(d)break;for(let k=0;k<g.length;k++){const q=g[k];a.push({id:q[0],typeName:q[1]});a.push({id:q[2],typeName:q[3]})}}}catch(d){if("AbortError"===d.name)P.info("Request aborted as expected");else throw d;}})().then(()=>{x()})});f.push(m)});await Promise.all(f);return a}async refreshCacheContent(b,a,f,e=!0){const n=K.getInstance(),m=[],p=new Map,x=new Map;this.knowledgeGraph.dataModel.entityTypes?.forEach(c=>{c.name&&x.set(c.name,c)});this.knowledgeGraph.dataModel.relationshipTypes?.forEach(c=>
{c.name&&x.set(c.name,c)});b||this.inclusionModeDefinition?b?b.forEach(c=>{if(this.memberIdTypeLookup.has(c)){const d=this.memberIdTypeLookup.get(c);p.has(d)?p.get(d)?.push(c):p.set(d,[c])}}):this.inclusionModeDefinition?.namedTypeDefinitions?.forEach((c,d)=>{c.useAllData?p.set(d,null):c.members&&c.members.forEach(g=>{p.has(d)&&null!==p.get(d)?p.get(d)?.push(g.id):p.set(d,[g.id])})}):(this.knowledgeGraph.dataModel.entityTypes?.forEach(c=>{c.name&&p.set(c.name,null)}),this.knowledgeGraph.dataModel.entityTypes?.forEach(c=>
{c.name&&p.set(c.name,null)}));for(const [c,d]of p)b=new Promise(g=>{(async()=>{const k=new Set,q=[];let l="",t=!1;a||x.get(c)?.properties?.forEach(v=>{v.name&&k.add(v.name)});if(f&&this.geographicLookup.has(c)){var w=this.geographicLookup.get(c)?.name;w&&k.add(w)}if(this.entityTypeNames.has(c))l=`MATCH (n:${c}) ${d?"WHERE id(n) IN $ids ":""}return ID(n)`,k.forEach(v=>{l+=`, n.${v}`;q.push(v)});else if(this.relationshipTypeNames.has(c))t=!0,l=`MATCH ()-[n:${c}]->() ${d?"WHERE id(n) IN $ids ":""}return ID(n), id(startNode(n)), id(endNode(n))`,
k.forEach(v=>{l+=`, n.${v}`;q.push(v)});else throw new G("knowledge-graph:layer-data-manager",`The graph type of ${c} could not be determined. Was this type set in the KG data model and inclusion definition?`);w=d?new C({openCypherQuery:l,bindParameters:{ids:d}}):new C({openCypherQuery:l});for(w=(await L.executeQueryStreaming(this.knowledgeGraph,w)).resultRowsStream.getReader();;){const {done:v,value:D}=await w.read();if(v)break;var E=[];for(let u=0;u<D.length;u++){const F=D[u];let y=0,H=0;const A=
{properties:{}};A.id=F[y];y++;H++;t&&(A.originId=F[y],y++,H++,A.destinationId=F[y],y++,H++,M.getOrCreateMapValue(this.nodeConnectionsLookup,A.originId,()=>new Set).add(A.id),M.getOrCreateMapValue(this.nodeConnectionsLookup,A.destinationId,()=>new Set).add(A.id));for(;y<F.length;y++)A.properties[q[y-H]]=F[y];E.push(A)}E=n.writeToStore(E,"ESRI__ID",this.geographicLookup.get(c)?.name);this.sublayerCaches.has(c)||this.sublayerCaches.set(c,new Map);e&&!this.inclusionModeDefinition?.namedTypeDefinitions.has(c)&&
this.inclusionModeDefinition?.namedTypeDefinitions.set(c,{useAllData:!1,members:new Map});e&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(c).members&&(this.inclusionModeDefinition.namedTypeDefinitions.get(c).members=new Map);const h=this.sublayerCaches.get(c);E.forEach(u=>{h?.set(u.attributes.ESRI__ID,u);e&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(c).members.has(u.attributes.ESRI__ID)&&(this.inclusionModeDefinition?.namedTypeDefinitions.get(c).members.set(u.attributes.ESRI__ID,
{id:u.attributes.ESRI__ID}),this.memberIdTypeLookup.set(u.attributes.ESRI__ID,c))})}})().then(()=>{g(null)})}),m.push(b),this._processingCacheUpdatesLookup.get(c)?.push(b);await Promise.all(m)}removeFromLayer(b){const a=new Set,f=new Set(b.map(e=>e.id));for(const e of b)a.add(e.typeName),this.memberIdTypeLookup.delete(e.id),this.inclusionModeDefinition?.namedTypeDefinitions.forEach(n=>{n.members?.has(e.id)&&n.members.delete(e.id)});a.forEach(e=>{this.sublayerCaches.get(e)?.forEach((n,m)=>{f.has(m)&&
this.sublayerCaches.get(e)?.delete(m)})})}async retrieveDataFromService(b,a,f){const e=K.getInstance(),n=new Set,m=[];let p="",x=[];const c="relationship"===a.graphType;var d=this.inclusionModeDefinition?.namedTypeDefinitions?.get(a.objectType.name)?.useAllData,g=a.parentCompositeLayer.sublayerIdsCache.get(a.objectType.name);d=!d&&g?Array.from(g).sort():null;if(this.inclusionModeDefinition?.namedTypeDefinitions?.get(a.objectType.name)?.useAllData)this.inclusionModeDefinition?.namedTypeDefinitions?.get(a.objectType.name)?.useAllData&&
null!=b.objectIds&&(d=b.objectIds);else if(null!=b.objectIds&&d&&0<d.length){const l=b.objectIds;b.objectIds=d.filter(t=>l.includes(t))}else if(null!=b.objectIds)d=b.objectIds;else{if(this.inclusionModeDefinition?.namedTypeDefinitions.has(a.objectType.name)&&(!this.inclusionModeDefinition.namedTypeDefinitions.get(a.objectType.name)?.members||1>this.inclusionModeDefinition.namedTypeDefinitions.get(a.objectType.name)?.members?.size))return b.objectIds=[],[];b.objectIds=d}null!=b.outFields&&(g=b.outFields,
g.includes("*")?a.fields.forEach(l=>{n.add(l.name)}):g.forEach(l=>{"ESRI__ID"!==l&&l!==a.geometryFieldName&&n.add(l)}));if(null!=b.geometry){var k=b.geometry;g=a.parentCompositeLayer.dataManager.knowledgeGraph.serviceDefinition;d=g?.spatialReference;var q=g?.serviceCapabilities?.geometryCapabilities;g=q?.geometryMaxBoundingRectangleSizeX;q=q?.geometryMaxBoundingRectangleSizeY;k?.extent?.spatialReference&&!k.spatialReference?.isWGS84?(await I.initializeProjection(k.extent.spatialReference,J.WGS84),
k=I.project(k.extent,J.WGS84)):k=k.extent;if(g&&q&&d){4326!==d.wkid&&(d=new W({spatialReference:d,xmax:g,ymax:q}),d=I.project(d,J.WGS84),g=d.xmax,q=d.ymax);if(k.xmax-k.xmin>g)throw new G("knowledge-graph:layer-data-manager",`Extent x bounds should be within ${g}\u00b0 latitude, limit exceeded`);if(k.ymax-k.ymin>q)throw new G("knowledge-graph:layer-data-manager",`Extent y bounds should be within ${q}\u00b0 longitude, limit exceeded`);}if(null!=b.where&&"1\x3d1"!==b.where){const l=await N.parseWhereClause(b.where.toUpperCase(),
a.fieldsIndex);a.fields.forEach(t=>{l.fieldNames.includes(t.name)&&n.add(t.name)})}p=c?`Match ()-[n:${a.objectType.name}]->() WHERE esri.graph.ST_Intersects($param_filter_geom, n.${a.geometryFieldName}) return ID(n), id(startNode(r)), id(endNode(r))`:`Match (n:${a.objectType.name}) WHERE esri.graph.ST_Intersects($param_filter_geom, n.${a.geometryFieldName}) return ID(n)`;a.geometryFieldName&&n.add(a.geometryFieldName);n.forEach(l=>{p+=`, n.${l}`;m.push(l)});b=new C({openCypherQuery:p,bindParameters:{param_filter_geom:new T({rings:U.extentToInBoundsRings(k)})}})}else{g=
"";if(null!=b.where&&"1\x3d1"!==b.where){const t=await N.parseWhereClause(b.where,a.fieldsIndex);a.fields.forEach(h=>{t.fieldNames.includes(h.name)&&n.add(h.name)});const w=new Set(["column-reference","string","number","binary-expression"]),E=new Set("\x3d \x3c \x3c\x3d \x3c\x3e \x3e \x3e\x3d AND OR LIKE".split(" "));let v=!1;const D=h=>{if("column-reference"===h.type)return`n.${h.column}`;if("string"===h.type)return`'${h.value}'`;if("number"===h.type)return`${h.value}`;if("binary-expression"===h.type&&
w.has(h.left.type)&&w.has(h.right.type)&&E.has(h.operator))return`${D(h.left)} ${h.operator} ${D(h.right)}`;if("binary-expression"===h.type&&"LIKE"===h.operator){let u="";if("function"===h.left.type&&"column-reference"===h.left.args.value[0].type)u+=`lower(n.${h.left.args.value[0].column})`;else if("column-reference"===h.left.type)u+=`lower(n.${h.left.column})`;else return v=!0,"";u+=" CONTAINS (";if("string"===h.right.type)h=h.right.value,"%"===h.charAt(0)&&(h=h.slice(1)),"%"===h.charAt(h.length-
1)&&(h=h.slice(0,-1)),u+=`'${h.toLowerCase()}')`;else return v=!0,"";return u}v=!0;return""};g=D(t.parseTree);v&&(g="")}let l="";l=c?`Match ()-[n:${a.objectType.name}]->()`:`Match (n:${a.objectType.name})`;k=!1;d&&(k=!0,l+=" WHERE ID(n) IN $ids");g&&(l=k?l+" AND":l+" WHERE",l+=` ${g}`);l+=" return ID(n)";c&&(l+=", id(startNode(n)), id(endNode(n))");b.returnGeometry&&a.geometryFieldName&&n.add(a.geometryFieldName);n.forEach(t=>{l+=`, n.${t}`;m.push(t)});b=d?new C({openCypherQuery:l,bindParameters:{ids:d}}):
new C({openCypherQuery:l})}for(f=(await L.executeQueryStreaming(a.parentCompositeLayer.dataManager.knowledgeGraph,b,f)).resultRowsStream.getReader();;){const {done:l,value:t}=await f.read();if(l)break;b=[];for(d=0;d<t.length;d++){g=t[d];q=k=0;const w={properties:{}};w.id=g[k];k++;q++;c&&(w.originId=g[k],k++,q++,w.destinationId=g[k],k++,q++);for(;k<g.length;k++)w.properties[m[k-q]]=g[k];b.push(w)}x=x.concat(e.writeToStore(b,"ESRI__ID",a.parentCompositeLayer.dataManager.geographicLookup.get(a.objectType.name)?.name))}return x}};
z.__decorate([B.property()],r.KnowledgeGraphLayerDataManager.prototype,"knowledgeGraph",void 0);z.__decorate([B.property()],r.KnowledgeGraphLayerDataManager.prototype,"inclusionModeDefinition",void 0);z.__decorate([B.property()],r.KnowledgeGraphLayerDataManager.prototype,"entityTypeNames",void 0);z.__decorate([B.property()],r.KnowledgeGraphLayerDataManager.prototype,"relationshipTypeNames",void 0);z.__decorate([B.property()],r.KnowledgeGraphLayerDataManager.prototype,"geographicLookup",void 0);z.__decorate([B.property()],
r.KnowledgeGraphLayerDataManager.prototype,"sublayerCaches",void 0);z.__decorate([B.property()],r.KnowledgeGraphLayerDataManager.prototype,"nodeConnectionsLookup",void 0);z.__decorate([B.property()],r.KnowledgeGraphLayerDataManager.prototype,"memberIdTypeLookup",void 0);r.KnowledgeGraphLayerDataManager=z.__decorate([S.subclass("esri.rest.knowledgeGraph.knowledgeGraphLayer.KnowledgeGraphLayerDataManager")],r.KnowledgeGraphLayerDataManager);r.geohashEncodingPrecision=12;r.mockDestinationIdFieldName=
"ESRI__DESTINATION_ID";r.mockLayoutGeometryFieldName="ESRI__LAYOUT_GEOMETRY";r.mockOidFieldName="ESRI__ID";r.mockOriginIdFieldName="ESRI__ORIGIN_ID";Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});