// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
require({cache:{"esri/geometry/support/scaleUtils":function(){define(["exports","../../core/mathUtils","../../core/unitUtils"],function(h,c,d){function x(g,f){f=d.getMetersPerUnitForSR(f);return g/(f*d.inchesPerMeter*96)}h.getExtentForScale=function(g,f){const u=g.extent;g=g.width-(g.padding?g.padding.left+g.padding.right:0);f=x(f,u.spatialReference);return u.clone().expand(f*g/u.width)};h.getResolutionForScale=x;h.getResolutionInMetersForScale=function(g){return g/(96*d.inchesPerMeter)};h.getScale=
function(g,f){f=f||g.extent;g=g.width;const u=d.getMetersPerUnitForSR(f?.spatialReference);return f&&g?f.width/g*u*d.inchesPerMeter*96:0};h.getScaleForResolution=function(g,f){f=d.getMetersPerUnitForSR(f);return g*f*d.inchesPerMeter*96};h.isInScaleRange=function(g,f,u){if(f=0===f||c.floatEqualAbsolute(g,f)||g<f)f=0===u||c.floatEqualAbsolute(g,u)||g>u;return f};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})})},"esri/layers/mixins/ArcGISMapService":function(){define("exports ../../chunks/tslib.es6 ../../request ../../core/MapUtils ../../core/promiseUtils ../../core/urlUtils ../../core/Version ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/PropertyOrigin ../../geometry/Extent ../../geometry/SpatialReference ../support/arcgisLayerUrl ../support/commonProperties ../../portal/support/portalItemUtils".split(" "),
function(h,c,d,x,g,f,u,t,W,aa,fa,T,Y,z,p,D,J,E,H){h.ArcGISMapService=F=>{F=class extends F{constructor(){super(...arguments);this.capabilities=void 0;this.fullExtent=this.copyright=null;this.legendEnabled=!0;this.spatialReference=null;this.version=void 0;this._allLayersAndTablesMap=null}readCapabilities(q,k){var m=k.capabilities&&k.capabilities.split(",").map(v=>v.toLowerCase().trim());if(!m)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},
exportMap:null,exportTiles:null};var r=this.type;q="tile"!==r&&!!k.supportsDynamicLayers;const y=m.includes("query"),C=m.includes("map"),n=!!k.exportTilesAllowed,U=m.includes("tilemap");m=m.includes("data");const K="tile"!==r&&(!k.tileInfo||q),V="tile"!==r&&(!k.tileInfo||q);r="tile"!==r;var O=k.cimVersion&&u.Version.parse(k.cimVersion);const P=O?.since(1,4)??!1;O=O?.since(2,0)??!1;return{operations:{supportsExportMap:C,supportsExportTiles:n,supportsIdentify:y,supportsQuery:m,supportsTileMap:U},exportMap:C?
{supportsArcadeExpressionForLabeling:P,supportsSublayersChanges:r,supportsDynamicLayers:q,supportsSublayerVisibility:K,supportsSublayerDefinitionExpression:V,supportsCIMSymbols:O}:null,exportTiles:n?{maxExportTilesCount:+k.maxExportTilesCount}:null}}readVersion(q,k){(q=k.currentVersion)||(q=k.hasOwnProperty("capabilities")||k.hasOwnProperty("tables")?10:k.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3);return q}async fetchRelatedService(q){var k=this.portalItem;if(!k||!H.isHostedLayer(k))return null;
this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=k.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},q).then(m=>m.find(r=>"Feature Service"===r.type)??null,()=>null));k=await this._relatedFeatureServicePromise;g.throwIfAborted(q);return k?{itemId:k.id,url:k.url}:null}async fetchSublayerInfo(q,k){const {source:m}=q;if(this?.portalItem&&"tile"===this.type&&"map-layer"===m?.type&&H.isHostedLayer(this.portalItem)&&q.originIdOf("url")<z.OriginId.SERVICE){var r=
await this.fetchRelatedService(k);r&&(q.url=f.join(r.url,m.mapLayerId.toString()),q.layerItemId=r.itemId)}({url:r}=q);let y;if("data-layer"===m.type)y=(await d(r,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...k})).data;else if(r&&q.originIdOf("url")>z.OriginId.SERVICE)try{const C=await this._fetchAllLayersAndTablesFromService(r),n=J.parse(r)?.sublayer??m.mapLayerId;y=C.get(n)}catch{}else{q=q.id;"map-layer"===m?.type&&(q=m.mapLayerId);try{y=(await this.fetchAllLayersAndTables(k)).get(q)}catch{}}return y}async fetchAllLayersAndTables(q){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,
q)}async _fetchAllLayersAndTablesFromService(q,k){await this.load(k);this._allLayersAndTablesMap||(this._allLayersAndTablesMap=new Map);const m=J.parse(q);q=await x.getOrCreateMapValue(this._allLayersAndTablesMap,m?.url.path,()=>d(f.join(m?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(r=>{const y=new Map;for(const C of r.data.layers)y.set(C.id,C);return{result:y}},r=>({error:r})));g.throwIfAborted(k);if("result"in q)return q.result;throw q.error;
}};c.__decorate([t.property({readOnly:!0})],F.prototype,"capabilities",void 0);c.__decorate([T.reader("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],F.prototype,"readCapabilities",null);c.__decorate([t.property({json:{read:{source:"copyrightText"}}})],F.prototype,"copyright",void 0);c.__decorate([t.property({type:p})],F.prototype,"fullExtent",void 0);c.__decorate([t.property(E.id)],F.prototype,"id",void 0);c.__decorate([t.property({type:Boolean,
json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],F.prototype,"legendEnabled",void 0);c.__decorate([t.property(E.popupEnabled)],F.prototype,"popupEnabled",void 0);c.__decorate([t.property({type:D})],F.prototype,"spatialReference",void 0);c.__decorate([t.property({readOnly:!0})],F.prototype,"version",void 0);c.__decorate([T.reader("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],F.prototype,"readVersion",null);return F=
c.__decorate([Y.subclass("esri.layers.mixins.ArcGISMapService")],F)};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})})},"esri/layers/mixins/SublayersOwner":function(){define("exports ../../chunks/tslib.es6 ../../core/Collection ../../core/CollectionFlattener ../../core/Error ../../core/Logger ../../core/reactiveUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/utils ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/PropertyOrigin ../support/Sublayer ../support/sublayerUtils".split(" "),
function(h,c,d,x,g,f,u,t,W,aa,fa,T,Y,z,p,D){function J(q,k){const m=[],r={};if(!q)return m;q.forEach(y=>{const C=new p;C.read(y,k);r[C.id]=C;null!=y.parentLayerId&&-1!==y.parentLayerId?(y=r[y.parentLayerId],y.sublayers||(y.sublayers=[]),y.sublayers.unshift(C)):m.unshift(C)});return m}function E(q,k){q&&q.forEach(m=>{k(m);m.sublayers&&m.sublayers.length&&E(m.sublayers,k)})}const H=f.getLogger("esri.layers.TileLayer"),F=d.ofType(p);h.SublayersOwner=q=>{q=class extends q{constructor(...k){super(...k);
this.allSublayers=new x({getCollections:()=>[this.sublayers],getChildrenFunction(m){return m.sublayers}});this.sublayersSourceJSON={[z.OriginId.SERVICE]:{},[z.OriginId.PORTAL_ITEM]:{},[z.OriginId.WEB_SCENE]:{},[z.OriginId.WEB_MAP]:{}};this.addHandles(u.watch(()=>this.sublayers,(m,r)=>this._handleSublayersChange(m,r),u.sync))}destroy(){this.allSublayers.destroy()}readSublayers(k,m){if(m&&k){var {sublayersSourceJSON:r}=this,y=z.nameToId(m.origin);if(!(y<z.OriginId.SERVICE||(r[y]={context:m,visibleLayers:k.visibleLayers||
r[y].visibleLayers,layers:k.layers||r[y].layers},y>z.OriginId.SERVICE))){this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);var {sublayers:C,origin:n}=this.createSublayersForOrigin("web-document");k=T.getProperties(this);k.setDefaultOrigin(n);this._set("sublayers",new F(C));k.setDefaultOrigin("user")}}}findSublayerById(k){return this.allSublayers.find(m=>m.id===k)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(k){const m=
"web-document"===k?z.nameToId("web-map"):z.nameToId(k);let r=z.OriginId.SERVICE;k=this.sublayersSourceJSON[z.OriginId.SERVICE].layers;let y=this.sublayersSourceJSON[z.OriginId.SERVICE].context,C=null;var n=[z.OriginId.PORTAL_ITEM,z.OriginId.WEB_SCENE,z.OriginId.WEB_MAP].filter(v=>v<=m);for(var U of n)n=this.sublayersSourceJSON[U],D.isSublayerOverhaul(n.layers)&&(r=U,k=n.layers,y=n.context,n.visibleLayers&&(C={visibleLayers:n.visibleLayers,context:n.context}));U=[z.OriginId.PORTAL_ITEM,z.OriginId.WEB_SCENE,
z.OriginId.WEB_MAP].filter(v=>v>r&&v<=m);let K=null;for(var V of U){const {layers:v,visibleLayers:Z,context:ba}=this.sublayersSourceJSON[V];v&&(K={layers:v,context:ba});Z&&(C={visibleLayers:Z,context:ba})}V=J(k,y);const O=new Map,P=new Set;if(K)for(const v of K.layers)O.set(v.id,v);if(C?.visibleLayers)for(const v of C.visibleLayers)P.add(v);E(V,v=>{K&&v.read(O.get(v.id),K.context);C&&v.read({defaultVisibility:P.has(v.id)},C.context)});return{origin:z.idToName(r),sublayers:new F({items:V})}}read(k,
m){super.read(k,m);this.readSublayers(k,m)}_handleSublayersChange(k,m){m&&(m.forEach(r=>{r.parent=null;r.layer=null}),this.removeHandles("sublayers-owner"));k&&(k.forEach(r=>{r.parent=this;r.layer=this}),this.addHandles([k.on("after-add",({item:r})=>{r.parent=this;r.layer=this}),k.on("after-remove",({item:r})=>{r.parent=null;r.layer=null})],"sublayers-owner"),"tile"===this.type&&this.addHandles(k.on("before-changes",r=>{H.error(new g("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",
{layer:this}));r.preventDefault()}),"sublayers-owner"))}};c.__decorate([t.property({readOnly:!0})],q.prototype,"allSublayers",void 0);c.__decorate([t.property({readOnly:!0,type:d.ofType(p)})],q.prototype,"serviceSublayers",void 0);c.__decorate([t.property({value:null,type:F,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],q.prototype,"sublayers",void 0);c.__decorate([t.property({readOnly:!0})],q.prototype,"sublayersSourceJSON",void 0);return q=c.__decorate([Y.subclass("esri.layers.mixins.SublayersOwner")],
q)};h.forEachSublayer=E;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/Sublayer":function(){define("require ../../chunks/tslib.es6 ../../geometry ../../PopupTemplate ../../renderers/ClassBreaksRenderer ../../renderers/DictionaryRenderer ../../renderers/DotDensityRenderer ../../renderers/HeatmapRenderer ../../renderers/PieChartRenderer ../../renderers/Renderer ../../renderers/SimpleRenderer ../../renderers/UniqueValueRenderer ../../renderers/support/jsonUtils ../../renderers/support/types ../../request ../../symbols ../../core/Collection ../../core/Error ../../core/has ../../core/Identifiable ../../core/lang ../../core/Loadable ../../core/Logger ../../core/MultiOriginJSONSupport ../../core/sql ../../core/urlUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/cast ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../../core/accessorSupport/ensureType ../../core/accessorSupport/PropertyOrigin ../../core/accessorSupport/utils ../graphics/sources/support/QueryTask ./FeatureType ./Field ./FieldsIndex ./LabelClass ./labelingInfo ./LayerFloorInfo ./serviceCapabilitiesUtils ./source/DataLayerSource ./source/MapLayerSource ../../rest/support/AttachmentQuery ../../rest/support/Query ../../support/popupUtils ../../geometry/Extent ../../geometry/support/typeUtils".split(" "),
function(h,c,d,x,g,f,u,t,W,aa,fa,T,Y,z,p,D,J,E,H,F,q,k,m,r,y,C,n,U,K,V,O,P,v,Z,ba,ka,ha,l,B,G,I,M,N,S,L,X,ea,qa,la){function ma(a){return null!=a&&"esriSMS"===a.type}function na(a,b,e){a=this.originIdOf(b)>=v.nameToId(e.origin);return{ignoreOrigin:!0,allowNull:a,enabled:e?"map-image"===e.layer?.type&&(e.writeSublayerStructure||a):!1}}function oa(a,b,e){return{enabled:e?"tile"===e.layer?.type&&(e.origin&&this.originIdOf(b)>=v.nameToId(e.origin)||this._isOverridden(b)):!1}}function R(a,b,e){return{ignoreOrigin:!0,
enabled:e&&e.writeSublayerStructure||!1}}function ia(a,b,e){return{ignoreOrigin:!0,enabled:e?e.writeSublayerStructure||this.originIdOf(b)>=v.nameToId(e.origin):!1}}var ja;let ra=0;const ca=new Set;ca.add("layer");ca.add("parent");ca.add("loaded");ca.add("loadStatus");ca.add("loadError");ca.add("loadWarnings");d=ja=class extends r.MultiOriginJSONMixin(F.IdentifiableMixin(k)){constructor(a){super(a);this.capabilities=void 0;this.maxScaleRange={minScale:0,maxScale:0};this.globalIdField=this.geometryType=
this.fullExtent=this.fields=null;this.legendEnabled=!0;this.parent=this.objectIdField=null;this.popupEnabled=!0;this.typeIdField=this.title=this.sourceJSON=this.popupTemplate=null;this.type="sublayer";this._lastParsedUrl=this.types=null}async load(a){this.addResolvingPromise((async()=>{const {layer:b,url:e}=this;if(!b&&!e)throw new E("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const w=b?await b.fetchSublayerInfo(this,a):(await p(e,{responseType:"json",
query:{f:"json"},...a})).data;w&&(this.sourceJSON=w,this.read({layerDefinition:w},{origin:"service"}))})());return this}readCapabilities(a,b){b=b.layerDefinition||b;const {operations:{supportsQuery:e,supportsQueryAttachments:w},query:{supportsFormatPBF:A},data:{supportsAttachment:Q}}=M.getFeatureLayerCapabilities(b,this.url);return{exportMap:{supportsModification:!!b.canModifyLayer},operations:{supportsQuery:e,supportsQueryAttachments:w},data:{supportsAttachment:Q},query:{supportsFormatPBF:A}}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(a){this._setAndNotifyLayer("definitionExpression",
a)}get effectiveScaleRange(){const {minScale:a,maxScale:b}=this;return{minScale:a,maxScale:b}}readMaxScaleRange(a,b){b=b.layerDefinition||b;return{minScale:b.minScale??0,maxScale:b.maxScale??0}}get fieldsIndex(){return new l(this.fields||[])}set floorInfo(a){this._setAndNotifyLayer("floorInfo",a)}readGlobalIdFieldFromService(a,b){b=b.layerDefinition||b;if(b.globalIdField)return b.globalIdField;if(b.fields)for(const e of b.fields)if("esriFieldTypeGlobalID"===e.type)return e.name}get id(){const a=this._get("id");
return null==a?ra++:a}set id(a){this._get("id")!==a&&(!1===this.layer?.capabilities?.exportMap?.supportsDynamicLayers?this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"):this._set("id",a))}set labelingInfo(a){this._setAndNotifyLayer("labelingInfo",a)}writeLabelingInfo(a,b,e,w){a&&a.length&&(b.layerDefinition={drawingInfo:{labelingInfo:a.map(A=>A.write({},w))}})}set labelsVisible(a){this._setAndNotifyLayer("labelsVisible",a)}set layer(a){this._set("layer",
a);this.sublayers&&this.sublayers.forEach(b=>b.layer=a)}set listMode(a){this._set("listMode",a)}set minScale(a){this._setAndNotifyLayer("minScale",a)}readMinScale(a,b){return b.minScale||b.layerDefinition?.minScale||0}set maxScale(a){this._setAndNotifyLayer("maxScale",a)}readMaxScale(a,b){return b.maxScale||b.layerDefinition?.maxScale||0}readObjectIdFieldFromService(a,b){b=b.layerDefinition||b;if(b.objectIdField)return b.objectIdField;if(b.fields)for(const e of b.fields)if("esriFieldTypeOID"===e.type)return e.name}set opacity(a){this._setAndNotifyLayer("opacity",
a)}readOpacity(a,b){a=b.layerDefinition;return 1-.01*((null!=a?.transparency?a.transparency:a?.drawingInfo?.transparency)??0)}writeOpacity(a,b,e,w){b.layerDefinition={drawingInfo:{transparency:100-100*a}}}writeParent(a,b){b.parentLayerId=this.parent&&this.parent!==this.layer?P.ensureInteger(this.parent.id):-1}get queryTask(){if(!this.layer)return null;const {spatialReference:a}=this.layer,b="gdbVersion"in this.layer?this.layer.gdbVersion:void 0,{capabilities:e,fieldsIndex:w}=this,A=H("featurelayer-pbf")&&
e?.query.supportsFormatPBF;return new ba({url:this.url,pbfSupported:A,fieldsIndex:w,gdbVersion:b,sourceSpatialReference:a,queryAttachmentsSupported:e?.operations?.supportsQueryAttachments??!1})}set renderer(a){if(a)for(const b of a.getSymbols())if(D.isSymbol3D(b)){m.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",a)}get source(){return this._get("source")||new S.MapLayerSource({mapLayerId:this.id})}set source(a){this._setAndNotifyLayer("source",
a)}set sublayers(a){this._handleSublayersChange(a,this._get("sublayers"));this._set("sublayers",a)}castSublayers(a){return P.ensureType(J.ofType(ja),a)}writeSublayers(a,b,e){this.sublayers?.length&&(b[e]=this.sublayers.map(w=>w.id).toArray().reverse())}readTitle(a,b){return b.layerDefinition?.name??b.name}readTypeIdField(a,b){b=b.layerDefinition||b;let e=b.typeIdField;e&&b.fields&&(e=e.toLowerCase(),a=b.fields.find(w=>w.name.toLowerCase()===e))&&(e=a.name);return e}get url(){const a=this.layer?.parsedUrl??
this._lastParsedUrl;var b=this.source;if(!a)return null;this._lastParsedUrl=a;if("map-layer"===b?.type)return`${a.path}/${b.mapLayerId}`;b={layer:JSON.stringify({source:this.source})};return`${a.path}/dynamicLayer?${C.objectToQuery(b)}`}set url(a){this._overrideIfSome("url",a)}set visible(a){this._setAndNotifyLayer("visible",a)}writeVisible(a,b,e,w){b[e]=this.getAtOrigin("defaultVisibility","service")||a}clone(){const {store:a}=Z.getProperties(this),b=new ja;Z.getProperties(b).store=a.clone(ca);this.commitProperty("url");
b._lastParsedUrl=this._lastParsedUrl;return b}createPopupTemplate(a){return ea.createPopupTemplate(this,a)}createQuery(){return new X({returnGeometry:!0,where:this.definitionExpression||"1\x3d1"})}async createFeatureLayer(){if(this.hasOwnProperty("sublayers"))return null;var a=(await new Promise((w,A)=>h(["../FeatureLayer"],Q=>w(Object.freeze(Object.defineProperty({__proto__:null,default:Q},Symbol.toStringTag,{value:"Module"}))),A))).default;const {layer:b,url:e}=this;if(e&&this.originIdOf("url")>
v.OriginId.SERVICE)a=new a({url:e});else if(b?.parsedUrl){const w=b.parsedUrl;a=new a({url:w.path});w&&this.source&&("map-layer"===this.source.type?a.layerId=this.source.mapLayerId:a.dynamicDataSource=this.source)}else throw new E("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");null!=b?.refreshInterval&&(a.refreshInterval=b.refreshInterval);this.definitionExpression&&(a.definitionExpression=this.definitionExpression);this.floorInfo&&(a.floorInfo=
q.clone(this.floorInfo));this.originIdOf("labelingInfo")>v.OriginId.SERVICE&&(a.labelingInfo=q.clone(this.labelingInfo));this.originIdOf("labelsVisible")>v.OriginId.DEFAULTS&&(a.labelsVisible=this.labelsVisible);this.originIdOf("legendEnabled")>v.OriginId.DEFAULTS&&(a.legendEnabled=this.legendEnabled);this.originIdOf("visible")>v.OriginId.DEFAULTS&&(a.visible=this.visible);this.originIdOf("minScale")>v.OriginId.DEFAULTS&&(a.minScale=this.minScale);this.originIdOf("maxScale")>v.OriginId.DEFAULTS&&
(a.maxScale=this.maxScale);this.originIdOf("opacity")>v.OriginId.DEFAULTS&&(a.opacity=this.opacity);this.originIdOf("popupTemplate")>v.OriginId.DEFAULTS&&(a.popupTemplate=q.clone(this.popupTemplate));this.originIdOf("renderer")>v.OriginId.SERVICE&&(a.renderer=q.clone(this.renderer));"data-layer"===this.source?.type&&(a.dynamicDataSource=this.source.clone());this.originIdOf("title")>v.OriginId.DEFAULTS&&(a.title=this.title);"map-image"===b?.type&&b.originIdOf("customParameters")>v.OriginId.DEFAULTS&&
(a.customParameters=b.customParameters);"tile"===b?.type&&b.originIdOf("customParameters")>v.OriginId.DEFAULTS&&(a.customParameters=b.customParameters);return a}getField(a){return this.fieldsIndex.get(a)}getFeatureType(a){const {typeIdField:b,types:e}=this;if(!b||!a)return null;const w=a.attributes?a.attributes[b]:void 0;if(null==w)return null;let A=null;e?.some(Q=>{const {id:da}=Q;if(null==da)return!1;da.toString()===w.toString()&&(A=Q);return!!A});return A}getFieldDomain(a,b){return(b=this.getFeatureType(b?.feature))&&
(b=b.domains&&b.domains[a])&&"inherited"!==b.type?b:this._getLayerDomain(a)}async queryAttachments(a,b){await this.load();a=L.from(a);const e=this.capabilities;if(!e?.data?.supportsAttachment)throw new E("queryAttachments:not-supported","this layer doesn't support attachments");const {attachmentTypes:w,objectIds:A,globalIds:Q,num:da,size:sa,start:ta,where:pa}=a;if(!e?.operations?.supportsQueryAttachments&&(0<w?.length||0<Q?.length||0<sa?.length||da||ta||pa))throw new E("queryAttachments:option-not-supported",
"when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",a);if(!(A?.length||Q?.length||pa))throw new E("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",a);return this.queryTask.executeAttachmentQuery(a,b)}async queryFeatures(a=this.createQuery(),b){await this.load();if(!this.capabilities.operations.supportsQuery)throw new E("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new E("queryFeatures:not-supported",
"this layer has no url.");a=await this.queryTask.execute(a,{...b,query:{...this.layer?.customParameters,token:this.layer?.apiKey}});if(a?.features)for(const e of a.features)e.sourceLayer=this;return a}toExportImageJSON(a){const b={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}};a=y.sqlAnd(a,this.definitionExpression);null!=a&&(b.definitionExpression=a);const e=["renderer","labelingInfo","opacity","labelsVisible"].reduce((w,A)=>{w[A]=this.originIdOf(A);return w},{});
if(Object.keys(e).some(w=>e[w]>v.OriginId.SERVICE)){a=b.drawingInfo={};e.renderer>v.OriginId.SERVICE&&(a.renderer=this.renderer?this.renderer.toJSON():null);e.labelsVisible>v.OriginId.SERVICE&&(a.showLabels=this.labelsVisible);if(this.labelsVisible&&e.labelingInfo>v.OriginId.SERVICE)if(this.labelingInfo){!this.loaded&&this.labelingInfo?.some(A=>!A.labelPlacement)&&m.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' `+"and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.",
{sublayer:this});let w=this.labelingInfo;null!=this.geometryType&&(w=G.validateLabelingInfo(this.labelingInfo,la.featureGeometryTypeKebabDictionary.toJSON(this.geometryType)));a.showLabels=!0;a.labelingInfo=w.filter(A=>A.labelPlacement).map(A=>A.toJSON({origin:"service",layer:this.layer}))}else a.showLabels=!1;e.opacity>v.OriginId.SERVICE&&(a.transparency=100-100*this.opacity);this._assignDefaultSymbolColors(a.renderer)}return b}_assignDefaultSymbolColors(a){this._forEachSimpleMarkerSymbols(a,b=>
{b.color||"esriSMSX"!==b.style&&"esriSMSCross"!==b.style||(b.color=b.outline?.color?b.outline.color:[0,0,0,0])})}_forEachSimpleMarkerSymbols(a,b){if(a){const e=("uniqueValueInfos"in a?a.uniqueValueInfos:"classBreakInfos"in a?a.classBreakInfos:null)??[];for(const w of e)ma(w.symbol)&&b(w.symbol);"symbol"in a&&ma(a.symbol)&&b(a.symbol);"defaultSymbol"in a&&ma(a.defaultSymbol)&&b(a.defaultSymbol)}}_setAndNotifyLayer(a,b){const e=this.layer,w=this._get(a);let A,Q;switch(a){case "definitionExpression":case "floorInfo":A=
"supportsSublayerDefinitionExpression";break;case "minScale":case "maxScale":case "visible":A="supportsSublayerVisibility";break;case "labelingInfo":case "labelsVisible":case "opacity":case "renderer":case "source":A="supportsDynamicLayers",Q="supportsModification"}const da=Z.getProperties(this).getDefaultOrigin();if("service"!==da){if(A&&!1===this.layer?.capabilities?.exportMap?.[A]){this._logLockedError(a,`capability not available 'layer.capabilities.exportMap.${A}'`);return}if(Q&&!1===this.capabilities?.exportMap[Q]){this._logLockedError(a,
`capability not available 'capabilities.exportMap.${Q}'`);return}}"source"===a&&"not-loaded"!==this.loadStatus?this._logLockedError(a,"'source' can't be changed after calling sublayer.load()"):(this._set(a,b),"service"!==da&&w!==b&&e&&e.emit&&e.emit("sublayer-update",{propertyName:a,target:this}))}_handleSublayersChange(a,b){b&&(b.forEach(e=>{e.parent=null;e.layer=null}),this.removeAllHandles());a&&(a.forEach(e=>{e.parent=this;e.layer=this.layer}),this.addHandles([a.on("after-add",({item:e})=>{e.parent=
this;e.layer=this.layer}),a.on("after-remove",({item:e})=>{e.parent=null;e.layer=null}),a.on("before-changes",e=>{const w=this.layer?.capabilities?.exportMap?.supportsSublayersChanges;null==w||w||(m.getLogger(this).error(new E("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())})]))}_logLockedError(a,b){const {layer:e,declaredClass:w}=this;m.getLogger(w).error(new E("sublayer:locked",`Property '${String(a)}' can't be changed on Sublayer from the layer '${e?.id}'`,
{reason:b,sublayer:this,layer:e}))}_getLayerDomain(a){return(a=this.fieldsIndex.get(a))?a.domain:null}};d.test={isMapImageLayerOverridePolicy:a=>a===R||a===na,isTileImageLayerOverridePolicy:a=>a===oa};c.__decorate([n.property({readOnly:!0})],d.prototype,"capabilities",void 0);c.__decorate([K.reader("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],d.prototype,"readCapabilities",null);c.__decorate([n.property()],d.prototype,"defaultPopupTemplate",null);c.__decorate([n.property({type:String,
value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:na}}})],d.prototype,"definitionExpression",null);c.__decorate([n.property({readOnly:!0})],d.prototype,"effectiveScaleRange",null);c.__decorate([K.reader("service","maxScaleRange",["minScale","maxScale"])],d.prototype,"readMaxScaleRange",null);c.__decorate([n.property({type:[ha],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],d.prototype,"fields",void 0);c.__decorate([n.property({readOnly:!0})],
d.prototype,"fieldsIndex",null);c.__decorate([n.property({type:I,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:na},origins:{"web-scene":{read:!1,write:!1}}}})],d.prototype,"floorInfo",null);c.__decorate([n.property({type:qa,json:{read:{source:"layerDefinition.extent"}}})],d.prototype,"fullExtent",void 0);c.__decorate([n.property({type:la.featureGeometryTypeKebabDictionary.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",
read:{reader:la.featureGeometryTypeKebabDictionary.read}}}}})],d.prototype,"geometryType",void 0);c.__decorate([n.property({type:String})],d.prototype,"globalIdField",void 0);c.__decorate([K.reader("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],d.prototype,"readGlobalIdFieldFromService",null);c.__decorate([n.property({type:P.Integer,json:{write:{ignoreOrigin:!0}}})],d.prototype,"id",null);c.__decorate([n.property({value:null,type:[B],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},
write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:R}}})],d.prototype,"labelingInfo",null);c.__decorate([O.writer("labelingInfo")],d.prototype,"writeLabelingInfo",null);c.__decorate([n.property({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:R}}})],d.prototype,"labelsVisible",null);c.__decorate([n.property({value:null})],d.prototype,"layer",null);c.__decorate([n.property({type:String,
json:{write:{overridePolicy:oa}}})],d.prototype,"layerItemId",void 0);c.__decorate([n.property({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:ia}}})],d.prototype,"legendEnabled",void 0);c.__decorate([n.property({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],d.prototype,"listMode",null);c.__decorate([n.property({type:Number,value:0,json:{write:{overridePolicy:R}}})],
d.prototype,"minScale",null);c.__decorate([K.reader("minScale",["minScale","layerDefinition.minScale"])],d.prototype,"readMinScale",null);c.__decorate([n.property({type:Number,value:0,json:{write:{overridePolicy:R}}})],d.prototype,"maxScale",null);c.__decorate([K.reader("maxScale",["maxScale","layerDefinition.maxScale"])],d.prototype,"readMaxScale",null);c.__decorate([n.property({type:String})],d.prototype,"objectIdField",void 0);c.__decorate([K.reader("service","objectIdField",["layerDefinition.objectIdField",
"layerDefinition.fields"])],d.prototype,"readObjectIdFieldFromService",null);c.__decorate([n.property({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:R}}})],d.prototype,"opacity",null);c.__decorate([K.reader("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],d.prototype,"readOpacity",null);c.__decorate([O.writer("opacity")],d.prototype,"writeOpacity",null);c.__decorate([n.property({json:{type:P.Integer,write:{target:"parentLayerId",
writerEnsuresNonNull:!0,overridePolicy:R}}})],d.prototype,"parent",void 0);c.__decorate([O.writer("parent")],d.prototype,"writeParent",null);c.__decorate([n.property({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader(a,b){return!b.disablePopup}},write:{target:"disablePopup",overridePolicy:ia,writer(a,b,e){b[e]=!a}}}})],d.prototype,"popupEnabled",void 0);c.__decorate([n.property({type:x,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:ia}}})],d.prototype,"popupTemplate",
void 0);c.__decorate([n.property({readOnly:!0})],d.prototype,"queryTask",null);c.__decorate([n.property({types:z.rendererTypes,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:R},origins:{"web-scene":{types:z.webSceneRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:R}}}}})],d.prototype,"renderer",null);c.__decorate([n.property({types:{key:"type",base:null,typeMap:{"data-layer":N.DataLayerSource,"map-layer":S.MapLayerSource}},cast(a){if(a){if("mapLayerId"in
a)return P.ensureClass(S.MapLayerSource,a);if("dataSource"in a)return P.ensureClass(N.DataLayerSource,a)}return a},json:{name:"layerDefinition.source",write:{overridePolicy:R}}})],d.prototype,"source",null);c.__decorate([n.property()],d.prototype,"sourceJSON",void 0);c.__decorate([n.property({value:null,json:{type:[P.Integer],write:{target:"subLayerIds",allowNull:!0,overridePolicy:R}}})],d.prototype,"sublayers",null);c.__decorate([U.cast("sublayers")],d.prototype,"castSublayers",null);c.__decorate([O.writer("sublayers")],
d.prototype,"writeSublayers",null);c.__decorate([n.property({type:String,json:{name:"name",write:{overridePolicy:ia}}})],d.prototype,"title",void 0);c.__decorate([K.reader("service","title",["name","layerDefinition.name"])],d.prototype,"readTitle",null);c.__decorate([n.property({type:String})],d.prototype,"typeIdField",void 0);c.__decorate([n.property({json:{read:!1},readOnly:!0,value:"sublayer"})],d.prototype,"type",void 0);c.__decorate([K.reader("typeIdField",["layerDefinition.typeIdField"])],d.prototype,
"readTypeIdField",null);c.__decorate([n.property({type:[ka],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],d.prototype,"types",void 0);c.__decorate([n.property({type:String,json:{name:"layerUrl",write:{overridePolicy:oa}}})],d.prototype,"url",null);c.__decorate([n.property({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:R}}})],d.prototype,"visible",null);c.__decorate([O.writer("visible")],d.prototype,"writeVisible",
null);return d=ja=c.__decorate([V.subclass("esri.layers.support.Sublayer")],d)})},"esri/layers/support/sublayerUtils":function(){define(["exports","../../core/accessorSupport/PropertyOrigin"],function(h,c){function d(x,g){if(!x?.length||null==g)return!0;g=g.slice().reverse().flatten(({sublayers:t})=>t&&t.toArray().reverse()).map(t=>t.id).toArray();if(x.length>g.length)return!1;let f=0;const u=g.length;for(const {id:t}of x){for(;f<u&&g[f]!==t;)f++;if(f>=u)return!1}return!0}h.isExportDynamic=function(x,
g,f){return x.some(u=>{const t=u.source;return!(!t||"map-layer"===t.type&&t.mapLayerId===u.id&&(null==t.gdbVersion||t.gdbVersion===f))||u.originIdOf("renderer")>c.OriginId.SERVICE||u.originIdOf("labelingInfo")>c.OriginId.SERVICE||u.originIdOf("opacity")>c.OriginId.SERVICE||u.originIdOf("labelsVisible")>c.OriginId.SERVICE})?!0:!d(x,g)};h.isSublayerOverhaul=function(x){return!!x&&x.some(g=>null!=g.minScale||null!=g.layerDefinition?.minScale)};h.shouldWriteSublayerStructure=function(x,g,f){return g.flatten(({sublayers:u})=>
u).length!==x.length||x.some(u=>u.originIdOf("minScale")>f||u.originIdOf("maxScale")>f||u.originIdOf("renderer")>f||u.originIdOf("labelingInfo")>f||u.originIdOf("opacity")>f||u.originIdOf("labelsVisible")>f||u.originIdOf("source")>f)?!0:!d(x,g)};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/ExportImageParameters":function(){define("exports ../../chunks/tslib.es6 ../../core/Accessor ../../core/sql ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/arrayUtils ../../core/has ../../core/accessorSupport/decorators/subclass ../../geometry/support/scaleUtils ./commonProperties ./floorFilterUtils ./sublayerUtils".split(" "),
function(h,c,d,x,g,f,u,t,W,aa,fa,T,Y){const z={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};h.ExportImageParameters=class extends d{constructor(p){super(p);this.floors=null;this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const p=this.visibleSublayers.map(D=>
{const J=T.getLayerFloorFilterClause(this.floors,D);return D.toExportImageJSON(J)});return p.length?JSON.stringify(p):null}get hasDynamicLayers(){return this.layer&&Y.isExportDynamic(this.visibleSublayers,this.layer.serviceSublayers,this.layer.gdbVersion)}set layer(p){this._get("layer")!==p&&(this._set("layer",p),this.removeHandles("layer"),p&&this.addHandles([p.allSublayers.on("change",()=>this.notifyChange("visibleSublayers")),p.on("sublayer-update",D=>this.notifyChange(z[D.propertyName]))],"layer"))}get layers(){const p=
this.visibleSublayers;return p?p.length?"show:"+p.map(D=>D.id).join(","):"show:-1":null}get layerDefs(){const p=!!this.floors?.length,D=this.visibleSublayers.filter(J=>null!=J.definitionExpression||p&&null!=J.floorInfo);return D.length?JSON.stringify(D.reduce((J,E)=>{var H=T.getLayerFloorFilterClause(this.floors,E);H=x.sqlAnd(H,E.definitionExpression);null!=H&&(J[E.id]=H);return J},{})):null}get version(){this.commitProperty("layers");this.commitProperty("layerDefs");this.commitProperty("dynamicLayers");
this.commitProperty("timeExtent");const p=this.layer;p&&(p.commitProperty("dpi"),p.commitProperty("imageFormat"),p.commitProperty("imageTransparency"),p.commitProperty("gdbVersion"));return(this._get("version")||0)+1}get visibleSublayers(){const p=[];if(!this.layer)return p;var D=this.layer.sublayers;const J=this.scale,E=H=>{H.visible&&(0===J||aa.isInScaleRange(J,H.minScale,H.maxScale))&&(H.sublayers?H.sublayers.forEach(E):p.unshift(H))};D&&D.forEach(E);D=this._get("visibleSublayers");return!D||D.length!==
p.length||D.some((H,F)=>p[F]!==H)?p:D}toJSON(){var p=this.layer;p={dpi:p.dpi,format:p.imageFormat,transparent:p.imageTransparency,gdbVersion:p.gdbVersion||null};this.hasDynamicLayers&&this.dynamicLayers?p.dynamicLayers=this.dynamicLayers:p={...p,layers:this.layers,layerDefs:this.layerDefs};return p}};c.__decorate([g.property({readOnly:!0})],h.ExportImageParameters.prototype,"dynamicLayers",null);c.__decorate([g.property()],h.ExportImageParameters.prototype,"floors",void 0);c.__decorate([g.property({readOnly:!0})],
h.ExportImageParameters.prototype,"hasDynamicLayers",null);c.__decorate([g.property()],h.ExportImageParameters.prototype,"layer",null);c.__decorate([g.property({readOnly:!0})],h.ExportImageParameters.prototype,"layers",null);c.__decorate([g.property({readOnly:!0})],h.ExportImageParameters.prototype,"layerDefs",null);c.__decorate([g.property({type:Number})],h.ExportImageParameters.prototype,"scale",void 0);c.__decorate([g.property(fa.combinedViewLayerTimeExtentProperty)],h.ExportImageParameters.prototype,
"timeExtent",void 0);c.__decorate([g.property({readOnly:!0})],h.ExportImageParameters.prototype,"version",null);c.__decorate([g.property({readOnly:!0})],h.ExportImageParameters.prototype,"visibleSublayers",null);h.ExportImageParameters=c.__decorate([W.subclass("esri.layers.mixins.ExportImageParameters")],h.ExportImageParameters);Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/floorFilterUtils":function(){define(["exports"],function(h){function c(d,x){if(!d?.length)return null;
d=d.filter(g=>""!==g).map(g=>`'${g}'`);d.push("''");return`${x} IN (${d.join(",")}) OR ${x} IS NULL`}h.getFloorFilterClause=function(d){const x=d.layer;return"floorInfo"in x&&x.floorInfo?.floorField&&"floors"in d.view?c(d.view.floors,x.floorInfo.floorField):null};h.getLayerFloorFilterClause=function(d,x){return"floorInfo"in x&&x.floorInfo?.floorField?c(d,x.floorInfo.floorField):null};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/imageBitmapUtils":function(){define(["exports",
"../../core/Error","../../core/promiseUtils"],function(h,c,d){h.createBitmap=async function(x,g,f){let u;try{u=await createImageBitmap(x)}catch(t){throw new c("request:server",`Unable to load ${g}`,{url:g,error:t});}d.throwIfAborted(f);return u};h.createTileBitmap=async function(x,g,f,u,t){let W;try{W=await createImageBitmap(x)}catch(aa){throw new c("request:server",`Unable to load tile ${g}/${f}/${u}`,{error:aa,level:g,row:f,col:u});}d.throwIfAborted(t);return W};Object.defineProperty(h,Symbol.toStringTag,
{value:"Module"})})},"*noref":1}});
define("../chunks/tslib.es6 ../request ../TimeExtent ../core/Error ../core/loadAll ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../core/accessorSupport/PropertyOrigin ../geometry/Extent ../geometry/support/scaleUtils ../geometry/support/spatialReferenceUtils ./Layer ./mixins/APIKeyMixin ./mixins/ArcGISMapService ./mixins/ArcGISService ./mixins/BlendLayer ./mixins/CustomParametersMixin ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/SublayersOwner ./mixins/TemporalLayer ./support/commonProperties ./support/ExportImageParameters ./support/imageBitmapUtils ./support/Sublayer ./support/sublayerUtils ./support/versionUtils ../time/timeZoneUtils".split(" "),function(h,
c,d,x,g,f,u,t,W,aa,fa,T,Y,z,p,D,J,E,H,F,q,k,m,r,y,C,n,U,K,V,O,P,v,Z,ba,ka,ha){f=class extends m.BlendLayer(V.TemporalLayer(U.ScaleRangeLayer(K.SublayersOwner(q.ArcGISMapService(k.ArcGISService(y.OperationalLayer(C.PortalLayer(f.MultiOriginJSONMixin(n.RefreshableLayer(F.APIKeyMixin(r.CustomParametersMixin(H)))))))))))){constructor(...l){super(...l);this.dateFieldsTimeZone=null;this.datesInUnknownTimezone=!1;this.dpi=96;this.gdbVersion=null;this.imageFormat="png24";this.imageMaxWidth=this.imageMaxHeight=
2048;this.imageTransparency=!0;this.isReference=null;this.labelsVisible=!1;this.operationalLayerType="ArcGISMapServiceLayer";this.sublayers=this.sourceJSON=this.preferredTimeZone=null;this.type="map-image";this.url=null}normalizeCtorArgs(l,B){return"string"===typeof l?{url:l,...B}:l}load(l){const B=null!=l?l.signal:null;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},l).catch(u.throwIfAbortError).then(()=>this._fetchService(B)));return Promise.resolve(this)}readImageFormat(l,
B){return(l=B.supportedImageFormatTypes)&&l.includes("PNG32")?"png32":"png24"}writeSublayers(l,B,G,I){if(this.loaded&&l){l=l.slice().reverse().flatten(({sublayers:L})=>L&&L.toArray().reverse()).toArray();G=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap?.supportsDynamicLayers){const L=p.nameToId(I.origin);L===p.OriginId.PORTAL_ITEM?(G=this.createSublayersForOrigin("service").sublayers,G=ba.shouldWriteSublayerStructure(l,G,p.OriginId.SERVICE)):L>
p.OriginId.PORTAL_ITEM&&(G=this.createSublayersForOrigin("portal-item"),G=ba.shouldWriteSublayerStructure(l,G.sublayers,p.nameToId(G.origin)))}var M=[],N={writeSublayerStructure:G,...I},S=G;l.forEach(L=>{const X=L.write({},N);M.push(X);S=S||"user"===L.originOf("visible")});M.some(L=>1<Object.keys(L).length)&&(B.layers=M);S&&(B.visibleLayers=l.filter(L=>L.visible).map(L=>L.id))}}createExportImageParameters(l,B,G,I){var M=I?.pixelRatio||1;l&&10<=this.version&&(l=l.clone().shiftCentralMeridian());var N=
new P.ExportImageParameters({layer:this,floors:I?.floors,scale:J.getScale({extent:l,width:B})*M});const S=N.toJSON();N.destroy();N=!I?.rotation||10.3>this.version?{}:{rotation:-I.rotation};const L=E.srToRESTValue(l?.spatialReference);S.dpi*=M;M={};if(I?.timeExtent){const {start:X,end:ea}=I.timeExtent.toJSON();M.time=X&&ea&&X===ea?""+X:`${null==X?"null":X},${null==ea?"null":ea}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(M.time="null,null");return{bbox:l&&l.xmin+","+l.ymin+","+l.xmax+","+l.ymax,
bboxSR:L,imageSR:L,size:B+","+G,...S,...N,...M}}async fetchImage(l,B,G,I){({data:l}=await this._fetchImage("image",l,B,G,I));return l}async fetchImageBitmap(l,B,G,I){const {data:M,url:N}=await this._fetchImage("blob",l,B,G,I);return v.createBitmap(M,N,I?.signal)}async fetchRecomputedExtents(l={}){({data:l}=await c(this.url,{...l,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}}));const {extent:B,fullExtent:G,timeExtent:I}=l;l=B||G;return{fullExtent:l&&D.fromJSON(l),timeExtent:I&&
d.fromJSON({start:I[0],end:I[1]})}}loadAll(){return g.loadAll(this,l=>{l(this.allSublayers)})}serviceSupportsSpatialReference(l){return ka.serviceSupportsSpatialReference(this,l)}async _fetchImage(l,B,G,I,M){l={responseType:l,signal:M?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(B,G,I,M),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}};B=this.parsedUrl.path+"/export";if(null!=l.query?.dynamicLayers&&!this.capabilities?.exportMap?.supportsDynamicLayers)throw new x("mapimagelayer:dynamiclayer-not-supported",
`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:l.query});try{const {data:N}=await c(B,l);return{data:N,url:B}}catch(N){if(u.isAbortError(N))throw N;throw new x("mapimagelayer:image-fetch-error",`Unable to load image: ${B}`,{error:N});}}async _fetchService(l){if(this.sourceJSON)this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});else{var {data:B,ssl:G}=await c(this.parsedUrl.path,
{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:l});G&&(this.url=this.url.replace(/^http:/i,"https:"));this.sourceJSON=B;this.read(B,{origin:"service",url:this.parsedUrl})}}};h.__decorate([t.property(ha.timeZoneProperty("dateFieldsTimeReference"))],f.prototype,"dateFieldsTimeZone",void 0);h.__decorate([t.property({type:Boolean})],f.prototype,"datesInUnknownTimezone",void 0);h.__decorate([t.property()],f.prototype,"dpi",void 0);h.__decorate([t.property()],
f.prototype,"gdbVersion",void 0);h.__decorate([t.property()],f.prototype,"imageFormat",void 0);h.__decorate([T.reader("imageFormat",["supportedImageFormatTypes"])],f.prototype,"readImageFormat",null);h.__decorate([t.property({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],f.prototype,"imageMaxHeight",void 0);h.__decorate([t.property({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],f.prototype,"imageMaxWidth",void 0);h.__decorate([t.property()],f.prototype,"imageTransparency",
void 0);h.__decorate([t.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],f.prototype,"isReference",void 0);h.__decorate([t.property({json:{read:!1,write:!1}})],f.prototype,"labelsVisible",void 0);h.__decorate([t.property({type:["ArcGISMapServiceLayer"]})],f.prototype,"operationalLayerType",void 0);h.__decorate([t.property({json:{read:!1,write:!1}})],f.prototype,"popupEnabled",void 0);h.__decorate([t.property(ha.timeZoneProperty("preferredTimeReference"))],
f.prototype,"preferredTimeZone",void 0);h.__decorate([t.property()],f.prototype,"sourceJSON",void 0);h.__decorate([t.property({json:{write:{ignoreOrigin:!0}}})],f.prototype,"sublayers",void 0);h.__decorate([z.writer("sublayers",{layers:{type:[Z]},visibleLayers:{type:[W.Integer]}})],f.prototype,"writeSublayers",null);h.__decorate([t.property({type:["show","hide","hide-children"]})],f.prototype,"listMode",void 0);h.__decorate([t.property({json:{read:!1},readOnly:!0,value:"map-image"})],f.prototype,
"type",void 0);h.__decorate([t.property(O.url)],f.prototype,"url",void 0);return f=h.__decorate([Y.subclass("esri.layers.MapImageLayer")],f)});