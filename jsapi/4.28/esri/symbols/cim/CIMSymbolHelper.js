// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
define("exports ../../Color ../../core/BidiText ../../core/has ../../core/lang ../../core/Logger ../../core/RandomLCG ../../core/screenUtils ../../geometry/support/aaBoundingRect ../../geometry/support/boundsUtils ../../support/arcadeOnDemand ../Font ./CIMPlacements ./CIMSymbolDrawHelper ./enums ./utils ../../views/2d/arcade/callExpressionWithFeature ../../views/2d/engine/vectorTiles/GeometryUtils ../../views/2d/engine/webgl/definitions ../../views/2d/engine/webgl/mesh/templates/shapingUtils".split(" "),
function(z,Y,Q,Z,H,aa,ba,B,C,ca,da,ea,R,y,m,n,fa,I,M,ha){function J(a,b,c){switch(b.type){case "CIMSymbolReference":return J(a,b.symbol,c);case "CIMPointSymbol":null==c&&(c={x:0,y:0});a.drawSymbol(b,c);break;case "CIMLineSymbol":null==c&&(c={paths:[[[0,0],[10,0]]]});a.drawSymbol(b,c);break;case "CIMPolygonSymbol":null==c&&(c={rings:[[[0,0],[0,10],[10,10],[10,0],[0,0]]]});a.drawSymbol(b,c);break;case "CIMTextSymbol":a.drawSymbol(b,{x:0,y:0});break;case "CIMVectorMarker":c=new R.Placement,a.drawMarker(b,
c)}return a.envelope()}function ia(a){if(!a)return 0;switch(a.type){case "CIMMarkerPlacementAlongLineSameSize":return Math.abs(a.offset);case "CIMMarkerPlacementAlongLineRandomSize":return Math.abs(a.offset);case "CIMMarkerPlacementAtExtremities":return Math.abs(a.offset);case "CIMMarkerPlacementAtMeasuredUnits":return Math.abs(a.offset);case "CIMMarkerPlacementAtRatioPositions":return Math.abs(a.offset);case "CIMMarkerPlacementInsidePolygon":return 0;case "CIMMarkerPlacementOnLine":return Math.abs(a.offset);
case "CIMMarkerPlacementOnVertices":return Math.abs(a.offset);case "CIMMarkerPlacementPolygonCenter":return 0;default:return 0}}function ja(a){if(!a)return 0;switch(a.type){case "CIMGeometricEffectArrow":return Math.abs(.5*a.width);case "CIMGeometricEffectBuffer":return Math.abs(a.size);case "CIMGeometricEffectExtension":return Math.abs(a.length);case "CIMGeometricEffectJog":return Math.abs(.5*a.length);case "CIMGeometricEffectMove":return Math.max(Math.abs(n.getValue(a.offsetX)),Math.abs(n.getValue(a.offsetY)));
case "CIMGeometricEffectOffset":return Math.abs(a.offset);case "CIMGeometricEffectOffsetTangent":return Math.abs(a.offset);case "CIMGeometricEffectRadial":return Math.abs(a.length);case "CIMGeometricEffectRegularPolygon":return Math.abs(a.radius);case "CIMGeometricEffectRotate":return 0;case "CIMGeometricEffectScale":return 0;case "CIMGeometricEffectTaperedPolygon":return.5*Math.max(Math.abs(a.fromWidth),Math.abs(a.toWidth));case "CIMGeometricEffectWave":return Math.abs(a.amplitude);case "CIMGeometricEffectDonut":return Math.abs(a.width);
default:return 0}}function N(a){if(!a)return 0;let b=0;for(const c of a)b+=ja(c);return b}function ka(a,b,c){a.effects&&null==b.geometryEngine&&(b.geometryEnginePromise?c.push(b.geometryEnginePromise):n.isGeometryEngineRequired(a.effects)&&(b.geometryEnginePromise=n.importGeometryEngine(),c.push(b.geometryEnginePromise),b.geometryEnginePromise.then(d=>b.geometryEngine=d)))}function S(a){if(!a)return null;let b=null;const {cap:c,color:d,join:g,miterLimit:e,style:h,width:f}=a;"solid"!==h&&"none"!==
h&&"esriSLSSolid"!==h&&"esriSLSNull"!==h&&(b=[{type:"CIMGeometricEffectDashes",dashTemplate:K(h,c),lineDashEnding:"NoConstraint",scaleDash:!0,offsetAlongLine:null}]);return{type:"CIMSolidStroke",color:"esriSLSNull"!==h&&"none"!==h?r(d):[0,0,0,0],capStyle:T(c),joinStyle:U(g),miterLimit:e,width:f,effects:b}}const V=Math.PI,la=V/2,W=Math.PI/180,u=96/72,L=aa.getLogger("esri.symbols.cim.CIMSymbolHelper");class ma{getSymbolInflateSize(a,b,c,d,g){a||(a=[0,0,0,0]);return b?this._getInflateSize(a,b,c,d,g):
a}static safeSize(a){const b=Math.max(Math.abs(a[0]),Math.abs(a[2]));a=Math.max(Math.abs(a[1]),Math.abs(a[3]));return Math.sqrt(b*b+a*a)}_vectorMarkerBounds(a,b,c,d){let g=!0;const e=C.create();if(b?.markerGraphics)for(const h of b.markerGraphics)b=[0,0,0,0],h.geometry&&(ca.getBoundsXY(e,h.geometry),b[0]=0,b[1]=0,b[2]=0,b[3]=0,this.getSymbolInflateSize(b,h.symbol,c,0,d),e[0]+=b[0],e[1]+=b[1],e[2]+=b[2],e[3]+=b[3],g?(a[0]=e[0],a[1]=e[1],a[2]=e[2],a[3]=e[3],g=!1):(a[0]=Math.min(a[0],e[0]),a[1]=Math.min(a[1],
e[1]),a[2]=Math.max(a[2],e[2]),a[3]=Math.max(a[3],e[3])));return a}_getInflateSize(a,b,c,d,g){return void 0!==b.symbolLayers?(a=this._getLayersInflateSize(a,b.symbolLayers,c,d,g),b=N(b.effects),0<b&&(a[0]-=b,a[1]-=b,a[2]+=b,a[3]+=b),a):this._getTextInflatedSize(a,b,g)}_getLayersInflateSize(a,b,c,d,g){let e=!0;if(!b)return a;for(const t of b)if(t){b=[0,0,0,0];switch(t.type){case "CIMSolidStroke":case "CIMPictureStroke":case "CIMGradientStroke":var h=t,f=h.width;null!=f&&(f=h.capStyle===m.LineCapStyle.Square||
h.joinStyle===m.LineJoinStyle.Miter?f/1.4142135623730951:f/2,b[0]=-f,b[1]=-f,b[2]=f,b[3]=f);break;case "CIMCharacterMarker":case "CIMVectorMarker":case "CIMPictureMarker":h=t;if("CIMVectorMarker"===t.type){if(f=t,b=this._vectorMarkerBounds(b,f,c,g),f.frame){var k=(f.frame.xmin+f.frame.xmax)/2,l=(f.frame.ymin+f.frame.ymax)/2;b[0]-=k;b[1]-=l;b[2]-=k;b[3]-=l;null!=f.size&&(f=f.size/(f.frame.ymax-f.frame.ymin),b[0]*=f,b[1]*=f,b[2]*=f,b[3]*=f)}}else"CIMPictureMarker"===t.type?(f=t,l=c.getResource(f.url),
k=1,null!=l&&l.height&&(k=l.width/l.height),null!=h.size&&(b=h.size/2,f=h.size*k*f.scaleX/2,b=[-f,-b,f,b])):null!=h.size&&(b=h.size/2,b=[-b,-b,b,b]);h.anchorPoint&&("Absolute"===h.anchorPointUnits?(f=h.anchorPoint.x,k=h.anchorPoint.y):(f=h.anchorPoint.x*(b[2]-b[0]),k=h.anchorPoint.y*(b[3]-b[1])),b[0]-=f,b[1]-=k,b[2]-=f,b[3]-=k);f=n.getValue(h.rotation);h.rotateClockwise&&(f=-f);d&&(f-=d);f&&(k=W*f,f=Math.cos(k),k=Math.sin(k),l=C.create([I.cInfinity,I.cInfinity,-I.cInfinity,-I.cInfinity]),C.expandPointInPlace(l,
[b[0]*f-b[1]*k,b[0]*k+b[1]*f]),C.expandPointInPlace(l,[b[0]*f-b[3]*k,b[0]*k+b[3]*f]),C.expandPointInPlace(l,[b[2]*f-b[1]*k,b[2]*k+b[1]*f]),C.expandPointInPlace(l,[b[2]*f-b[3]*k,b[2]*k+b[3]*f]),b=l);f=n.getValue(h.offsetX);k=n.getValue(h.offsetY);if(d){var p=W*d;l=Math.cos(p);p=Math.sin(p);const w=f*p+k*l;f=f*l-k*p;k=w}b[0]+=f;b[1]+=k;b[2]+=f;b[3]+=k;h=ia(h.markerPlacement);0<h&&(b[0]-=h,b[1]-=h,b[2]+=h,b[3]+=h)}h=N(t.effects);0<h&&(b[0]-=h,b[1]-=h,b[2]+=h,b[3]+=h);e?(a[0]=b[0],a[1]=b[1],a[2]=b[2],
a[3]=b[3],e=!1):(a[0]=Math.min(a[0],b[0]),a[1]=Math.min(a[1],b[1]),a[2]=Math.max(a[2],b[2]),a[3]=Math.max(a[3],b[3]))}return a}_getTextInflatedSize(a,b,c){const d=b.height??y.defaultTextHeight;a[0]=-d/2;a[1]=-d/2;a[2]=d/2;a[3]=d/2;if(!c)return a;c=c.get(b);if(!c)return a;const {text:g,mosaicItem:e}=c;if(!e?.glyphMosaicItems?.length)return a;const {lineGapType:h,lineGap:f}=b;c=h?y.lineGapType2LineHeight(h,f??0,d):0;const k=Q.bidiText(g)[1],l="CIMBackgroundCallout"===b.callout?.type;b=ha.shapeGlyphs(e.glyphMosaicItems,
k,{scale:d/M.glyphSize,angle:n.getValue(b.angle),xOffset:n.getValue(b.offsetX),yOffset:n.getValue(b.offsetY),hAlign:y.horizontalAlignment2HAlign(b.horizontalAlignment),vAlign:y.verticalAlignment2VAlign(b.verticalAlignment),maxLineWidth:512,lineHeight:M.magicLabelLineHeight*Math.max(.25,Math.min(c||1,4)),decoration:b.font.decoration||"none",isCIM:!0,hasBackground:l}).boundsT;a[0]=b.x-b.halfWidth;a[1]=-b.y-b.halfHeight;a[2]=b.x+b.halfWidth;a[3]=-b.y+b.halfHeight;return a}}class v{static getEnvelope(a,
b,c){if(!a)return null;c=new y.EnvDrawHelper(c);if(Array.isArray(a)){let d;for(const g of a)d?d.union(J(c,g,b)):d=J(c,g,b);return d}return J(c,a,b)}static getTextureAnchor(a,b){a=this.getEnvelope(a,null,b);if(!a)return[0,0,0];b=a.height*u+2;return[-((a.x+.5*a.width)*u)/(a.width*u+2),-((a.y+.5*a.height)*u)/b,b]}static rasterize(a,b,c,d,g=!0){var e=c||this.getEnvelope(b,null,d);if(!e)return[null,0,0,0,0];const h=(e.x+.5*e.width)*u,f=(e.y+.5*e.height)*u;a.width=e.width*u;a.height=e.height*u;c||(a.width+=
2,a.height+=2);c=a.getContext("2d");e=y.Transformation.createScale(u,-u);e.translate(.5*a.width-h,.5*a.height+f);d=new y.CanvasDrawHelper(c,d,e);switch(b.type){case "CIMPointSymbol":d.drawSymbol(b,{type:"point",x:0,y:0});break;case "CIMVectorMarker":e=new R.Placement,d.drawMarker(b,e)}b=c.getImageData(0,0,a.width,a.height);b=new Uint8Array(b.data);if(g)for(d=0;d<b.length;d+=4)g=b[d+3]/255,b[d]*=g,b[d+1]*=g,b[d+2]*=g;return[b,a.width,a.height,-h/a.width,-f/a.height]}static fromTextSymbol(a){const {angle:b,
color:c,font:d,haloColor:g,haloSize:e,horizontalAlignment:h,kerning:f,text:k,verticalAlignment:l,xoffset:p,yoffset:t,backgroundColor:w,borderLineColor:D,borderLineSize:E}=a;let F,O,X;if(d){var P=d.family;var A=d.style;var x=d.weight;F=d.size;O=d.decoration}a=!1;k&&(a=Q.bidiText(k)[1]);if(w||E)X={type:"CIMBackgroundCallout",margin:null,backgroundSymbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidFill",color:r(w)},{type:"CIMSolidStroke",color:r(D),width:E}]},accentBarSymbol:null,gap:null,
leaderLineSymbol:null,lineStyle:null};var na=m.BlockProgression.BTT,oa=m.FontEffects.Normal,pa=m.FontEncoding.Unicode;P=P||"Arial";b:{if(x)switch(x.toLowerCase()){case "bold":case "bolder":x="bold";break b}x=""}b:{if(A)switch(A.toLowerCase()){case "italic":case "oblique":A="italic";break b}A=""}x=x&&A?`${x}-${A}`:`${x}${A}`;return{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,anchorPointUnits:"Relative",dominantSizeAxis3D:"Y",size:10,billboardMode3D:"FaceNearPlane",frame:{xmin:-5,
ymin:-5,xmax:5,ymax:5},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{x:0,y:0},symbol:{type:"CIMTextSymbol",angle:b,blockProgression:na,depth3D:1,extrapolateBaselines:!0,fontEffects:oa,fontEncoding:pa,fontFamilyName:P,fontStyleName:x,fontType:m.FontType.Unspecified,haloSize:e,height:F,hinting:m.GlyphHinting.Default,horizontalAlignment:qa(h??"center"),kerning:f,letterWidth:100,ligatures:!0,lineGapType:"Multiple",offsetX:n.getValue(p),offsetY:n.getValue(t),strikethrough:"line-through"===O,underline:"underline"===
O,symbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidFill",enable:!0,color:r(c)}]},haloSymbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidFill",enable:!0,color:r(g)}]},shadowColor:[0,0,0,255],shadowOffsetX:1,shadowOffsetY:1,textCase:"Normal",textDirection:a?m.TextReadingDirection.RTL:m.TextReadingDirection.LTR,verticalAlignment:ra(l??"baseline"),verticalGlyphOrientation:m.VerticalGlyphOrientation.Right,wordSpacing:100,billboardMode3D:m.BillBoardMode.FaceNearPlane,callout:X},textString:k}],
scaleSymbolsProportionally:!0,respectFrame:!0}],scaleX:1,angleAlignment:"Display"}}static fromPictureFillSymbol(a){const {height:b,outline:c,width:d,xoffset:g,xscale:e,yoffset:h,yscale:f}=a,k=[],l={type:"CIMPolygonSymbol",symbolLayers:k};if(c){var p=S(c);p&&k.push(p)}p=a.url;"esriPFS"===a.type&&a.imageData&&(p=a.imageData);a="angle"in a?a.angle??0:0;k.push({type:"CIMPictureFill",invertBackfaceTexture:!1,scaleX:1,textureFilter:m.TextureFilter.Picture,tintColor:null,url:p,height:(b??0)*(f||1),width:(d??
0)*(e||1),offsetX:n.getValue(g),offsetY:n.getValue(h),rotation:n.getValue(-a),colorSubstitutions:null});return l}static fromSimpleFillSymbol(a){const {color:b,style:c,outline:d}=a;a=[];const g={type:"CIMPolygonSymbol",symbolLayers:a};if(d){var e=S(d);e&&a.push(e)}if(c&&"solid"!==c&&"none"!==c&&"esriSFSSolid"!==c&&"esriSFSNull"!==c){e={type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",color:r(b),capStyle:m.LineCapStyle.Butt,joinStyle:m.LineJoinStyle.Miter,width:.75}]};let h=0;const f=B.px2pt("vertical"===
c||"horizontal"===c||"cross"===c||"esriSFSCross"===c||"esriSFSVertical"===c||"esriSFSHorizontal"===c?8:10);switch(c){case "vertical":case "esriSFSVertical":h=90;break;case "forward-diagonal":case "esriSFSForwardDiagonal":h=-45;break;case "backward-diagonal":case "esriSFSBackwardDiagonal":h=45;break;case "cross":case "esriSFSCross":h=0;break;case "diagonal-cross":case "esriSFSDiagonalCross":h=-45}a.push({type:"CIMHatchFill",lineSymbol:e,offsetX:0,offsetY:0,rotation:h,separation:f});"cross"===c||"esriSFSCross"===
c?a.push({type:"CIMHatchFill",lineSymbol:H.clone(e),offsetX:0,offsetY:0,rotation:90,separation:f}):("diagonal-cross"===c||"esriSFSDiagonalCross"===c)&&a.push({type:"CIMHatchFill",lineSymbol:H.clone(e),offsetX:0,offsetY:0,rotation:45,separation:f})}else!c||"solid"!==c&&"esriSFSSolid"!==c||a.push({type:"CIMSolidFill",enable:!0,color:r(b)});return g}static fromSimpleLineSymbol(a){const {cap:b,color:c,join:d,marker:g,miterLimit:e,style:h,width:f}=a;a=null;"solid"!==h&&"none"!==h&&"esriSLSSolid"!==h&&
"esriSLSNull"!==h&&(a=[{type:"CIMGeometricEffectDashes",dashTemplate:K(h,b),lineDashEnding:"NoConstraint",scaleDash:!0,offsetAlongLine:null}]);const k=[];if(g){let l;switch(g.placement){case "begin-end":l=m.ExtremityPlacement.Both;break;case "begin":l=m.ExtremityPlacement.JustBegin;break;case "end":l=m.ExtremityPlacement.JustEnd;break;default:l=m.ExtremityPlacement.None}const p=v.fromSimpleMarker(g,f,c).symbolLayers[0];p.markerPlacement={type:"CIMMarkerPlacementAtExtremities",angleToLine:!0,offset:0,
extremityPlacement:l,offsetAlongLine:0};k.push(p)}k.push({type:"CIMSolidStroke",color:"none"!==h&&"esriSLSNull"!==h?r(c):[0,0,0,0],capStyle:T(b),joinStyle:U(d),miterLimit:e,width:f,effects:a});return{type:"CIMLineSymbol",symbolLayers:k}}static fromPictureMarker(a){const {angle:b,height:c,width:d,xoffset:g,yoffset:e}=a;let h=a.url;"esriPMS"===a.type&&a.imageData&&(h=a.imageData);return{type:"CIMPointSymbol",symbolLayers:[{type:"CIMPictureMarker",invertBackfaceTexture:!1,scaleX:1,textureFilter:m.TextureFilter.Picture,
tintColor:null,url:h,size:c,width:d,offsetX:n.getValue(g),offsetY:n.getValue(e),rotation:n.getValue(-b)}]}}static fromSimpleMarker(a,b,c){var {style:d}=a;c=a.color??c;if("path"===d){b=[];if("outline"in a&&a.outline){var g=a.outline;b.push({type:"CIMSolidStroke",enable:!0,width:B.pt2px(Math.round(B.px2pt(g.width))),color:r(g.color),path:a.path})}b.push({type:"CIMSolidFill",enable:!0,color:r(c),path:a.path});const [f,k]=G("square");return{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",
enable:!0,rotation:n.getValue(-a.angle),size:n.getValue(a.size||6),offsetX:n.getValue(a.xoffset),offsetY:n.getValue(a.yoffset),frame:f,markerGraphics:[{type:"CIMMarkerGraphic",geometry:k,symbol:{type:"CIMPolygonSymbol",symbolLayers:b}}]}]}}g=[];let e;if("outline"in a&&a.outline&&"none"!==a.outline.style&&"esriSLSNull"!==a.outline.style){const f=a.outline,k="solid"!==f.style&&"esriSLSSolid"!==f.style;[d,e]=k?G(d,a.size):G(d);var h="cross"!==a.style&&"x"!==a.style||"dot"===a?.outline.style||"short-dot"===
a?.outline.style?m.LineDashEnding.HalfGap:m.LineDashEnding.FullPattern;h=k?[{type:"CIMGeometricEffectAddControlPoints"},{type:"CIMGeometricEffectDashes",dashTemplate:K(f.style,null).map(l=>f.width&&0<f.width?l*f.width:l),lineDashEnding:h,controlPointEnding:m.LineDashEnding.FullPattern}]:void 0;g.push({type:"CIMSolidStroke",capStyle:k?m.LineCapStyle.Round:m.LineCapStyle.Butt,enable:!0,width:null!=f.width&&.667<f.width?B.pt2px(Math.round(B.px2pt(f.width))):f.width,color:r(f.color),effects:h})}else!b||
"line-marker"!==a.type||"cross"!==a.style&&"x"!==a.style?[d,e]=G(d):([d,e]=G(d),g.push({type:"CIMSolidStroke",enable:!0,width:b,color:r(c)}));g.push({type:"CIMSolidFill",enable:!0,color:r(c)});c={type:"CIMPolygonSymbol",symbolLayers:g};return{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,rotation:n.getValue(-a.angle),size:n.getValue(a.size||6*b),offsetX:n.getValue(a.xoffset),offsetY:n.getValue(a.yoffset),frame:d,markerGraphics:[{type:"CIMMarkerGraphic",geometry:e,symbol:c}]}]}}static fromCIMHatchFill(a,
b){const c=b*(a.separation??y.defaultHatchFillSeparation),d=c/2;a=H.clone(a.lineSymbol);a.symbolLayers?.forEach(e=>{switch(e.type){case "CIMSolidStroke":null!=e.width&&(e.width*=b);e.effects?.forEach(h=>{"CIMGeometricEffectDashes"===h.type&&(h.dashTemplate=h.dashTemplate.map(f=>f*b))});break;case "CIMVectorMarker":null!=e.size&&(e.size*=b),e=e.markerPlacement,null!=e&&"placementTemplate"in e&&(e.placementTemplate=e.placementTemplate.map(h=>h*b))}});for(var g=this._getLineSymbolPeriod(a)||4;4>g;)g*=
2;g/=2;return{type:"CIMVectorMarker",frame:{xmin:-g,xmax:g,ymin:-d,ymax:d},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{paths:[[[-g,0],[g,0]]]},symbol:a}],size:c}}static fetchResources(a,b,c){if(a&&b)switch(a.type){case "CIMPointSymbol":case "CIMLineSymbol":case "CIMPolygonSymbol":if(a=a.symbolLayers)for(const d of a)switch(ka(d,b,c),d.type){case "CIMPictureFill":case "CIMHatchFill":case "CIMGradientFill":case "CIMPictureStroke":case "CIMGradientStroke":case "CIMCharacterMarker":case "CIMPictureMarker":"url"in
d&&d.url&&c.push(b.fetchResource(d.url,null));break;case "CIMVectorMarker":if(a=d.markerGraphics)for(const g of a)g&&(a=g.symbol)&&v.fetchResources(a,b,c)}}}static fetchFonts(a,b,c){if(a&&b)if("symbolLayers"in a&&a.symbolLayers)for(const e of a.symbolLayers){if("CIMVectorMarker"===e.type&&e.markerGraphics)for(const h of e.markerGraphics)h?.symbol&&v.fetchFonts(h.symbol,b,c)}else if("CIMTextSymbol"===a.type){const {fontFamilyName:e,fontStyleName:h}=a;if(e&&"calcitewebcoreicons"!==e.toLowerCase()){var {style:d,
weight:g}=n.fromCIMFontStyle(h);a=n.fromCIMFontDecoration(a);a=new ea({family:e,style:d,weight:g,decoration:a});c.push(b.loadFont(a).catch(()=>{L.error(`Unsupported font ${e} in CIM symbol`)}))}}}static _getLineSymbolPeriod(a){if(a){const b=this._getEffectsRepeat(a.effects);if(b)return b;if(a.symbolLayers)for(const c of a.symbolLayers)if(c){if(a=this._getEffectsRepeat(c.effects))return a;switch(c.type){case "CIMCharacterMarker":case "CIMPictureMarker":case "CIMVectorMarker":case "CIMObjectMarker3D":case "CIMglTFMarker3D":if(a=
this._getPlacementRepeat(c.markerPlacement))return a}}}return 0}static _getEffectsRepeat(a){if(a)for(var b of a)if(b)switch(b.type){case "CIMGeometricEffectDashes":if((a=b.dashTemplate)&&a.length){b=0;for(const c of a)b+=c;a.length&1&&(b*=2);return b}break;case "CIMGeometricEffectWave":return b.period;default:L.error(`unsupported geometric effect type ${b.type}`)}return 0}static _getPlacementRepeat(a){if(a)switch(a.type){case "CIMMarkerPlacementAlongLineSameSize":case "CIMMarkerPlacementAlongLineRandomSize":case "CIMMarkerPlacementAlongLineVariableSize":if((a=
a.placementTemplate)&&a.length){let b=0;for(const c of a)b+=+c;a.length&1&&(b*=2);return b}}return 0}static fromCIMInsidePolygon(a){var b=a.markerPlacement;const c={...a,markerPlacement:null,anchorPoint:null};a=Math.abs(b.stepX);const d=Math.abs(b.stepY);var g=(b.randomness??100)/100;let e,h;if("Random"===b.gridType){var f=B.px2pt(M.randomInsidePolygonTextureSize);const k=Math.max(Math.floor(f/a),1),l=Math.max(Math.floor(f/d),1);f=k*a/2;e=l*d/2;h=2*e;b=new ba(b.seed);const p=g*a/1.5,t=g*d/1.5;g=[];
for(let w=0;w<k;w++)for(let D=0;D<l;D++){const E=w*a-f+p*(.5-b.getFloat()),F=D*d-e+t*(.5-b.getFloat());g.push({x:E,y:F});0===w&&g.push({x:E+2*f,y:F});0===D&&g.push({x:E,y:F+2*e})}}else!0===b.shiftOddRows?(f=a/2,e=d,h=2*d,g=[{x:-f,y:0},{x:f,y:0},{x:0,y:e},{x:0,y:-e}]):(f=a/2,e=d/2,h=d,g=[{x:-a,y:0},{x:0,y:-d},{x:-a,y:-d},{x:0,y:0},{x:a,y:0},{x:0,y:d},{x:a,y:d},{x:-a,y:d},{x:a,y:-d}]);a=g.map(k=>({type:"CIMMarkerGraphic",geometry:k,symbol:{type:"CIMPointSymbol",symbolLayers:[c]}}));return{type:"CIMVectorMarker",
frame:{xmin:-f,xmax:f,ymin:-e,ymax:e},markerGraphics:a,size:h}}static getSize(a){if(a)switch(a.type){case "CIMTextSymbol":return a.height;case "CIMPointSymbol":var b=0;if(a.symbolLayers)for(var c of a.symbolLayers)if(c)switch(c.type){case "CIMCharacterMarker":case "CIMPictureMarker":case "CIMVectorMarker":case "CIMObjectMarker3D":case "CIMglTFMarker3D":a=c.size,null!=a&&a>b&&(b=a)}return b;case "CIMLineSymbol":case "CIMPolygonSymbol":c=0;if(a.symbolLayers)for(b of a.symbolLayers)if(b)switch(b.type){case "CIMSolidStroke":case "CIMPictureStroke":case "CIMGradientStroke":a=
b.width;null!=a&&a>c&&(c=a);break;case "CIMCharacterMarker":case "CIMPictureMarker":case "CIMVectorMarker":case "CIMObjectMarker3D":case "CIMglTFMarker3D":b.markerPlacement&&n.isCIMMarkerStrokePlacement(b.markerPlacement)&&(a=b.size,null!=a&&a>c&&(c=a))}return c}}static getMarkerScaleRatio(a){if(a)switch(a.type){case "CIMVectorMarker":if(!1!==a.scaleSymbolsProportionally&&a.frame&&null!=a.size)return a.size/(a.frame.ymax-a.frame.ymin)}return 1}}class q{static findApplicableOverrides(a,b,c){if(a&&
b){if(a.primitiveName){let d=!1;for(const g of c)if(g.primitiveName===a.primitiveName){d=!0;break}if(!d)for(const g of b)g.primitiveName===a.primitiveName&&c.push(g)}switch(a.type){case "CIMPointSymbol":case "CIMLineSymbol":case "CIMPolygonSymbol":if(a.effects)for(const d of a.effects)q.findApplicableOverrides(d,b,c);if(a.symbolLayers)for(const d of a.symbolLayers)q.findApplicableOverrides(d,b,c);break;case "CIMSolidStroke":case "CIMPictureStroke":case "CIMGradientStroke":case "CIMSolidFill":case "CIMPictureFill":case "CIMHatchFill":case "CIMGradientFill":case "CIMVectorMarker":case "CIMCharacterMarker":case "CIMPictureMarker":if(a.effects)for(const d of a.effects)q.findApplicableOverrides(d,
b,c);a.markerPlacement&&q.findApplicableOverrides(a.markerPlacement,b,c);if("CIMVectorMarker"===a.type){if(a.markerGraphics)for(const d of a.markerGraphics)q.findApplicableOverrides(d,b,c),q.findApplicableOverrides(d.symbol,b,c)}else"CIMCharacterMarker"===a.type?q.findApplicableOverrides(a.symbol,b,c):"CIMHatchFill"===a.type?q.findApplicableOverrides(a.lineSymbol,b,c):"CIMPictureMarker"===a.type&&q.findApplicableOverrides(a.animatedSymbolProperties,b,c)}}}static findEffectOverrides(a,b,c){if(b&&a){var d=
a.length;for(let g=0;g<d;g++){const e=a[g]?.primitiveName;if(e){let h=!1;for(const f of c)if(f.primitiveName===e){h=!0;break}if(!h)for(const f of b)f.primitiveName===e&&c.push(f)}}}}static async resolveSymbolOverrides(a,b,c,d,g,e,h){if(!a?.symbol)return null;let {symbol:f,primitiveOverrides:k}=a;a=!!k;if(!a&&!d)return f;f=H.clone(f);let l=!0;b||(b={attributes:{}},l=!1);a&&(l||(k=k.filter(p=>!p.valueExpressionInfo?.expression.includes("$feature"))),h||(k=k.filter(p=>!p.valueExpressionInfo?.expression.includes("$view"))),
0<k.length&&(a=n.attributesToFields(b.attributes),await q.evaluateOverrides(k,b,{spatialReference:c,fields:a,geometryType:g},e,h)),q.applyOverrides(f,k));d&&q.applyDictionaryTextOverrides(f,b,d);return f}static async evaluateOverrides(a,b,c,d,g){if(b){var e;for(const h of a)(a=h.valueExpressionInfo)&&c?.geometryType&&(e||(e=[]),h.value=void 0,a=da.createRendererExpression(a.expression,c.spatialReference,c.fields).then(f=>{h.value=fa(f,b,{$view:g},c.geometryType,d)}),e.push(a));void 0!==e&&0<e.length&&
await Promise.all(e)}}static applyDictionaryTextOverrides(a,b,c,d="Normal"){if(a?.type)switch(a.type){case "CIMPointSymbol":case "CIMLineSymbol":case "CIMPolygonSymbol":case "CIMTextSymbol":var g=a.symbolLayers;if(!g)break;for(var e of g)e&&"CIMVectorMarker"===e.type&&q.applyDictionaryTextOverrides(e,b,c,"CIMTextSymbol"===a.type?a.textCase:d);break;case "CIMVectorMarker":a=a.markerGraphics;if(!a)break;for(g of a)g&&q.applyDictionaryTextOverrides(g,b,c);break;case "CIMMarkerGraphic":(e=a.textString)&&
e.includes("[")&&(c=n.analyzeTextParts(e,c),a.textString=n.assignTextValuesFromFeature(b,c,d))}}static applyOverrides(a,b,c,d){if(a.primitiveName)for(const e of b)if(e.primitiveName===a.primitiveName){var g=(g=e.propertyName)?g.charAt(0).toLowerCase()+g.substr(1):g;d&&d.push({cim:a,nocapPropertyName:g,value:a[g]});e.expression&&(e.value=q.toValue(e.propertyName,e.expression));if(c){let h=!1;for(const f of c)f.primitiveName===a.primitiveName&&(h=!0);h||c.push(e)}null!=e.value&&(a[g]=e.value)}switch(a.type){case "CIMPointSymbol":case "CIMLineSymbol":case "CIMPolygonSymbol":if(a.effects)for(const e of a.effects)q.applyOverrides(e,
b,c,d);if(a.symbolLayers)for(const e of a.symbolLayers)q.applyOverrides(e,b,c,d);break;case "CIMSolidStroke":case "CIMSolidFill":case "CIMVectorMarker":if(a.effects)for(const e of a.effects)q.applyOverrides(e,b,c,d);if("CIMVectorMarker"===a.type&&a.markerGraphics)for(const e of a.markerGraphics)q.applyOverrides(e,b,c,d),q.applyOverrides(e.symbol,b,c,d)}}static restoreOverrides(a){for(const b of a)b.cim[b.nocapPropertyName]=b.value}static buildOverrideKey(a){let b="";for(const c of a)void 0!==c.value&&
(b+=`${c.primitiveName}${c.propertyName}${JSON.stringify(c.value)}`);return b}static toValue(a,b){return"DashTemplate"===a?b.split(" ").map(c=>Number(c)):"Color"===a?(a=(new Y(b)).toRgba(),a[3]*=255,a):b}}const T=a=>{if(!a)return m.LineCapStyle.Butt;switch(a){case "butt":return m.LineCapStyle.Butt;case "square":return m.LineCapStyle.Square;case "round":return m.LineCapStyle.Round}},U=a=>{if(!a)return m.LineJoinStyle.Miter;switch(a){case "miter":return m.LineJoinStyle.Miter;case "round":return m.LineJoinStyle.Round;
case "bevel":return m.LineJoinStyle.Bevel}},qa=a=>{if(null==a)return"Center";switch(a){case "left":return"Left";case "right":return"Right";case "center":return"Center"}},ra=a=>{if(null==a)return"Center";switch(a){case "baseline":return"Baseline";case "top":return"Top";case "middle":return"Center";case "bottom":return"Bottom"}},r=a=>{if(!a)return[0,0,0,0];const {r:b,g:c,b:d,a:g}=a;return[b,c,d,255*g]},K=(a,b)=>{const c=Z("safari")?.001:0;b="butt"===b;switch(a){case "dash":case "esriSLSDash":return b?
[4,3]:[3,4];case "dash-dot":case "esriSLSDashDot":return b?[4,3,1,3]:[3,4,c,4];case "dot":case "esriSLSDot":return b?[1,3]:[c,4];case "long-dash":case "esriSLSLongDash":return b?[8,3]:[7,4];case "long-dash-dot":case "esriSLSLongDashDot":return b?[8,3,1,3]:[7,4,c,4];case "long-dash-dot-dot":case "esriSLSDashDotDot":return b?[8,3,1,3,1,3]:[7,4,c,4,c,4];case "short-dash":case "esriSLSShortDash":return b?[4,1]:[3,2];case "short-dash-dot":case "esriSLSShortDashDot":return b?[4,1,1,1]:[3,2,c,2];case "short-dash-dot-dot":case "esriSLSShortDashDotDot":return b?
[4,1,1,1,1,1]:[3,2,c,2,c,2];case "short-dot":case "esriSLSShortDot":return b?[1,1]:[c,2];case "solid":case "esriSLSSolid":case "none":return L.error("Unexpected: style does not require rasterization"),[0,0];default:return L.error(`Tried to rasterize SLS, but found an unexpected style: ${a}!`),[0,0]}},G=(a,b=100)=>{var c=b/2,d;if("circle"===a||"esriSMSCircle"===a){var g=Math.acos(1-.25/c);b=Math.ceil(V/g/4);0===b&&(b=1);g=la/b;b*=4;a=[];a.push([c,0]);for(d=1;d<b;d++)a.push([c*Math.cos(d*g),-c*Math.sin(d*
g)]);a.push([c,0]);g={rings:[a]};d={xmin:-c,ymin:-c,xmax:c,ymax:c}}else"cross"===a||"esriSMSCross"===a?(g={paths:[[[0,c],[0,-c]],[[c,0],[-c,0]]]},d={xmin:-c,ymin:-c,xmax:c,ymax:c}):"diamond"===a||"esriSMSDiamond"===a?(g={rings:[[[-c,0],[0,c],[c,0],[0,-c],[-c,0]]]},d={xmin:-c,ymin:-c,xmax:c,ymax:c}):"square"===a||"esriSMSSquare"===a?(g={rings:[[[-c,-c],[-c,c],[c,c],[c,-c],[-c,-c]]]},d={xmin:-c,ymin:-c,xmax:c,ymax:c}):"x"===a||"esriSMSX"===a?(g={paths:[[[c,c],[-c,-c]],[[c,-c],[-c,c]]]},d={xmin:-c,ymin:-c,
xmax:c,ymax:c}):"triangle"===a||"esriSMSTriangle"===a?(c=.5773502691896257*b,a=-c,d=2/3*b,b=d-b,g={rings:[[[a,b],[0,d],[c,b],[a,b]]]},d={xmin:a,ymin:b,xmax:c,ymax:d}):"arrow"===a&&(g={rings:[[[-50,50],[50,0],[-50,-50],[-33,-20],[-33,20],[-50,50]]]},d={xmin:-c,ymin:-c,xmax:c,ymax:c});return[d,g]};z.CIMSymbolHelper=v;z.CIMSymbolInflatedSizeHelper=ma;z.OverrideHelper=q;z.getEffectsInflateSize=N;z.slsDashToTemplateArray=K;z.symbolToCIM=function(a){if(!a?.type)return null;let b;switch(a.type){case "cim":return a.data;
case "web-style":return a;case "simple-marker":a=v.fromSimpleMarker(a);if(!a)return null;b=a;break;case "picture-marker":b=v.fromPictureMarker(a);break;case "simple-line":b=v.fromSimpleLineSymbol(a);break;case "simple-fill":b=v.fromSimpleFillSymbol(a);break;case "picture-fill":b=v.fromPictureFillSymbol(a);break;case "text":b=v.fromTextSymbol(a)}return{type:"CIMSymbolReference",symbol:b}};Object.defineProperty(z,Symbol.toStringTag,{value:"Module"})});